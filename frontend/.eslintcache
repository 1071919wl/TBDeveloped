[{"/home/oliver/TBDeveloped/frontend/src/index.js":"1","/home/oliver/TBDeveloped/frontend/src/store/store.js":"2","/home/oliver/TBDeveloped/frontend/src/components/root.js":"3","/home/oliver/TBDeveloped/frontend/src/actions/session_actions.js":"4","/home/oliver/TBDeveloped/frontend/src/util/session_api_util.js":"5","/home/oliver/TBDeveloped/frontend/src/components/app.js":"6","/home/oliver/TBDeveloped/frontend/src/reducers/root_reducer.js":"7","/home/oliver/TBDeveloped/frontend/src/util/route_util.js":"8","/home/oliver/TBDeveloped/frontend/src/reducers/errors_reducer.js":"9","/home/oliver/TBDeveloped/frontend/src/reducers/session_reducer.js":"10","/home/oliver/TBDeveloped/frontend/src/components/nav/navbar_container.js":"11","/home/oliver/TBDeveloped/frontend/src/reducers/entities_reducer.js":"12","/home/oliver/TBDeveloped/frontend/src/components/profile/profile_container.js":"13","/home/oliver/TBDeveloped/frontend/src/components/bulletin_board/bulletin_board_container.js":"14","/home/oliver/TBDeveloped/frontend/src/components/session/signup_form_container.js":"15","/home/oliver/TBDeveloped/frontend/src/components/resolved/resolved_show_container.js":"16","/home/oliver/TBDeveloped/frontend/src/components/question/question_show_container.js":"17","/home/oliver/TBDeveloped/frontend/src/components/session/login_form_container.js":"18","/home/oliver/TBDeveloped/frontend/src/components/chatroom/room_container.js":"19","/home/oliver/TBDeveloped/frontend/src/components/main/main_page.js":"20","/home/oliver/TBDeveloped/frontend/src/components/chatroom/room.js":"21","/home/oliver/TBDeveloped/frontend/src/reducers/questions_errors_reducer.js":"22","/home/oliver/TBDeveloped/frontend/src/reducers/responses_errors_reducer.js":"23","/home/oliver/TBDeveloped/frontend/src/reducers/session_errors_reducer.js":"24","/home/oliver/TBDeveloped/frontend/src/reducers/user_reducer.js":"25","/home/oliver/TBDeveloped/frontend/src/reducers/profile_reducer.js":"26","/home/oliver/TBDeveloped/frontend/src/reducers/messages_reducer.js":"27","/home/oliver/TBDeveloped/frontend/src/reducers/responses_reducer.js":"28","/home/oliver/TBDeveloped/frontend/src/components/resolved/resolved_show.js":"29","/home/oliver/TBDeveloped/frontend/src/reducers/questions_reducer.js":"30","/home/oliver/TBDeveloped/frontend/src/components/bulletin_board/bulletin_board.js":"31","/home/oliver/TBDeveloped/frontend/src/actions/questions_actions.js":"32","/home/oliver/TBDeveloped/frontend/src/components/session/login_form.js":"33","/home/oliver/TBDeveloped/frontend/src/components/question/question_show.js":"34","/home/oliver/TBDeveloped/frontend/src/components/session/signup_form.js":"35","/home/oliver/TBDeveloped/frontend/src/components/nav/navbar.js":"36","/home/oliver/TBDeveloped/frontend/src/components/profile/profile.js":"37","/home/oliver/TBDeveloped/frontend/src/actions/responses_actions.js":"38","/home/oliver/TBDeveloped/frontend/src/actions/messages_actions.js":"39","/home/oliver/TBDeveloped/frontend/src/components/question/question_index.js":"40","/home/oliver/TBDeveloped/frontend/src/components/question/create_question_form_container.js":"41","/home/oliver/TBDeveloped/frontend/src/components/resolved/resolved_index.js":"42","/home/oliver/TBDeveloped/frontend/src/util/questions_api_util.js":"43","/home/oliver/TBDeveloped/frontend/src/components/question/update_question_form_container.js":"44","/home/oliver/TBDeveloped/frontend/src/components/chatroom/create_room.js":"45","/home/oliver/TBDeveloped/frontend/src/components/messenger/messenger_container.js":"46","/home/oliver/TBDeveloped/frontend/src/components/answer/answer_index_item_container.js":"47","/home/oliver/TBDeveloped/frontend/src/components/answer/answer_index_container.js":"48","/home/oliver/TBDeveloped/frontend/src/components/answer/create_answers_form_container.js":"49","/home/oliver/TBDeveloped/frontend/src/components/messenger/messenger.js":"50","/home/oliver/TBDeveloped/frontend/src/util/responses_api_util.js":"51","/home/oliver/TBDeveloped/frontend/src/util/messages_api_util.js":"52","/home/oliver/TBDeveloped/frontend/src/components/question/question_form.js":"53","/home/oliver/TBDeveloped/frontend/src/components/answer/answer_index.js":"54","/home/oliver/TBDeveloped/frontend/src/components/answer/answer_index_item.js":"55","/home/oliver/TBDeveloped/frontend/src/components/answer/answer_form.js":"56"},{"size":1259,"mtime":1611101660843,"results":"57","hashOfConfig":"58"},{"size":930,"mtime":1611074960613,"results":"59","hashOfConfig":"58"},{"size":286,"mtime":1611074960587,"results":"60","hashOfConfig":"58"},{"size":1775,"mtime":1611101660795,"results":"61","hashOfConfig":"58"},{"size":574,"mtime":1611101660857,"results":"62","hashOfConfig":"58"},{"size":1492,"mtime":1611101660814,"results":"63","hashOfConfig":"58"},{"size":272,"mtime":1611074960607,"results":"64","hashOfConfig":"58"},{"size":1237,"mtime":1611074960618,"results":"65","hashOfConfig":"58"},{"size":383,"mtime":1611074960599,"results":"66","hashOfConfig":"58"},{"size":788,"mtime":1611074960610,"results":"67","hashOfConfig":"58"},{"size":511,"mtime":1611101660822,"results":"68","hashOfConfig":"58"},{"size":481,"mtime":1611101660847,"results":"69","hashOfConfig":"58"},{"size":611,"mtime":1611122347418,"results":"70","hashOfConfig":"58"},{"size":466,"mtime":1611074960558,"results":"71","hashOfConfig":"58"},{"size":623,"mtime":1611074960594,"results":"72","hashOfConfig":"58"},{"size":877,"mtime":1611074960586,"results":"73","hashOfConfig":"58"},{"size":1019,"mtime":1611074960580,"results":"74","hashOfConfig":"58"},{"size":513,"mtime":1611074960591,"results":"75","hashOfConfig":"58"},{"size":211,"mtime":1611074960562,"results":"76","hashOfConfig":"58"},{"size":5851,"mtime":1611074960564,"results":"77","hashOfConfig":"58"},{"size":15624,"mtime":1611074960561,"results":"78","hashOfConfig":"58"},{"size":354,"mtime":1611074960602,"results":"79","hashOfConfig":"58"},{"size":354,"mtime":1611074960604,"results":"80","hashOfConfig":"58"},{"size":487,"mtime":1611074960608,"results":"81","hashOfConfig":"58"},{"size":562,"mtime":1611101660853,"results":"82","hashOfConfig":"58"},{"size":297,"mtime":1611074960600,"results":"83","hashOfConfig":"58"},{"size":770,"mtime":1611101660849,"results":"84","hashOfConfig":"58"},{"size":565,"mtime":1611074960606,"results":"85","hashOfConfig":"58"},{"size":1003,"mtime":1611074960585,"results":"86","hashOfConfig":"58"},{"size":847,"mtime":1611074960603,"results":"87","hashOfConfig":"58"},{"size":2319,"mtime":1611122347396,"results":"88","hashOfConfig":"58"},{"size":3119,"mtime":1611122347375,"results":"89","hashOfConfig":"58"},{"size":2712,"mtime":1611074960589,"results":"90","hashOfConfig":"58"},{"size":6660,"mtime":1611074960578,"results":"91","hashOfConfig":"58"},{"size":7095,"mtime":1611074960593,"results":"92","hashOfConfig":"58"},{"size":8629,"mtime":1611122347406,"results":"93","hashOfConfig":"58"},{"size":8257,"mtime":1611122347414,"results":"94","hashOfConfig":"58"},{"size":1155,"mtime":1611074960506,"results":"95","hashOfConfig":"58"},{"size":1352,"mtime":1611122347365,"results":"96","hashOfConfig":"58"},{"size":1095,"mtime":1611122347423,"results":"97","hashOfConfig":"58"},{"size":654,"mtime":1611101660836,"results":"98","hashOfConfig":"58"},{"size":931,"mtime":1611074960583,"results":"99","hashOfConfig":"58"},{"size":696,"mtime":1611074960614,"results":"100","hashOfConfig":"58"},{"size":1111,"mtime":1611074960581,"results":"101","hashOfConfig":"58"},{"size":489,"mtime":1611074960559,"results":"102","hashOfConfig":"58"},{"size":555,"mtime":1611122347403,"results":"103","hashOfConfig":"58"},{"size":551,"mtime":1611074960552,"results":"104","hashOfConfig":"58"},{"size":782,"mtime":1611101660808,"results":"105","hashOfConfig":"58"},{"size":613,"mtime":1611074960553,"results":"106","hashOfConfig":"58"},{"size":3112,"mtime":1611122347400,"results":"107","hashOfConfig":"58"},{"size":813,"mtime":1611074960616,"results":"108","hashOfConfig":"58"},{"size":481,"mtime":1611101660854,"results":"109","hashOfConfig":"58"},{"size":5028,"mtime":1611101660840,"results":"110","hashOfConfig":"58"},{"size":1528,"mtime":1611101660805,"results":"111","hashOfConfig":"58"},{"size":1050,"mtime":1611074960550,"results":"112","hashOfConfig":"58"},{"size":2259,"mtime":1611074960546,"results":"113","hashOfConfig":"58"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},"x4743s",{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"127","usedDeprecatedRules":"116"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"136","usedDeprecatedRules":"116"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"159","usedDeprecatedRules":"116"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"180","messages":"181","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"182","messages":"183","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"186","usedDeprecatedRules":"116"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"189","messages":"190","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"191","messages":"192","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"193","messages":"194","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"195","messages":"196","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"197","messages":"198","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"199","messages":"200","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"201","messages":"202","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"203","messages":"204","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"205","messages":"206","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"207","usedDeprecatedRules":"116"},{"filePath":"208","messages":"209","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"210","messages":"211","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"212","messages":"213","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"214","messages":"215","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"216","messages":"217","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"218","usedDeprecatedRules":"116"},{"filePath":"219","messages":"220","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"221","messages":"222","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"223","messages":"224","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"225","messages":"226","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"227","usedDeprecatedRules":"116"},{"filePath":"228","messages":"229","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"230","usedDeprecatedRules":"116"},{"filePath":"231","messages":"232","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"233","messages":"234","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"235","usedDeprecatedRules":"236"},"/home/oliver/TBDeveloped/frontend/src/index.js",[],["237","238"],"/home/oliver/TBDeveloped/frontend/src/store/store.js",[],"/home/oliver/TBDeveloped/frontend/src/components/root.js",[],"/home/oliver/TBDeveloped/frontend/src/actions/session_actions.js",[],"/home/oliver/TBDeveloped/frontend/src/util/session_api_util.js",[],"/home/oliver/TBDeveloped/frontend/src/components/app.js",["239"],"import React from 'react';\nimport { AuthRoute, ProtectedRoute } from '../util/route_util';\nimport { Route, Switch } from 'react-router-dom';\nimport NavBarContainer from './nav/navbar_container';\nimport MainPage from './main/main_page';\nimport BulletinBoardContainer from './bulletin_board/bulletin_board_container'\nimport QuestionShowContainer from './question/question_show_container'\nimport ResolvedShowContainer from './resolved/resolved_show_container'\nimport LoginFormContainer from './session/login_form_container';\nimport SignupFormContainer from './session/signup_form_container';\nimport ProfileFormContainer from './profile/profile_container'\nimport RoomContainer from './chatroom/room_container'\n// Room component \nimport Room from \"./chatroom/room\"\n\nconst App = () => (\n  <div>\n    <NavBarContainer />\n    <Switch>\n      <Route path=\"/room/:roomID\" component={RoomContainer}/>\n      <AuthRoute exact path=\"/\" component={MainPage} />\n      <AuthRoute exact path=\"/login\" component={LoginFormContainer} />\n      <AuthRoute exact path=\"/signup\" component={SignupFormContainer} />\n      <ProtectedRoute exact path=\"/profile\" component={ProfileFormContainer} />\n      <ProtectedRoute exact path=\"/bulletin\" component={BulletinBoardContainer} />\n      <ProtectedRoute exact path=\"/question/:questionId\" component={QuestionShowContainer} />\n      <ProtectedRoute exact path=\"/resolved/:resolvedId\" component={ResolvedShowContainer} />\n      \n    </Switch>\n  </div>\n);\n\nexport default App;","/home/oliver/TBDeveloped/frontend/src/reducers/root_reducer.js",[],"/home/oliver/TBDeveloped/frontend/src/util/route_util.js",[],"/home/oliver/TBDeveloped/frontend/src/reducers/errors_reducer.js",[],"/home/oliver/TBDeveloped/frontend/src/reducers/session_reducer.js",["240"],"import { RECEIVE_CURRENT_USER, RECEIVE_USER_LOGOUT, RECEIVE_USER_SIGN_IN} from '../actions/session_actions'\n\nconst initialState = { isAuthenticated: false, user: {} };\n\nexport default function(state = initialState, action) {\n\n    switch (action.type) {\n        case RECEIVE_CURRENT_USER:\n            return { \n                ...state,\n                isAuthenticated: !!action.currentUser,\n                user: action.currentUser\n            };\n            \n        case RECEIVE_USER_SIGN_IN:\n            return { \n                ...state,\n                isSignedIn: true\n            }\n\n        case RECEIVE_USER_LOGOUT:\n            return {\n            isAuthenticated: false,\n            user: undefined\n            };\n\n        default:\n            return state;\n\n        \n    }\n\n}\n","/home/oliver/TBDeveloped/frontend/src/components/nav/navbar_container.js",[],"/home/oliver/TBDeveloped/frontend/src/reducers/entities_reducer.js",[],"/home/oliver/TBDeveloped/frontend/src/components/profile/profile_container.js",[],"/home/oliver/TBDeveloped/frontend/src/components/bulletin_board/bulletin_board_container.js",[],"/home/oliver/TBDeveloped/frontend/src/components/session/signup_form_container.js",[],"/home/oliver/TBDeveloped/frontend/src/components/resolved/resolved_show_container.js",[],"/home/oliver/TBDeveloped/frontend/src/components/question/question_show_container.js",[],"/home/oliver/TBDeveloped/frontend/src/components/session/login_form_container.js",[],"/home/oliver/TBDeveloped/frontend/src/components/chatroom/room_container.js",[],"/home/oliver/TBDeveloped/frontend/src/components/main/main_page.js",[],"/home/oliver/TBDeveloped/frontend/src/components/chatroom/room.js",["241","242","243","244","245","246","247","248"],"import React, { useState, useRef, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport io from \"socket.io-client\";\nimport '../../assets/stylesheets/reset.css';\nimport '../../assets/stylesheets/room.scss';\n\n\n\nconst Room = (props) => {\n\n\n    //!TEST\n        let [peers, setPeers] = useState([]);\n        const [mute, setMute] = useState('Mute');\n        const [video, setVideo] = useState('Video Off');\n        const[trigger, setOn] = useState('off');\n    //!TEST\n        // const [test, setTest] = useState(0);\n\n\n    //!TEST\n        \n        \n    // const [mute, setMute] = useState('Mute'); \n    // const [video, setVideo] = useState('Video Off');\n\n    const userVideo = useRef(); //for video html\n    const partnerVideo = useRef(); //for video html\n    const peerRef = useRef(); //rtc peerConnection\n    const socketRef = useRef();\n    const otherUser = useRef(); //otherUser - generated ID\n    const userStream = useRef();\n    // const setPeers = useRef();\n    \n\n    // 1/1/21 test\n    const otherVideos = useRef(new Array());\n    const otherUsers = useRef(new Array()); \n    // const peers = useRef(new Object()); \n    const otherUserName = useRef(\"\")\n    // 1/1/21 test\n\n    useEffect(() => {\n\n        navigator.mediaDevices.getUserMedia({ audio: true, video: true }).then(MediaStream => {\n            userVideo.current.srcObject = MediaStream;\n            userStream.current = MediaStream;\n\n            socketRef.current = io.connect(\"/\");\n            // console.log(socketRef.current)\n\n            \n            // 1/3/21\n            socketRef.current.emit(\"send name\", props.user)\n            socketRef.current.on(\"receive name\", userName => {\n                otherUserName.current = userName\n                setOn('on');\n            })\n            // 1/3/21\n            \n            socketRef.current.emit(\"join room\", props.match.params.roomID);\n            \n            // has the socket emit this event, this event is caught by the server. I believe there's some \n            // 'long polling' involved. Interesting because the connection happens while this is on localhost 3000\n            // and the server is on 5000  \n\n        \n            // i believe the below code only runs when the events happen, after the above event is emitted\n            // it triggers a slew of events on the server side \n            socketRef.current.on('other user', userID => {\n                callUser(userID);\n                otherUser.current = userID;\n                // console.log('user A is in the room already', userID)\n\n\n                // 1/1/21 test\n                otherUsers.current.push(userID) \n                    // may have to concat in a situation where a user joins \n                    // and there are multiple existing users\n                    // they would have to make a call to each of the existing users\n\n                // otherUsers.current.forEach( (user) => {\n                //     callUser(user)\n                // })\n\n                // 1/1/21 test\n            });\n\n            // the above event is emitted from the server back to the client who created a chatroom, it basically \n            // it basically says to the user, hey there's someone in this room \n            // likely whats happening is someone clicked on a room link and this component mounts and they're alerted\n            // that there's another user, and also given the other users socket id \n            // so if the above happens then two users are sitting in the same room. \n            // but their sockets need to connect \n            // this i where the callUser function comes in. Essentially it calls the OTHER USER  \n\n            socketRef.current.on(\"user joined\", userID => {\n\n                otherUser.current = userID;\n\n                // 1/1/21 test\n                otherUsers.current.push(userID)\n                // this may not need concat because it should only\n                // be one user being added at a time \n                // this is from the perspective of existing users in the room \n                // 1/1/21 test\n\n                // console.log('other user joined room')\n            });\n\n            socketRef.current.emit(\"user joined\", userID => {\n                otherUser.current = userID;\n                // console.log('user B just joined the room', userID)\n\n            });\n            \n\n\n            //!TEST - WL - trying to remove video on meeting exit\n            socketRef.current.on( \"user left\", id => {\n                const peerObj = peerRef.current.find(p => p.peerID === id);\n                if (peerObj){\n                    peerObj.peer.destroy();\n                }\n                const peers = peerRef.current.filter(p => p.peerID !== id);\n                peerRef.current = peers;\n                setPeers(peers); //state\n                \n            })\n            // finding the peer, destorying the peer, and removing it from the array\n            // socketRef.current.on(\"disconnect\", () => {\n            //     console.log('dIsCoNnEcTeD')\n                \n            // });\n\n            // socketRef.current.on( \"user-disconnected\", room => {\n            //     console.log('room', room)\n                // const peerObj = peerRef.current.find(p => p.peerID === id);\n                // if (peerObj){\n                //     peerObj.peer.destroy();\n                // }\n                // const peers = peerRef.current.filter(p => p.peerID !== id);\n                // peerRef.current = peers;\n                // setPeers(peers); //state\n\n            // })\n            //finding the peer, destorying the peer, and removing it from the array\n            //!TEST\n\n            socketRef.current.on(\"offer\", handleRecieveCall);\n\n            socketRef.current.on(\"answer\", handleAnswer);\n\n            socketRef.current.on(\"ice-candidate\", handleNewICECandidateMsg);\n\n            // 1/1/21 test\n            socketRef.current.on(\"killconnection\", killIt);\n            // 1/1/21 test\n        });\n\n    }, []);\n\n  \n\n    function callUser(userID) {\n        peerRef.current = createPeer(userID); \n        // userID is the socket.id of the OTHER PERSON in the room \n        // it is used in the createPeer function and set to the peerRef hook  \n        userStream.current.getTracks().forEach(track => peerRef.current.addTrack(track, userStream.current));\n        //giving our peer individual access to our stream so they can view on their end\n    }\n\n\n        // 1/1/21 test\n            // peerRef.current = {};\n            // peerRef.current[userID] = createPeer(userID)\n        // 1/1/21 test\n    // }   \n    // userStream.current was set to the MediaStream above\n    // i imagine i\n\n    function createPeer(userID) {\n        const peer = new RTCPeerConnection({\n            iceServers: [\n                {\n                    urls: \"stun:stun.stunprotocol.org\"\n                },\n                {\n                    urls: 'turn:numb.viagenie.ca',\n                    credential: 'muazkh',\n                    username: 'webrtc@live.com'\n                },\n            ]\n        }); \n        // this constructor takes in an array of objects, these objects are servers which allow peers to connect, should \n        // use your own, look into creating one \n\n        peer.onicecandidate = handleICECandidateEvent;\n        peer.ontrack = handleTrackEvent;\n        peer.onnegotiationneeded = () => handleNegotiationNeededEvent(userID);\n\n        return peer;\n\n        // still in the process of calling the other user/ connecting to the other users socket \n        //starts off by instantiating a RTCPeerConnection, this is used to connect two peers and maintain the connection\n\n    }\n\n    function handleNegotiationNeededEvent(userID) {\n        peerRef.current.createOffer().then(offer => { // createOffer is a RTCPeerConnection method\n            return peerRef.current.setLocalDescription(offer);\n        }).then(() => {\n            const payload = {\n                target: userID,\n                caller: socketRef.current.id,\n                sdp: peerRef.current.localDescription\n            };\n            socketRef.current.emit(\"offer\", payload);\n        }).catch(e => console.log(e));\n    }\n\n    function handleRecieveCall(incoming) {\n        peerRef.current = createPeer();\n        const desc = new RTCSessionDescription(incoming.sdp);\n        peerRef.current.setRemoteDescription(desc).then(() => {\n            userStream.current.getTracks().forEach(track => peerRef.current.addTrack(track, userStream.current));\n        }).then(() => {\n            return peerRef.current.createAnswer();\n        }).then(answer => {\n            return peerRef.current.setLocalDescription(answer);\n        }).then(() => {\n            const payload = {\n                target: incoming.caller,\n                caller: socketRef.current.id,\n                sdp: peerRef.current.localDescription\n            }\n            socketRef.current.emit(\"answer\", payload);\n        })\n    } // this function is handling events related to someone calling the user \n\n    function handleAnswer(message) {\n        const desc = new RTCSessionDescription(message.sdp);\n        peerRef.current.setRemoteDescription(desc).catch(e => console.log(e));\n    } \n\n    // this handles answers both for the caller and the callee because it essentially to establish the connection it needs to \n\n    function handleICECandidateEvent(e) {\n        if (e.candidate) { // is e.candidate the current user / client \n            const payload = {\n                target: otherUser.current,\n                candidate: e.candidate, // this e.candidate is like a ICE config used to establish an RTCPeerConnection\n            }\n            socketRef.current.emit(\"ice-candidate\", payload);\n        }\n    }\n\n    function handleNewICECandidateMsg(incoming) { // incoming maybe whoever is calling \n        const candidate = new RTCIceCandidate(incoming);\n\n        peerRef.current.addIceCandidate(candidate) \n            .catch(e => console.log(e));\n    } // one perspective is from the user you're calling, the other user. Adds this icecandidate to it's peerRef as a key value pair? \n\n    function handleTrackEvent(e) {\n        partnerVideo.current.srcObject = e.streams[0];\n\n    }; // creating a video for the person you're calling? \n\n\n    // function hangUp(e) {\n    //     console.log(peerRef.current)\n    //     console.log(socketRef.current)\n    //     console.log(\"make this hangup button\")\n    //     socketRef.current.emit(\"hang up\")\n    //     console.log(userVideo.current)\n    //     let vid = document.getElementById(\"myVideo\")\n    //     vid.parentNode.removeChild(vid);\n    //     console.log('final step?')\n    // };\n\n\n\n    //cuts connection when user leaves page\n    useEffect(() => {\n        return () => {\n            stopStreamedVideo()\n        }\n    },[])\n\n    \n\n    //! VIDEO function\n    const playStop = () => {\n        let enabled = userVideo.current.srcObject.getVideoTracks()[0].enabled;\n        if(enabled){\n            userVideo.current.srcObject.getVideoTracks()[0].enabled = false;\n            // console.log('false', enabled)\n            setVideo('Video On')\n        }else{\n            userVideo.current.srcObject.getVideoTracks()[0].enabled = true;\n            // console.log('true', enabled)\n            setVideo('Video Off')\n        }\n    }\n\n    //! Cut connection of the person leaving page - media stream only.\n    const stopStreamedVideo = () => {\n        const tracks = userStream.current.getTracks();\n        // console.log(tracks);\n        \n        //!TEST - WL  - Intent here is the black the screen whenever some oneleaves\n        // let enabled = userVideo.current.srcObject.getVideoTracks()[0].enabled;\n        // if(enabled){\n        //     userVideo.current.srcObject.getVideoTracks()[0].enabled = false;\n        // }\n        //!TEST\n        // userVideo.current.srcObject.getVideoTracks()[0].enabled = true;\n\n        //note - stream.stop() is deprecated. Do not use\n        tracks.forEach(function(track) {\n            track.stop();\n            \n        });\n        //! @TOM FYI ADDING IT TO THIS BUTTON\n        testFeatures()\n        // props.history.goBack()\n        // console.log(props.history)\n    }\n\n\n    //! MUTE function\n    const muteStream = () => {\n        const enabled = userVideo.current.srcObject.getAudioTracks()[0].enabled;\n        if(enabled){\n            userVideo.current.srcObject.getAudioTracks()[0].enabled = false;\n            setMute('Unmute')\n            // console.log('false', enabled)\n            // console.log(peerRef)\n            // console.log(peerRef.current)\n            // console.log(userStream)\n            // console.log(userStream.current)\n            \n            // console.log(props.history)\n\n        }else {\n            userVideo.current.srcObject.getAudioTracks()[0].enabled = true;\n            // console.log('true', enabled)\n            setMute('Mute')\n            // console.log(props)\n\n        }\n    }\n    \n    // function muteStream() {\n    //     const tracks = userStream.current.getAudioTracks();\n    //     //note - stream.stop() is deprecated. Do not use\n    //     console.log('audio', tracks)\n    //     tracks.forEach(function(track) {\n    //         track.stop();\n    //     });\n    //     console.log('audio', tracks)\n\n    // }\n    const hangUpButton = () => {\n        onLeave();\n    }\n\n    function onLeave() {\n        userVideo.current.srcObject = null;\n        partnerVideo.current.srcObject = null;\n        peerRef.current.close();\n        peerRef.current.onicecandidate = null;\n        peerRef.current.onaddstream = null;\n        createPeer()\n    };\n\n    // 1/1/21 test\n      const killIt = () => {\n        peerRef.current.close()\n    }\n    // 1/1/21 test\n\n    const testFeatures = () => {\n        // peerRef.current.close(); // works but only if there is a peerRef (only if a connection has been established)\n        //!@TOM added this conditional for your above comment\n        if (peerRef.current){\n            socketRef.current.emit(\"hangUp\", otherUser.current)\n            peerRef.current.close()\n\n        }\n\n    }\n    \n   \n    \n    return (\n        <div className='room_container'>\n            {/* button below now functions with leave meeting */}\n            {/* <button onClick={() => testFeatures()}>Test Button</button> */}\n\n            <div className=\"main\">\n                        <div className=\"video_titles\">\n                            <h1 className=\"title\">{props.user}</h1>\n                            <h1 className=\"title\">{otherUserName.current}</h1>\n                        </div>\n                <div className=\"main_videos\">\n                    <div id=\"video-grid\">\n                        <div>\n                            <video id=\"myVideo\" autoPlay ref={userVideo} muted/>\n                        </div>\n                        <div>\n                            <video autoPlay ref={partnerVideo} />\n                        </div>\n                    </div>\n                </div>\n                <div className=\"main_controls_container\">\n                    <div className='main_controls'>\n                        <div>\n                            <button onClick={() => muteStream()}>{mute}</button> \n                            <button onClick={() => playStop()}>{video}</button>  \n                        </div>\n                        <div>\n                            <Link to='/'>\n                                <button onClick={() => stopStreamedVideo()}>Leave Meeting</button>  \n                            </Link>\n\n                        </div>\n                    </div>\n                </div>   \n            </div>\n\n        </div>\n    );\n};\n\nexport default Room;","/home/oliver/TBDeveloped/frontend/src/reducers/questions_errors_reducer.js",[],"/home/oliver/TBDeveloped/frontend/src/reducers/responses_errors_reducer.js",[],"/home/oliver/TBDeveloped/frontend/src/reducers/session_errors_reducer.js",[],"/home/oliver/TBDeveloped/frontend/src/reducers/user_reducer.js",[],"/home/oliver/TBDeveloped/frontend/src/reducers/profile_reducer.js",[],"/home/oliver/TBDeveloped/frontend/src/reducers/messages_reducer.js",[],"/home/oliver/TBDeveloped/frontend/src/reducers/responses_reducer.js",[],"/home/oliver/TBDeveloped/frontend/src/components/resolved/resolved_show.js",[],"/home/oliver/TBDeveloped/frontend/src/reducers/questions_reducer.js",[],"/home/oliver/TBDeveloped/frontend/src/components/bulletin_board/bulletin_board.js",["249"],"/home/oliver/TBDeveloped/frontend/src/actions/questions_actions.js",["250"],"/home/oliver/TBDeveloped/frontend/src/components/session/login_form.js",[],"/home/oliver/TBDeveloped/frontend/src/components/question/question_show.js",["251"],"import React from 'react' \nimport UpdateQuestionForm from './update_question_form_container'\nimport CreateQuestionFormContainer from '../question/create_question_form_container'\nimport CreateRoom from '../chatroom/create_room'\n\nimport {Link} from 'react-router-dom'\nimport AnswerIndexContainer from '../answer/answer_index_container'\nimport AnswerIndexItemContainer from '../answer/answer_index_item_container'\nimport CreateAnswersFormContainer from '../answer/create_answers_form_container'\n\n\n\n\n\nclass QuestionShow extends React.Component {\n\n    constructor(props){\n        super(props)\n        this.state = {\n            users: []\n        }\n        this.updateQuestion = this.props.updateQuestion.bind(this)\n        this.deleteQuestion = this.props.deleteQuestion.bind(this)\n    }\n\n    componentDidMount(){\n\n        this.props.fetchQuestion(this.props.questionId)\n    }\n    \n    isEmpty(obj){\n        return Object.keys(obj).length === 0\n    }\n\n    \n\n    render(){\n        \n        const question = Object.values(this.props.question)\n        // console.log(question)\n        if(this.isEmpty(question) === true){\n            return(\n                <div></div>\n            )\n        }else{\n            const update = () => {\n                if(question[0].user._id === this.props.userId){\n                    return(\n                        <div>\n                            <UpdateQuestionForm \n                                questionId = {question[0]._id}\n                                subject = {question[0].subject}\n                                content = {question[0].content}\n                                tag = {question[0].tag}\n                                solved = {question[0].solved}\n                                user = {question[0].user._id}\n                            />\n                        </div>\n                    )\n                }else{\n                    // console.log('you are not the owner of this question')\n                }\n            }\n\n            const deleteQuestion = () => {\n                if (question[0].user._id === this.props.userId) {\n                    return(\n                    \n                       <div>\n                        <Link to=\"/bulletin\">\n                        <button onClick={() => this.props.deleteQuestion(question[0]._id)}>\n                                Delete Question\n                        </button>\n                        </Link>\n\n                        </div>\n                    )\n                }\n            }\n\n            const userResponse = () => {\n                return(\n                question[0].responses.map((response, id) => {\n                    if(response.user._id === this.props.userId){\n                        return(\n                            <div key={id}>\n                                <p>------------------- Responses --------------------------------------------</p>\n                                <AnswerIndexItemContainer \n                                    response = {response}\n                                    questionID = {question[0]._id}\n                                    currentUserID = {this.props.userId}\n                                    fetchQuestion = {this.props.fetchQuestion}\n                                   \n                                />\n                            </div>\n                        )                       \n                    }\n                })\n                )\n            }\n            \n            const questionCreatorResponses = () => {\n               \n                if (question[0].responses.length >0) {\n                    \n                    if (question[0].user._id === this.props.userId){\n                    return(\n                        \n                        <div>\n                        <p>------------------- Responses -------------------------------------------</p> \n                            <AnswerIndexContainer \n                                responses = {question[0].responses}\n                                questionID = {question[0]._id}\n                                currentUserID = {this.props.userId}\n                                fetchQuestion = {this.props.fetchQuestion}\n                                \n                               \n                            />\n                        </div>\n                    \n                    )\n                }}else{\n                    <div></div>\n                }\n            }\n            \n             const createAnswers = () => {\n                if (question[0].user._id !== this.props.userId) {\n                    return(\n                        \n                    \n                        <div>\n             <p>------------------- Response Form -------------------------------------</p>     \n\n                            <CreateAnswersFormContainer \n                                questionID = {question[0]._id}\n                                fetchQuestion = {this.props.fetchQuestion}\n                                \n                            />\n         <p>---------------------------------------------------------------------------</p>     \n\n                        </div>\n                    \n                    )\n                }\n            }\n            \n            return(\n                < div className=\"question_container\">\n                    <div className=\"question_description\">\n\n                    {/* {console.log(this.state.users)} */}\n                    <div className=\"question_header\">\n                    <h2>{question[0].subject}</h2>\n                    <p className=\"date_posted\">posted: {Date(question[0].createdAt)}</p>\n                    </div>\n                     <div className=\"question_body\">\n                         <p>{question[0].content}</p>\n\n                    </div>   \n\n                    <div className=\"question_footer\">\n                    { question[0].solved ? <p> &#10003; Solved</p> : <p>&#10007; Unsolved</p> }\n                    <p className=\"tag\">Tag: {question[0].tag}</p>\n                    <h1 className=\"question-author\"> posted by {question[0].user.username}</h1>\n\n                    </div>\n\n                    </div>\n\n                    {update()}\n                    {deleteQuestion()}\n                    {userResponse()}\n                    {questionCreatorResponses()}\n\n\n                    {createAnswers()}\n\n\n                    <div>\n                        <CreateQuestionFormContainer />\n                    </div>\n                    <div>\n                        <CreateRoom />\n                    </div>\n\n                </div>\n            )\n        }\n    }\n}\n\nexport default QuestionShow","/home/oliver/TBDeveloped/frontend/src/components/session/signup_form.js",[],"/home/oliver/TBDeveloped/frontend/src/components/nav/navbar.js",[],"/home/oliver/TBDeveloped/frontend/src/components/profile/profile.js",["252","253"],"/home/oliver/TBDeveloped/frontend/src/actions/responses_actions.js",[],"/home/oliver/TBDeveloped/frontend/src/actions/messages_actions.js",[],"/home/oliver/TBDeveloped/frontend/src/components/question/question_index.js",[],"/home/oliver/TBDeveloped/frontend/src/components/question/create_question_form_container.js",[],"/home/oliver/TBDeveloped/frontend/src/components/resolved/resolved_index.js",[],"/home/oliver/TBDeveloped/frontend/src/util/questions_api_util.js",[],"/home/oliver/TBDeveloped/frontend/src/components/question/update_question_form_container.js",["254"],"import React from 'react'\nimport { connect } from 'react-redux'\nimport { updateQuestion } from '../../actions/questions_actions'\nimport QuestionForm from './question_form'\n\n\nexport class UpdateQuestionForm extends React.Component {\n\n    constructor(props){\n        super(props)\n    }\n\n    componentDidMount() {\n        this.props.receiveReview(this.props.reviewId)\n    }\n\n    render() {\n       const {questionId, subject, content, tag, solved, user} = this.props\n        return (\n            <QuestionForm  \n                questionId = {questionId}\n                subject={subject}\n                content={content}\n                tag={tag}\n                solved={solved}\n                user={user}\n                \n            />\n        );\n    }\n}\n\n\n\nconst mapStateToProps = (state) => {\n    \n    return ({ formType: 'Update Question!', errors: state.errors.questions}\n    )\n}\n\nconst mapDispatchToProps = (dispatch) => ({\n    processForm: (questionId, questionUpdates) => dispatch(updateQuestion(questionId, questionUpdates))\n})\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(QuestionForm)","/home/oliver/TBDeveloped/frontend/src/components/chatroom/create_room.js",[],"/home/oliver/TBDeveloped/frontend/src/components/messenger/messenger_container.js",[],"/home/oliver/TBDeveloped/frontend/src/components/answer/answer_index_item_container.js",[],"/home/oliver/TBDeveloped/frontend/src/components/answer/answer_index_container.js",[],"/home/oliver/TBDeveloped/frontend/src/components/answer/create_answers_form_container.js",["255"],"import {connect} from 'react-redux'\nimport ResponseForm from './answer_form'\nimport {postResponse} from '../../actions/responses_actions'\nimport {fetchQuestion} from '../../actions/questions_actions'\n\n\nconst mapStateToProps = (state, props,)=> { \n    return (\n    {newResponse: {\n        consultation: '',\n        answer: '',\n        user: state.session.user.id\n    },\n    formType: 'Respond',})\n}\n\nconst mapDispatchToProps = dispatch => ({\n    processForm: (questionID, newResponse) => dispatch(postResponse(questionID, newResponse)),\n\n})\n\nexport default connect(mapStateToProps,mapDispatchToProps)(ResponseForm)","/home/oliver/TBDeveloped/frontend/src/components/messenger/messenger.js",["256"],"/home/oliver/TBDeveloped/frontend/src/util/responses_api_util.js",[],"/home/oliver/TBDeveloped/frontend/src/util/messages_api_util.js",[],"/home/oliver/TBDeveloped/frontend/src/components/question/question_form.js",["257"],"import React from 'react'\nimport {Link} from 'react-router-dom'\n\n\nclass QuestionForm extends React.Component{\n    constructor(props){\n        super(props)\n        this.state = {\n            subject: '',\n            content: this.props.content,\n            tag: this.props.tag,\n            solved: this.props.solved,\n            errors: this.props.errors,\n            tagSelected: true\n            \n        }\n\n        this.submit = this.submit.bind(this)\n        this.updateSubmit = this.updateSubmit.bind(this)\n        this.update = this.update.bind(this)\n\n        \n    }\n\n    componentWillReceiveProps(nextProps) {\n\n        this.setState({ errors: nextProps.errors })\n    }\n\n    update(field){\n        return (e) => this.setState({[field]: e.currentTarget.value})\n    }\n\n\n    async submit(e){\n        e.preventDefault();\n        let newQuestion = {\n            subject: this.state.subject,\n            content: this.state.content,\n            solved: this.state.solved,\n            tag: this.state.tag,\n            user: this.props.user\n        };\n        await this.props.processForm(newQuestion)\n        if(Object.keys(this.state.errors).length === 0){\n            this.setState({subject: \"\"})\n            this.setState({content: \"\"})\n            this.props.fetchQuestions()\n        }\n        console.log(this.state.errors)\n\n    }\n\n    updateSubmit(e) {\n        // console.log(this.props.questionId)\n        e.preventDefault();\n        let newQuestion = {\n            \n            content: this.state.content,\n            solved: this.state.solved,\n            tag: this.state.tag,\n            user: this.props.user\n\n        };\n        this.props.processForm(this.props.questionId, newQuestion)\n    }\n    \n    renderErrors() {\n        return (\n            <ul>\n                {Object.keys(this.state.errors).map((error, i) => (\n                    <li key={`error-${i}`}>\n                        {this.state.errors[error]}\n                    </li>\n                ))}\n            </ul>\n        );\n    }\n\n\n    render(){\n        if (this.props.formType === 'Update Question!'){\n            return (\n            <div className = \"updateForm_container\">\n\n                <form onSubmit={this.updateSubmit}>\n                        <h2 className=\"update_form_header\">Edit Post</h2>\n                    <div>\n                    <label>\n                        Content: <textarea type='text' value={this.state.content} onChange={this.update('content')} />\n                    </label>\n                    </div>\n                    <div>\n                    <label>Tag\n                        <select onChange={this.update('tag')} >\n                            <option value=''>--Choose a tag--</option>\n                            <option value='idea'>Idea</option>\n                            <option value='question'>Question</option>\n                        </select>\n                    </label>\n                    </div>\n                    <div>\n                    <label>Solved\n                        <select onChange={this.update('solved')} >\n                            <option value=''>--Choose a tag--</option>\n                            <option value='true'>True</option>\n                            <option value='false'>False</option>\n                        </select>\n                    </label>\n                    </div>\n                    <label>\n                        <button type='submit'>{this.props.formType}</button>\n                    </label>\n\n                </form>\n            </div>\n\n            )\n        }\n        return(\n            <div className=\"createform_container\">\n                <form onSubmit={this.submit}>\n                    <div>\n                        <label>\n                            Subject: <input className=\"question-subject\" type=\"text\" value={this.state.subject} onChange={this.update('subject')}/>\n                        </label>\n                    </div>\n                    <div>\n                        <label>\n                            Content: <textarea className=\"question-subject\" value={this.state.content} onChange={this.update('content')}/>\n                        </label>\n\n                    </div>\n                    <div>\n                        <label>\n                            <select onChange={this.update('tag')} >\n                                <option value='' selected={this.state.tagSelected}>--Choose a tag--</option>\n                                <option value='idea'>Idea</option>\n                                <option value='question'>Question</option>\n                            </select>\n                        </label>\n                    </div>\n                    <div>\n                        <label>\n                                <button type='submit'>{this.props.formType}</button>\n                                {this.renderErrors()}\n                        </label>\n                    </div>\n                    \n\n\n                </form>\n            </div>\n        )\n    }\n}\n\nexport default QuestionForm ","/home/oliver/TBDeveloped/frontend/src/components/answer/answer_index.js",["258"],"import React from 'react'\nimport AnswerIndexItemContainer from '../answer/answer_index_item_container'\nimport { allUsers } from '../../util/session_api_util'\n\nclass AnswerIndex extends React.Component {\n   constructor(props) {\n       super(props)\n\n\n\n       this.createChat = this.createChat.bind(this);\n   }\n\n   async createChat(questionID, responseID, responseUserID, posterID){\n        let newChat = {\n            questionID: questionID, \n            responseID: responseID, \n            posterID: posterID,\n            responseUserID: responseUserID\n        };\n       await this.props.createChat(newChat);\n        this.props.fetchUser()\n\n   }\n    \n\n\n    render() {\n        let questionID = this.props.questionID;\n        return(\n\n        <div>\n            {this.props.responses.map((response, i) =>{\n                    return(\n                    <div key={i}>\n                        <AnswerIndexItemContainer fetchQuestion={this.props.fetchQuestion}  response={response} questionID = {this.props.questionID} currentUserID={this.props.currentUserID} />\n                        <button className=\"chatButton\" onClick={ () => {this.createChat(questionID, response._id, response.user._id, this.props.posterID)}}> Start a chat with {response.user.username}!</button>\n                    </div>\n                    )\n            })}\n        </div>\n        )\n    }\n}\n\nexport default AnswerIndex\n\n// 'responseID': response._id, 'responseUserID':response.user._id, 'posterID': this.props.posterID\n\n                                \n","/home/oliver/TBDeveloped/frontend/src/components/answer/answer_index_item.js",[],"/home/oliver/TBDeveloped/frontend/src/components/answer/answer_form.js",["259"],"import React from 'react'\nimport mongoose from 'mongoose';\n\n\nclass ResponseForm extends React.Component{\n    constructor(props){\n        super(props)\n        this.state = {\n            consultation:'',\n            answer: this.props.answer,\n            errors: \"\"\n        }\n        this.submit = this.submit.bind(this)\n        this.update = this.update.bind(this)\n    }\n\n    update(field){\n        return (e) => this.setState({[field]: e.currentTarget.value})\n    }\n\n\n\n    async submit(e){\n\n        e.preventDefault();\n        let newResponse = {\n            user: this.props.user,\n            consultation: this.state.consultation,\n            answer: this.state.answer\n        };\n       \n\n        if(!newResponse.consultation){\n            this.setState({errors: \"please pick a consultation date\"})\n        }\n        else if(!newResponse.answer){\n            this.setState({errors: \"please write out your response\"})\n\n        }\n        else {\n            await this.props.processForm(this.props.questionID, newResponse)\n            this.props.fetchQuestion(this.props.questionID)\n            //clear errors and form fields\n            this.setState({errors: \"\"})\n            this.setState({consultation: \"\"})\n            this.setState({answer: \"\"})\n\n         \n        }\n    }\n    // componentWillReceiveProps(nextProps) {\n    //     this.setState({ errors: nextProps.errors })\n    // }\n\n   \n   \n\n\n    render(){\n        \n        return(\n            <form onSubmit={this.submit}>\n                <div>\n                    <div className=\"errors\">\n                    <p>{this.state.errors}</p>\n                    </div>\n                <label>\n                    consultation: <input type=\"date\" value={this.state.consultation} onChange={this.update('consultation')}/>\n                </label>\n                </div>\n                <div>\n                <label>\n                    answer: <textarea type='text' value={this.state.answer} onChange={this.update('answer')}/>\n                </label>\n                </div>\n\n                <div>\n                <label>\n                    <button type='submit'>{this.props.formType}</button>\n                </label>\n                </div>\n            </form>\n        )\n    }\n}\n\nexport default ResponseForm ",["260","261"],{"ruleId":"262","replacedBy":"263"},{"ruleId":"264","replacedBy":"265"},{"ruleId":"266","severity":1,"message":"267","line":14,"column":8,"nodeType":"268","messageId":"269","endLine":14,"endColumn":12},{"ruleId":"270","severity":1,"message":"271","line":5,"column":1,"nodeType":"272","endLine":33,"endColumn":2},{"ruleId":"266","severity":1,"message":"273","line":13,"column":14,"nodeType":"268","messageId":"269","endLine":13,"endColumn":19},{"ruleId":"266","severity":1,"message":"274","line":16,"column":15,"nodeType":"268","messageId":"269","endLine":16,"endColumn":22},{"ruleId":"266","severity":1,"message":"275","line":37,"column":11,"nodeType":"268","messageId":"269","endLine":37,"endColumn":22},{"ruleId":"276","severity":1,"message":"277","line":37,"column":32,"nodeType":"278","messageId":"279","endLine":37,"endColumn":43},{"ruleId":"276","severity":1,"message":"277","line":38,"column":31,"nodeType":"278","messageId":"279","endLine":38,"endColumn":42},{"ruleId":"280","severity":1,"message":"281","line":161,"column":8,"nodeType":"282","endLine":161,"endColumn":10,"suggestions":"283"},{"ruleId":"280","severity":1,"message":"284","line":289,"column":7,"nodeType":"282","endLine":289,"endColumn":9,"suggestions":"285"},{"ruleId":"266","severity":1,"message":"286","line":365,"column":11,"nodeType":"268","messageId":"269","endLine":365,"endColumn":23},{"ruleId":"287","severity":1,"message":"288","line":59,"column":21,"nodeType":"289","endLine":59,"endColumn":25},{"ruleId":"290","severity":1,"message":"291","line":78,"column":59,"nodeType":"292","messageId":"293","endLine":78,"endColumn":60},{"ruleId":"294","severity":1,"message":"295","line":83,"column":58,"nodeType":"296","messageId":"297","endLine":83,"endColumn":60},{"ruleId":"266","severity":1,"message":"298","line":40,"column":13,"nodeType":"268","messageId":"269","endLine":40,"endColumn":20},{"ruleId":"294","severity":1,"message":"295","line":133,"column":67,"nodeType":"296","messageId":"297","endLine":133,"endColumn":69},{"ruleId":"299","severity":1,"message":"300","line":9,"column":5,"nodeType":"301","messageId":"302","endLine":11,"endColumn":6},{"ruleId":"266","severity":1,"message":"303","line":4,"column":9,"nodeType":"268","messageId":"269","endLine":4,"endColumn":22},{"ruleId":"280","severity":1,"message":"304","line":73,"column":8,"nodeType":"282","endLine":73,"endColumn":10,"suggestions":"305"},{"ruleId":"266","severity":1,"message":"306","line":2,"column":9,"nodeType":"268","messageId":"269","endLine":2,"endColumn":13},{"ruleId":"266","severity":1,"message":"307","line":3,"column":10,"nodeType":"268","messageId":"269","endLine":3,"endColumn":18},{"ruleId":"266","severity":1,"message":"308","line":2,"column":8,"nodeType":"268","messageId":"269","endLine":2,"endColumn":16},{"ruleId":"262","replacedBy":"309"},{"ruleId":"264","replacedBy":"310"},"no-native-reassign",["311"],"no-negated-in-lhs",["312"],"no-unused-vars","'Room' is defined but never used.","Identifier","unusedVar","import/no-anonymous-default-export","Unexpected default export of anonymous function","ExportDefaultDeclaration","'peers' is assigned a value but never used.","'trigger' is assigned a value but never used.","'otherVideos' is assigned a value but never used.","no-array-constructor","The array literal notation [] is preferable.","NewExpression","preferLiteral","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'callUser', 'handleRecieveCall', 'props.match.params.roomID', and 'props.user'. Either include them or remove the dependency array.","ArrayExpression",["313"],"React Hook useEffect has a missing dependency: 'stopStreamedVideo'. Either include it or remove the dependency array.",["314"],"'hangUpButton' is assigned a value but never used.","jsx-a11y/heading-has-content","Headings must have content and the content must be accessible by a screen reader.","JSXOpeningElement","no-sequences","Unexpected use of comma operator.","SequenceExpression","unexpectedCommaExpression","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","'boolean' is assigned a value but never used.","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","'fetchQuestion' is defined but never used.","React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.",["315"],"'Link' is defined but never used.","'allUsers' is defined but never used.","'mongoose' is defined but never used.",["311"],["312"],"no-global-assign","no-unsafe-negation",{"desc":"316","fix":"317"},{"desc":"318","fix":"319"},{"desc":"320","fix":"321"},"Update the dependencies array to be: [callUser, handleRecieveCall, props.match.params.roomID, props.user]",{"range":"322","text":"323"},"Update the dependencies array to be: [stopStreamedVideo]",{"range":"324","text":"325"},"Update the dependencies array to be: [props]",{"range":"326","text":"327"},[5970,5972],"[callUser, handleRecieveCall, props.match.params.roomID, props.user]",[10779,10781],"[stopStreamedVideo]",[1881,1883],"[props]"]