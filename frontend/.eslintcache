[{"/home/oliver/TBDeveloped/frontend/src/index.js":"1","/home/oliver/TBDeveloped/frontend/src/store/store.js":"2","/home/oliver/TBDeveloped/frontend/src/components/root.js":"3","/home/oliver/TBDeveloped/frontend/src/util/session_api_util.js":"4","/home/oliver/TBDeveloped/frontend/src/actions/session_actions.js":"5","/home/oliver/TBDeveloped/frontend/src/actions/questions_actions.js":"6","/home/oliver/TBDeveloped/frontend/src/components/app.js":"7","/home/oliver/TBDeveloped/frontend/src/util/questions_api_util.js":"8","/home/oliver/TBDeveloped/frontend/src/reducers/root_reducer.js":"9","/home/oliver/TBDeveloped/frontend/src/util/route_util.js":"10","/home/oliver/TBDeveloped/frontend/src/reducers/session_reducer.js":"11","/home/oliver/TBDeveloped/frontend/src/components/resolved/resolved_show_container.js":"12","/home/oliver/TBDeveloped/frontend/src/reducers/errors_reducer.js":"13","/home/oliver/TBDeveloped/frontend/src/components/nav/navbar_container.js":"14","/home/oliver/TBDeveloped/frontend/src/reducers/entities_reducer.js":"15","/home/oliver/TBDeveloped/frontend/src/components/profile/profile_container.js":"16","/home/oliver/TBDeveloped/frontend/src/components/question/question_show_container.js":"17","/home/oliver/TBDeveloped/frontend/src/components/main/main_page.js":"18","/home/oliver/TBDeveloped/frontend/src/components/session/signup_form_container.js":"19","/home/oliver/TBDeveloped/frontend/src/components/bulletin_board/bulletin_board_container.js":"20","/home/oliver/TBDeveloped/frontend/src/components/session/login_form_container.js":"21","/home/oliver/TBDeveloped/frontend/src/components/chatroom/room.js":"22","/home/oliver/TBDeveloped/frontend/src/reducers/session_errors_reducer.js":"23","/home/oliver/TBDeveloped/frontend/src/components/resolved/resolved_show.js":"24","/home/oliver/TBDeveloped/frontend/src/reducers/responses_errors_reducer.js":"25","/home/oliver/TBDeveloped/frontend/src/reducers/responses_reducer.js":"26","/home/oliver/TBDeveloped/frontend/src/reducers/questions_reducer.js":"27","/home/oliver/TBDeveloped/frontend/src/reducers/questions_errors_reducer.js":"28","/home/oliver/TBDeveloped/frontend/src/components/profile/profile.js":"29","/home/oliver/TBDeveloped/frontend/src/components/session/login_form.js":"30","/home/oliver/TBDeveloped/frontend/src/components/bulletin_board/bulletin_board.js":"31","/home/oliver/TBDeveloped/frontend/src/components/question/question_show.js":"32","/home/oliver/TBDeveloped/frontend/src/components/session/signup_form.js":"33","/home/oliver/TBDeveloped/frontend/src/components/nav/navbar.js":"34","/home/oliver/TBDeveloped/frontend/src/actions/responses_actions.js":"35","/home/oliver/TBDeveloped/frontend/src/components/question/create_question_form_container.js":"36","/home/oliver/TBDeveloped/frontend/src/components/question/question_index.js":"37","/home/oliver/TBDeveloped/frontend/src/components/question/update_question_form_container.js":"38","/home/oliver/TBDeveloped/frontend/src/components/resolved/resolved_index.js":"39","/home/oliver/TBDeveloped/frontend/src/components/answer/create_answers_form_container.js":"40","/home/oliver/TBDeveloped/frontend/src/components/answer/answer_index.js":"41","/home/oliver/TBDeveloped/frontend/src/util/responses_api_util.js":"42","/home/oliver/TBDeveloped/frontend/src/components/question/question_form.js":"43","/home/oliver/TBDeveloped/frontend/src/components/answer/answer_form.js":"44","/home/oliver/TBDeveloped/frontend/src/components/answer/answer_index_item.js":"45","/home/oliver/TBDeveloped/frontend/src/components/chatroom/create_room.js":"46","/home/oliver/TBDeveloped/frontend/src/components/answer/answer_index_container.js":"47"},{"size":1350,"mtime":1609455511607,"results":"48","hashOfConfig":"49"},{"size":327,"mtime":1609216573784,"results":"50","hashOfConfig":"49"},{"size":286,"mtime":1609216573753,"results":"51","hashOfConfig":"49"},{"size":421,"mtime":1609216573790,"results":"52","hashOfConfig":"49"},{"size":1430,"mtime":1609455511573,"results":"53","hashOfConfig":"49"},{"size":2385,"mtime":1609544905112,"results":"54","hashOfConfig":"49"},{"size":1432,"mtime":1609538339259,"results":"55","hashOfConfig":"49"},{"size":570,"mtime":1609455511685,"results":"56","hashOfConfig":"49"},{"size":272,"mtime":1609455511670,"results":"57","hashOfConfig":"49"},{"size":1237,"mtime":1609538354501,"results":"58","hashOfConfig":"49"},{"size":788,"mtime":1609216573781,"results":"59","hashOfConfig":"49"},{"size":877,"mtime":1609455964634,"results":"60","hashOfConfig":"49"},{"size":383,"mtime":1609538354491,"results":"61","hashOfConfig":"49"},{"size":283,"mtime":1609216573744,"results":"62","hashOfConfig":"49"},{"size":249,"mtime":1609538354486,"results":"63","hashOfConfig":"49"},{"size":229,"mtime":1609216573749,"results":"64","hashOfConfig":"49"},{"size":1016,"mtime":1609455964615,"results":"65","hashOfConfig":"49"},{"size":289,"mtime":1609455964587,"results":"66","hashOfConfig":"49"},{"size":448,"mtime":1609216573764,"results":"67","hashOfConfig":"49"},{"size":466,"mtime":1609538593721,"results":"68","hashOfConfig":"49"},{"size":402,"mtime":1609216573759,"results":"69","hashOfConfig":"49"},{"size":9405,"mtime":1609572647147,"results":"70","hashOfConfig":"49"},{"size":415,"mtime":1609216573779,"results":"71","hashOfConfig":"49"},{"size":1003,"mtime":1609455964628,"results":"72","hashOfConfig":"49"},{"size":354,"mtime":1609538354493,"results":"73","hashOfConfig":"49"},{"size":565,"mtime":1609543674678,"results":"74","hashOfConfig":"49"},{"size":848,"mtime":1609455964638,"results":"75","hashOfConfig":"49"},{"size":354,"mtime":1609455511649,"results":"76","hashOfConfig":"49"},{"size":477,"mtime":1609455964593,"results":"77","hashOfConfig":"49"},{"size":1548,"mtime":1609455511597,"results":"78","hashOfConfig":"49"},{"size":1787,"mtime":1609455964578,"results":"79","hashOfConfig":"49"},{"size":4529,"mtime":1609543339484,"results":"80","hashOfConfig":"49"},{"size":2317,"mtime":1609216573762,"results":"81","hashOfConfig":"49"},{"size":1483,"mtime":1609538354579,"results":"82","hashOfConfig":"49"},{"size":1155,"mtime":1609543688159,"results":"83","hashOfConfig":"49"},{"size":547,"mtime":1609455964599,"results":"84","hashOfConfig":"49"},{"size":903,"mtime":1609455964606,"results":"85","hashOfConfig":"49"},{"size":1061,"mtime":1609455964619,"results":"86","hashOfConfig":"49"},{"size":699,"mtime":1609455964623,"results":"87","hashOfConfig":"49"},{"size":549,"mtime":1609538354481,"results":"88","hashOfConfig":"49"},{"size":582,"mtime":1609544249275,"results":"89","hashOfConfig":"49"},{"size":813,"mtime":1609538354497,"results":"90","hashOfConfig":"49"},{"size":3147,"mtime":1609455964603,"results":"91","hashOfConfig":"49"},{"size":1535,"mtime":1609538354472,"results":"92","hashOfConfig":"49"},{"size":570,"mtime":1609538354478,"results":"93","hashOfConfig":"49"},{"size":453,"mtime":1609538339281,"results":"94","hashOfConfig":"49"},{"size":484,"mtime":1609543350701,"results":"95","hashOfConfig":"49"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"99"},"x4743s",{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110","usedDeprecatedRules":"99"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121","usedDeprecatedRules":"99"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"144","usedDeprecatedRules":"99"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"177","usedDeprecatedRules":"99"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"186","messages":"187","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"190","usedDeprecatedRules":"99"},{"filePath":"191","messages":"192","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"193"},{"filePath":"194","messages":"195","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"196","messages":"197","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},"/home/oliver/TBDeveloped/frontend/src/index.js",["198"],"import React from 'react'\nimport ReactDOM from 'react-dom'\n\nimport Root from './components/root'\nimport configureStore from './store/store'\nimport jwt_decode from 'jwt-decode'\nimport { setAuthToken } from './util/session_api_util'\nimport { logout } from './actions/session_actions'\n\n// test\nimport axios from \"axios\";\nimport { postQuestion, fetchQuestions, updateQuestion, deleteQuestion } from \"./actions/questions_actions\"\n// import { postQuestion, updateQuestion } from './util/questions_api_util'\n//test\n\n\ndocument.addEventListener('DOMContentLoaded', () => {\n  let store;\n  if (localStorage.jwtToken) {\n    setAuthToken(localStorage.jwtToken);\n    const decodedUser = jwt_decode(localStorage.jwtToken)\n    const preloadedState = { session: { isAuthenticated: true, user: decodedUser } };\n\n    store = configureStore(preloadedState)\n    const currentTime = Date.now() / 1000;\n    if (decodedUser.exp < currentTime) {\n      store.dispatch(logout());\n      window.location.href = '/login'\n    }\n\n  }\n  else {\n    store = configureStore({})\n  }\n\n  // test \n  window.store = store; \n  window.axios = axios; \n  window.deleteQuestion = deleteQuestion; \n  window.fetchQuestions = fetchQuestions; \n  window.updateQuestion = updateQuestion; \n  //test \n\n  const root = document.getElementById('root')\n  ReactDOM.render(<Root store={store} />, root)\n\n})\n\n\n\n",["199","200"],"/home/oliver/TBDeveloped/frontend/src/store/store.js",[],"/home/oliver/TBDeveloped/frontend/src/components/root.js",[],"/home/oliver/TBDeveloped/frontend/src/util/session_api_util.js",[],"/home/oliver/TBDeveloped/frontend/src/actions/session_actions.js",[],"/home/oliver/TBDeveloped/frontend/src/actions/questions_actions.js",["201"],"import * as QuestionsAPIUtil from \"../util/questions_api_util\"\n\nexport const RECEIVE_QUESTIONS = \"RECEIVE_QUESTIONS\";\nexport const RECEIVE_QUESTION = \"RECEIVE_QUESTION\"\nexport const REMOVE_QUESTION = \"REMOVE_QUESTION\"\nexport const RECEIVE_ERRORS = \"RECEIVE_ERRORS\"\n\n\n//test\nexport const RECEIVE_RESPONSE = 'RECEIVE_RESPONSE';\nexport const receiveResponse = (response) => {\n    return {\n        type: RECEIVE_RESPONSE,\n        response\n    }\n}\n//test\n\nconst receiveQuestions = (questions) => {\n    return {\n        type: RECEIVE_QUESTIONS, \n        questions // ES6 synthax = questions: questions \n    }\n}\n\nconst receiveQuestion = (question) => {\n    return {\n        type: RECEIVE_QUESTION, \n        question\n    }\n}\n\nconst removeQuestion = (question) => {\n    return {\n        type: REMOVE_QUESTION,\n        question \n    }\n} \n// model action should find the question by it's id and delete it, but return the question in case we need to remove it \n// from the state\n\nconst receiveQuestionErrors = (errors) => {\n    return {\n        type: RECEIVE_ERRORS, \n        errors \n    }\n}\n\nexport const fetchQuestions = () => (dispatch) => {\n    return QuestionsAPIUtil.fetchQuestions()\n        .then( res => { dispatch(receiveQuestions(res.data)) } )\n        \n        .catch(err => dispatch(receiveQuestionErrors(err)))\n}\n\nexport const fetchQuestion = (questionId) => (dispatch) => {\n    return QuestionsAPIUtil.fetchQuestion(questionId)\n        .then(res => ( dispatch(receiveQuestion(res.data)), dispatch(receiveResponse(res.data.responses))))\n        .catch(err => dispatch(receiveQuestionErrors(err)))\n}\n\nexport const postQuestion = (newQuestion) => (dispatch) => {\n    return QuestionsAPIUtil.postQuestion(newQuestion)\n        .then( res => { dispatch(receiveQuestion(res.data)) })\n        .catch( errors => { dispatch(receiveQuestionErrors(errors.response.data)) })\n}\n\n\nexport const updateQuestion = (questionId, questionUpdates) => (dispatch) =>{\n    return QuestionsAPIUtil.updateQuestion(questionId, questionUpdates)\n        .then( res => { dispatch(receiveQuestion(res.data))})\n        .catch(err => dispatch(receiveQuestionErrors(err)))\n}\n\nexport const deleteQuestion = (questionId) => (dispatch) => {\n    return QuestionsAPIUtil.deleteQuestion(questionId)\n        .then( res => { dispatch(removeQuestion(res.data)) })\n        .catch(err => dispatch(receiveQuestionErrors(err)))\n}\n\n","/home/oliver/TBDeveloped/frontend/src/components/app.js",[],"/home/oliver/TBDeveloped/frontend/src/util/questions_api_util.js",[],"/home/oliver/TBDeveloped/frontend/src/reducers/root_reducer.js",[],"/home/oliver/TBDeveloped/frontend/src/util/route_util.js",[],"/home/oliver/TBDeveloped/frontend/src/reducers/session_reducer.js",["202"],"import { RECEIVE_CURRENT_USER, RECEIVE_USER_LOGOUT, RECEIVE_USER_SIGN_IN} from '../actions/session_actions'\n\nconst initialState = { isAuthenticated: false, user: {} };\n\nexport default function(state = initialState, action) {\n\n    switch (action.type) {\n        case RECEIVE_CURRENT_USER:\n            return { \n                ...state,\n                isAuthenticated: !!action.currentUser,\n                user: action.currentUser\n            };\n            \n        case RECEIVE_USER_SIGN_IN:\n            return { \n                ...state,\n                isSignedIn: true\n            }\n\n        case RECEIVE_USER_LOGOUT:\n            return {\n            isAuthenticated: false,\n            user: undefined\n            };\n\n        default:\n            return state;\n\n        \n    }\n\n}\n","/home/oliver/TBDeveloped/frontend/src/components/resolved/resolved_show_container.js",[],"/home/oliver/TBDeveloped/frontend/src/reducers/errors_reducer.js",[],"/home/oliver/TBDeveloped/frontend/src/components/nav/navbar_container.js",[],"/home/oliver/TBDeveloped/frontend/src/reducers/entities_reducer.js",[],"/home/oliver/TBDeveloped/frontend/src/components/profile/profile_container.js",[],"/home/oliver/TBDeveloped/frontend/src/components/question/question_show_container.js",[],"/home/oliver/TBDeveloped/frontend/src/components/main/main_page.js",[],"/home/oliver/TBDeveloped/frontend/src/components/session/signup_form_container.js",[],"/home/oliver/TBDeveloped/frontend/src/components/bulletin_board/bulletin_board_container.js",[],"/home/oliver/TBDeveloped/frontend/src/components/session/login_form_container.js",[],"/home/oliver/TBDeveloped/frontend/src/components/chatroom/room.js",["203","204","205","206"],"import React, { useState, useRef, useEffect } from \"react\";\nimport { Link, redirect } from \"react-router-dom\";\nimport io from \"socket.io-client\";\n\nconst Room = (props) => {\n    //!TEST\n        let [peers, setPeers] = useState([]);\n        let [test, setTest] = useState([])\n    //!TEST\n\n\n    const userVideo = useRef();\n    const partnerVideo = useRef();\n    const peerRef = useRef();\n    const socketRef = useRef();\n    const otherUser = useRef();\n    const userStream = useRef();\n    // const setPeers = useRef();\n\n    useEffect(() => {\n        navigator.mediaDevices.getUserMedia({ audio: true, video: true }).then(stream => {\n            userVideo.current.srcObject = stream;\n            userStream.current = stream;\n\n        //!delete\n        console.log(userStream.current)\n        console.log('getTracks', userStream.current.getTracks())\n        //!delete\n\n            socketRef.current = io.connect(\"/\");\n            console.log(socketRef.current)\n\n            socketRef.current.emit(\"join room\", props.match.params.roomID);\n\n            socketRef.current.on('other user', userID => {\n                callUser(userID);\n                otherUser.current = userID;\n                console.log(otherUser.current)\n                // setTest(test.push(socketRef.current.id));\n                // setTest(test.push(otherUser.current))\n                console.log(test)\n            });\n\n            socketRef.current.on(\"user joined\", userID => {\n\n                otherUser.current = userID;\n                // setTest(test.push(socketRef.current.id));\n                // setTest(test.push(otherUser.current))\n                console.log(test)\n\n            });\n\n\n            //!TEST - WL - trying to remove video on meeting exit\n            socketRef.current.on( \"user left\", id => {\n                const peerObj = peerRef.current.find(p => p.peerID === id);\n                if (peerObj){\n                    peerObj.peer.destroy();\n                }\n                const peers = peerRef.current.filter(p => p.peerID !== id);\n                peerRef.current = peers;\n                setPeers(peers); //state\n\n            })\n            // finding the peer, destorying the peer, and removing it from the array\n            //!TEST\n\n            socketRef.current.on(\"offer\", handleRecieveCall);\n\n            socketRef.current.on(\"answer\", handleAnswer);\n\n            socketRef.current.on(\"ice-candidate\", handleNewICECandidateMsg);\n        });\n\n    }, []);\n\n    function callUser(userID) {\n        peerRef.current = createPeer(userID);\n        userStream.current.getTracks().forEach(track => peerRef.current.addTrack(track, userStream.current));\n    }\n\n    function createPeer(userID) {\n        const peer = new RTCPeerConnection({\n            iceServers: [\n                {\n                    urls: \"stun:stun.stunprotocol.org\"\n                },\n                {\n                    urls: 'turn:numb.viagenie.ca',\n                    credential: 'muazkh',\n                    username: 'webrtc@live.com'\n                },\n            ]\n        });\n\n        peer.onicecandidate = handleICECandidateEvent;\n        peer.ontrack = handleTrackEvent;\n        peer.onnegotiationneeded = () => handleNegotiationNeededEvent(userID);\n\n        return peer;\n    }\n\n    function handleNegotiationNeededEvent(userID) {\n        peerRef.current.createOffer().then(offer => {\n            return peerRef.current.setLocalDescription(offer);\n        }).then(() => {\n            const payload = {\n                target: userID,\n                caller: socketRef.current.id,\n                sdp: peerRef.current.localDescription\n            };\n            socketRef.current.emit(\"offer\", payload);\n        }).catch(e => console.log(e));\n    }\n\n    function handleRecieveCall(incoming) {\n        peerRef.current = createPeer();\n        const desc = new RTCSessionDescription(incoming.sdp);\n        peerRef.current.setRemoteDescription(desc).then(() => {\n            userStream.current.getTracks().forEach(track => peerRef.current.addTrack(track, userStream.current));\n        }).then(() => {\n            return peerRef.current.createAnswer();\n        }).then(answer => {\n            return peerRef.current.setLocalDescription(answer);\n        }).then(() => {\n            const payload = {\n                target: incoming.caller,\n                caller: socketRef.current.id,\n                sdp: peerRef.current.localDescription\n            }\n            socketRef.current.emit(\"answer\", payload);\n        })\n    }\n\n    function handleAnswer(message) {\n        const desc = new RTCSessionDescription(message.sdp);\n        peerRef.current.setRemoteDescription(desc).catch(e => console.log(e));\n    }\n\n    function handleICECandidateEvent(e) {\n        if (e.candidate) {\n            const payload = {\n                target: otherUser.current,\n                candidate: e.candidate,\n                test: 'incoming test'\n            }\n            socketRef.current.emit(\"ice-candidate\", payload);\n        }\n    }\n\n    function handleNewICECandidateMsg(incoming) {\n\n        const candidate = new RTCIceCandidate(incoming);\n        // console.log(incoming);\n        // console.log(candidate);\n        peerRef.current.addIceCandidate(candidate)\n            .catch(e => console.log(e));\n    }\n\n    function handleTrackEvent(e) {\n        partnerVideo.current.srcObject = e.streams[0];\n    };\n\n\n    //! VIDEO function\n    const playStop = () => {\n        let enabled = userVideo.current.srcObject.getVideoTracks()[0].enabled;\n        if(enabled){\n            userVideo.current.srcObject.getVideoTracks()[0].enabled = false;\n            console.log('false', enabled)\n        }else{\n            userVideo.current.srcObject.getVideoTracks()[0].enabled = true;\n            console.log('true', enabled)\n        }\n    }\n\n    //! Cut connection of the person leaving page.\n    const stopStreamedVideo = () => {\n        const tracks = userStream.current.getTracks();\n        console.log(tracks);\n        console.log(socketRef.current)\n        socketRef.current.emit('remove-user')\n        \n        //!TEST - WL  - Intent here is the black the screen whenever some one leaves\n        // let enabled = userVideo.current.srcObject.getVideoTracks()[0].enabled;\n        // if(enabled){\n        //     userVideo.current.srcObject.getVideoTracks()[0].enabled = false;\n        // }\n        //!TEST\n        userVideo.current.srcObject.getVideoTracks()[0].enabled = true;\n\n        peerRef.current.close();\n        //note - stream.stop() is deprecated. Do not use\n        tracks.forEach(function(track) {\n            track.stop();\n            \n        });\n        console.log(test)\n        // debugger\n        setTest(test.push('howdy'))\n    }\n\n    //? is this leaving the call or just shutting off camera?\n    // function stopUserStreamedVideo() {\n    //     const tracks = userVideo.current.srcObject.getTracks();\n    //     console.log('user',tracks);\n\n    //     //note - stream.stop() is deprecated. Do not use\n    //     tracks.forEach(function(track) {\n    //         track.stop();\n    //     });\n        \n\n    // }\n    \n    //? is this leaving the call or just shutting off camera?\n    // function stopPartnerStreamedVideo() {\n    //     const tracks = partnerVideo.current.srcObject.getTracks();\n    //     console.log('partner',tracks);\n\n    //     //note - stream.stop() is deprecated. Do not use\n    //     tracks.forEach(function(track) {\n    //         track.stop();\n    //     });\n    // }\n\n\n    //! MUTE function\n    const muteStream = () => {\n        const enabled = userVideo.current.srcObject.getAudioTracks()[0].enabled;\n        if(enabled){\n            userVideo.current.srcObject.getAudioTracks()[0].enabled = false;\n            // console.log('false', enabled)\n            console.log(peerRef)\n            console.log(peerRef.current)\n        }else {\n            userVideo.current.srcObject.getAudioTracks()[0].enabled = true;\n            // console.log('true', enabled)\n            console.log(peerRef)\n            console.log(peerRef.current)\n        }\n    }\n    \n    // function muteStream() {\n    //     const tracks = userStream.current.getAudioTracks();\n    //     //note - stream.stop() is deprecated. Do not use\n    //     console.log('audio', tracks)\n    //     tracks.forEach(function(track) {\n    //         track.stop();\n    //     });\n    //     console.log('audio', tracks)\n\n    // }\n    const hangUpButton = () => {\n        onLeave();\n    }\n\n    function onLeave() {\n        userVideo.current.srcObject = null;\n        console.log(peerRef.current)\n        partnerVideo.current.srcObject = null;\n        peerRef.current.close();\n        console.log(peerRef.current)\n        peerRef.current.onicecandidate = null;\n        peerRef.current.onaddstream = null;\n        createPeer()\n    };\n\n    return (\n        <div>\n            <p>Hello</p>\n            <video autoPlay ref={userVideo} muted/>\n            <video autoPlay ref={partnerVideo} />\n\n\n            {/* Leave meeting works but the other user sees a frozen screen */}\n            <Link to='/'>\n                <button onClick={() => stopStreamedVideo()}>Leave Meeting</button>  \n            </Link>\n\n\n            {/* BELOW IS WORKING FOR BOTH PARTY, DONT DELETE */}\n            <button onClick={() => muteStream()}>MuteControl</button> \n            <button onClick={() => playStop()}>Video On/Off</button>  \n\n\n        </div>\n    );\n};\n\nexport default Room;","/home/oliver/TBDeveloped/frontend/src/reducers/session_errors_reducer.js",[],"/home/oliver/TBDeveloped/frontend/src/components/resolved/resolved_show.js",[],"/home/oliver/TBDeveloped/frontend/src/reducers/responses_errors_reducer.js",[],"/home/oliver/TBDeveloped/frontend/src/reducers/responses_reducer.js",[],"/home/oliver/TBDeveloped/frontend/src/reducers/questions_reducer.js",[],"/home/oliver/TBDeveloped/frontend/src/reducers/questions_errors_reducer.js",[],"/home/oliver/TBDeveloped/frontend/src/components/profile/profile.js",[],"/home/oliver/TBDeveloped/frontend/src/components/session/login_form.js",[],"/home/oliver/TBDeveloped/frontend/src/components/bulletin_board/bulletin_board.js",[],"/home/oliver/TBDeveloped/frontend/src/components/question/question_show.js",[],"/home/oliver/TBDeveloped/frontend/src/components/session/signup_form.js",[],"/home/oliver/TBDeveloped/frontend/src/components/nav/navbar.js",[],"/home/oliver/TBDeveloped/frontend/src/actions/responses_actions.js",[],"/home/oliver/TBDeveloped/frontend/src/components/question/create_question_form_container.js",[],"/home/oliver/TBDeveloped/frontend/src/components/question/question_index.js",[],"/home/oliver/TBDeveloped/frontend/src/components/question/update_question_form_container.js",["207"],"import React from 'react'\nimport { connect } from 'react-redux'\nimport { updateQuestion } from '../../actions/questions_actions'\nimport QuestionForm from './question_form'\n\n\nexport class UpdateQuestionForm extends React.Component {\n\n    constructor(props){\n        super(props)\n    }\n\n    componentDidMount() {\n        this.props.receiveReview(this.props.reviewId)\n    }\n\n    render() {\n       const {questionId, subject, content, tag, solved, user} = this.props\n        return (\n            <QuestionForm  \n                questionId = {questionId}\n                subject={subject}\n                content={content}\n                tag={tag}\n                solved={solved}\n                user={user}\n            />\n        );\n    }\n}\n\n\n\nconst mapStateToProps = (state) => {\n    \n    return({ formType: 'Update Question!'}\n    )\n}\n\nconst mapDispatchToProps = (dispatch) => ({\n    processForm: (questionId, questionUpdates) => dispatch(updateQuestion(questionId, questionUpdates))\n})\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(QuestionForm)","/home/oliver/TBDeveloped/frontend/src/components/resolved/resolved_index.js",[],"/home/oliver/TBDeveloped/frontend/src/components/answer/create_answers_form_container.js",[],"/home/oliver/TBDeveloped/frontend/src/components/answer/answer_index.js",[],"/home/oliver/TBDeveloped/frontend/src/util/responses_api_util.js",[],"/home/oliver/TBDeveloped/frontend/src/components/question/question_form.js",[],"/home/oliver/TBDeveloped/frontend/src/components/answer/answer_form.js",["208"],"import React from 'react'\nimport mongoose from 'mongoose';\n\n\nclass ResponseForm extends React.Component{\n    constructor(props){\n        super(props)\n        this.state = {\n            consultation: this.props.consultation,\n            answer: this.props.answer,\n           \n        }\n        this.submit = this.submit.bind(this)\n        this.update = this.update.bind(this)\n    }\n\n    update(field){\n        return (e) => this.setState({[field]: e.currentTarget.value})\n    }\n\n\n    submit(e){\n\n        e.preventDefault();\n        let newResponse = {\n            user: this.props.user,\n            consultation: this.state.consultation,\n            answer: this.state.answer\n        };\n         this.props.processForm(this.props.questionID, newResponse)\n    }\n\n   \n\n\n    render(){\n        return(\n            <form onSubmit={this.submit}>\n                <div>\n                <label>\n                    consultation: <input type=\"date\" placeholder={this.props.newResponse.consultation} onChange={this.update('consultation')}/>\n                </label>\n                </div>\n                <div>\n                <label>\n                    answer: <textarea type='text' placeholder={this.props.newResponse.answer} onChange={this.update('answer')}/>\n                </label>\n                </div>\n\n                <div>\n                <label>\n                    <button type='submit'>{this.props.formType}</button>\n                </label>\n                </div>\n            </form>\n        )\n    }\n}\n\nexport default ResponseForm ","/home/oliver/TBDeveloped/frontend/src/components/answer/answer_index_item.js",[],["209","210"],"/home/oliver/TBDeveloped/frontend/src/components/chatroom/create_room.js",[],"/home/oliver/TBDeveloped/frontend/src/components/answer/answer_index_container.js",[],{"ruleId":"211","severity":1,"message":"212","line":12,"column":10,"nodeType":"213","messageId":"214","endLine":12,"endColumn":22},{"ruleId":"215","replacedBy":"216"},{"ruleId":"217","replacedBy":"218"},{"ruleId":"219","severity":1,"message":"220","line":58,"column":59,"nodeType":"221","messageId":"222","endLine":58,"endColumn":60},{"ruleId":"223","severity":1,"message":"224","line":5,"column":1,"nodeType":"225","endLine":33,"endColumn":2},{"ruleId":"211","severity":1,"message":"226","line":2,"column":16,"nodeType":"213","messageId":"214","endLine":2,"endColumn":24},{"ruleId":"211","severity":1,"message":"227","line":7,"column":14,"nodeType":"213","messageId":"214","endLine":7,"endColumn":19},{"ruleId":"228","severity":1,"message":"229","line":75,"column":8,"nodeType":"230","endLine":75,"endColumn":10,"suggestions":"231"},{"ruleId":"211","severity":1,"message":"232","line":254,"column":11,"nodeType":"213","messageId":"214","endLine":254,"endColumn":23},{"ruleId":"233","severity":1,"message":"234","line":9,"column":5,"nodeType":"235","messageId":"236","endLine":11,"endColumn":6},{"ruleId":"211","severity":1,"message":"237","line":2,"column":8,"nodeType":"213","messageId":"214","endLine":2,"endColumn":16},{"ruleId":"215","replacedBy":"238"},{"ruleId":"217","replacedBy":"239"},"no-unused-vars","'postQuestion' is defined but never used.","Identifier","unusedVar","no-native-reassign",["240"],"no-negated-in-lhs",["241"],"no-sequences","Unexpected use of comma operator.","SequenceExpression","unexpectedCommaExpression","import/no-anonymous-default-export","Unexpected default export of anonymous function","ExportDefaultDeclaration","'redirect' is defined but never used.","'peers' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'callUser', 'handleRecieveCall', 'props.match.params.roomID', and 'test'. Either include them or remove the dependency array.","ArrayExpression",["242"],"'hangUpButton' is assigned a value but never used.","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","'mongoose' is defined but never used.",["240"],["241"],"no-global-assign","no-unsafe-negation",{"desc":"243","fix":"244"},"Update the dependencies array to be: [callUser, handleRecieveCall, props.match.params.roomID, test]",{"range":"245","text":"246"},[2451,2453],"[callUser, handleRecieveCall, props.match.params.roomID, test]"]