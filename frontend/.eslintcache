[{"/Users/shanesharareh/Desktop/App Academy/MERN/TBDeveloped/frontend/src/index.js":"1","/Users/shanesharareh/Desktop/App Academy/MERN/TBDeveloped/frontend/src/components/root.js":"2","/Users/shanesharareh/Desktop/App Academy/MERN/TBDeveloped/frontend/src/store/store.js":"3","/Users/shanesharareh/Desktop/App Academy/MERN/TBDeveloped/frontend/src/util/session_api_util.js":"4","/Users/shanesharareh/Desktop/App Academy/MERN/TBDeveloped/frontend/src/actions/session_actions.js":"5","/Users/shanesharareh/Desktop/App Academy/MERN/TBDeveloped/frontend/src/actions/questions_actions.js":"6","/Users/shanesharareh/Desktop/App Academy/MERN/TBDeveloped/frontend/src/components/app.js":"7","/Users/shanesharareh/Desktop/App Academy/MERN/TBDeveloped/frontend/src/util/questions_api_util.js":"8","/Users/shanesharareh/Desktop/App Academy/MERN/TBDeveloped/frontend/src/reducers/root_reducer.js":"9","/Users/shanesharareh/Desktop/App Academy/MERN/TBDeveloped/frontend/src/util/route_util.js":"10","/Users/shanesharareh/Desktop/App Academy/MERN/TBDeveloped/frontend/src/components/nav/navbar_container.js":"11","/Users/shanesharareh/Desktop/App Academy/MERN/TBDeveloped/frontend/src/components/resolved/resolved_show_container.js":"12","/Users/shanesharareh/Desktop/App Academy/MERN/TBDeveloped/frontend/src/components/question/question_show_container.js":"13","/Users/shanesharareh/Desktop/App Academy/MERN/TBDeveloped/frontend/src/components/main/main_page.js":"14","/Users/shanesharareh/Desktop/App Academy/MERN/TBDeveloped/frontend/src/components/bulletin_board/bulletin_board_container.js":"15","/Users/shanesharareh/Desktop/App Academy/MERN/TBDeveloped/frontend/src/components/session/login_form_container.js":"16","/Users/shanesharareh/Desktop/App Academy/MERN/TBDeveloped/frontend/src/components/session/signup_form_container.js":"17","/Users/shanesharareh/Desktop/App Academy/MERN/TBDeveloped/frontend/src/components/profile/profile_container.js":"18","/Users/shanesharareh/Desktop/App Academy/MERN/TBDeveloped/frontend/src/components/chatroom/room.js":"19","/Users/shanesharareh/Desktop/App Academy/MERN/TBDeveloped/frontend/src/reducers/session_reducer.js":"20","/Users/shanesharareh/Desktop/App Academy/MERN/TBDeveloped/frontend/src/reducers/errors_reducer.js":"21","/Users/shanesharareh/Desktop/App Academy/MERN/TBDeveloped/frontend/src/reducers/entities_reducer.js":"22","/Users/shanesharareh/Desktop/App Academy/MERN/TBDeveloped/frontend/src/components/resolved/resolved_show.js":"23","/Users/shanesharareh/Desktop/App Academy/MERN/TBDeveloped/frontend/src/components/bulletin_board/bulletin_board.js":"24","/Users/shanesharareh/Desktop/App Academy/MERN/TBDeveloped/frontend/src/components/question/question_show.js":"25","/Users/shanesharareh/Desktop/App Academy/MERN/TBDeveloped/frontend/src/components/nav/navbar.js":"26","/Users/shanesharareh/Desktop/App Academy/MERN/TBDeveloped/frontend/src/components/session/signup_form.js":"27","/Users/shanesharareh/Desktop/App Academy/MERN/TBDeveloped/frontend/src/components/session/login_form.js":"28","/Users/shanesharareh/Desktop/App Academy/MERN/TBDeveloped/frontend/src/components/profile/profile.js":"29","/Users/shanesharareh/Desktop/App Academy/MERN/TBDeveloped/frontend/src/reducers/session_errors_reducer.js":"30","/Users/shanesharareh/Desktop/App Academy/MERN/TBDeveloped/frontend/src/reducers/responses_errors_reducer.js":"31","/Users/shanesharareh/Desktop/App Academy/MERN/TBDeveloped/frontend/src/reducers/questions_reducer.js":"32","/Users/shanesharareh/Desktop/App Academy/MERN/TBDeveloped/frontend/src/reducers/questions_errors_reducer.js":"33","/Users/shanesharareh/Desktop/App Academy/MERN/TBDeveloped/frontend/src/reducers/responses_reducer.js":"34","/Users/shanesharareh/Desktop/App Academy/MERN/TBDeveloped/frontend/src/components/resolved/resolved_index.js":"35","/Users/shanesharareh/Desktop/App Academy/MERN/TBDeveloped/frontend/src/components/question/update_question_form_container.js":"36","/Users/shanesharareh/Desktop/App Academy/MERN/TBDeveloped/frontend/src/components/question/question_index.js":"37","/Users/shanesharareh/Desktop/App Academy/MERN/TBDeveloped/frontend/src/components/chatroom/create_room.js":"38","/Users/shanesharareh/Desktop/App Academy/MERN/TBDeveloped/frontend/src/components/question/create_question_form_container.js":"39","/Users/shanesharareh/Desktop/App Academy/MERN/TBDeveloped/frontend/src/components/answer/answer_index_item.js":"40","/Users/shanesharareh/Desktop/App Academy/MERN/TBDeveloped/frontend/src/components/answer/create_answers_form_container.js":"41","/Users/shanesharareh/Desktop/App Academy/MERN/TBDeveloped/frontend/src/components/answer/answer_index_container.js":"42","/Users/shanesharareh/Desktop/App Academy/MERN/TBDeveloped/frontend/src/actions/responses_actions.js":"43","/Users/shanesharareh/Desktop/App Academy/MERN/TBDeveloped/frontend/src/components/question/question_form.js":"44","/Users/shanesharareh/Desktop/App Academy/MERN/TBDeveloped/frontend/src/components/answer/answer_index.js":"45","/Users/shanesharareh/Desktop/App Academy/MERN/TBDeveloped/frontend/src/components/answer/answer_form.js":"46","/Users/shanesharareh/Desktop/App Academy/MERN/TBDeveloped/frontend/src/util/responses_api_util.js":"47","/Users/shanesharareh/Desktop/App Academy/MERN/TBDeveloped/frontend/src/components/answer/answer_index_item_container.js":"48"},{"size":1350,"mtime":1609636365959,"results":"49","hashOfConfig":"50"},{"size":286,"mtime":1609636365952,"results":"51","hashOfConfig":"50"},{"size":327,"mtime":1609636366012,"results":"52","hashOfConfig":"50"},{"size":421,"mtime":1609636366015,"results":"53","hashOfConfig":"50"},{"size":1430,"mtime":1609636365770,"results":"54","hashOfConfig":"50"},{"size":2385,"mtime":1609636365664,"results":"55","hashOfConfig":"50"},{"size":1432,"mtime":1609636365911,"results":"56","hashOfConfig":"50"},{"size":570,"mtime":1609636366013,"results":"57","hashOfConfig":"50"},{"size":272,"mtime":1609636366007,"results":"58","hashOfConfig":"50"},{"size":1237,"mtime":1609636366015,"results":"59","hashOfConfig":"50"},{"size":283,"mtime":1609636365927,"results":"60","hashOfConfig":"50"},{"size":877,"mtime":1609636365950,"results":"61","hashOfConfig":"50"},{"size":1017,"mtime":1609703154786,"results":"62","hashOfConfig":"50"},{"size":5797,"mtime":1609703154493,"results":"63","hashOfConfig":"50"},{"size":466,"mtime":1609636365918,"results":"64","hashOfConfig":"50"},{"size":402,"mtime":1609636365954,"results":"65","hashOfConfig":"50"},{"size":448,"mtime":1609636365957,"results":"66","hashOfConfig":"50"},{"size":229,"mtime":1609636365930,"results":"67","hashOfConfig":"50"},{"size":15027,"mtime":1609703154262,"results":"68","hashOfConfig":"50"},{"size":788,"mtime":1609636366011,"results":"69","hashOfConfig":"50"},{"size":383,"mtime":1609636365962,"results":"70","hashOfConfig":"50"},{"size":249,"mtime":1609636365960,"results":"71","hashOfConfig":"50"},{"size":1003,"mtime":1609636365949,"results":"72","hashOfConfig":"50"},{"size":1787,"mtime":1609636365917,"results":"73","hashOfConfig":"50"},{"size":5915,"mtime":1609703254697,"results":"74","hashOfConfig":"50"},{"size":3248,"mtime":1609703154582,"results":"75","hashOfConfig":"50"},{"size":6699,"mtime":1609703154838,"results":"76","hashOfConfig":"50"},{"size":1548,"mtime":1609636365953,"results":"77","hashOfConfig":"50"},{"size":532,"mtime":1609636365929,"results":"78","hashOfConfig":"50"},{"size":415,"mtime":1609636366009,"results":"79","hashOfConfig":"50"},{"size":354,"mtime":1609636366005,"results":"80","hashOfConfig":"50"},{"size":848,"mtime":1609636366003,"results":"81","hashOfConfig":"50"},{"size":354,"mtime":1609636366002,"results":"82","hashOfConfig":"50"},{"size":565,"mtime":1609636366006,"results":"83","hashOfConfig":"50"},{"size":699,"mtime":1609636365947,"results":"84","hashOfConfig":"50"},{"size":1061,"mtime":1609636365946,"results":"85","hashOfConfig":"50"},{"size":903,"mtime":1609638633019,"results":"86","hashOfConfig":"50"},{"size":454,"mtime":1609703154219,"results":"87","hashOfConfig":"50"},{"size":547,"mtime":1609636365931,"results":"88","hashOfConfig":"50"},{"size":1147,"mtime":1609703117908,"results":"89","hashOfConfig":"50"},{"size":623,"mtime":1609703118128,"results":"90","hashOfConfig":"50"},{"size":484,"mtime":1609703117865,"results":"91","hashOfConfig":"50"},{"size":1155,"mtime":1609636365712,"results":"92","hashOfConfig":"50"},{"size":3540,"mtime":1609703154672,"results":"93","hashOfConfig":"50"},{"size":727,"mtime":1609703117813,"results":"94","hashOfConfig":"50"},{"size":1617,"mtime":1609703117767,"results":"95","hashOfConfig":"50"},{"size":813,"mtime":1609636366014,"results":"96","hashOfConfig":"50"},{"size":551,"mtime":1609703118008,"results":"97","hashOfConfig":"50"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"101"},"zny78g",{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"101"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"139","usedDeprecatedRules":"101"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"142","usedDeprecatedRules":"101"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"175","usedDeprecatedRules":"101"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"186","usedDeprecatedRules":"101"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},{"filePath":"189","messages":"190","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},{"filePath":"191","messages":"192","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"195","usedDeprecatedRules":"101"},{"filePath":"196","messages":"197","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"198","usedDeprecatedRules":"101"},{"filePath":"199","messages":"200","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},{"filePath":"201","messages":"202","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},"/Users/shanesharareh/Desktop/App Academy/MERN/TBDeveloped/frontend/src/index.js",["203"],"import React from 'react'\nimport ReactDOM from 'react-dom'\n\nimport Root from './components/root'\nimport configureStore from './store/store'\nimport jwt_decode from 'jwt-decode'\nimport { setAuthToken } from './util/session_api_util'\nimport { logout } from './actions/session_actions'\n\n// test\nimport axios from \"axios\";\nimport { postQuestion, fetchQuestions, updateQuestion, deleteQuestion } from \"./actions/questions_actions\"\n// import { postQuestion, updateQuestion } from './util/questions_api_util'\n//test\n\n\ndocument.addEventListener('DOMContentLoaded', () => {\n  let store;\n  if (localStorage.jwtToken) {\n    setAuthToken(localStorage.jwtToken);\n    const decodedUser = jwt_decode(localStorage.jwtToken)\n    const preloadedState = { session: { isAuthenticated: true, user: decodedUser } };\n\n    store = configureStore(preloadedState)\n    const currentTime = Date.now() / 1000;\n    if (decodedUser.exp < currentTime) {\n      store.dispatch(logout());\n      window.location.href = '/login'\n    }\n\n  }\n  else {\n    store = configureStore({})\n  }\n\n  // test \n  window.store = store; \n  window.axios = axios; \n  window.deleteQuestion = deleteQuestion; \n  window.fetchQuestions = fetchQuestions; \n  window.updateQuestion = updateQuestion; \n  //test \n\n  const root = document.getElementById('root')\n  ReactDOM.render(<Root store={store} />, root)\n\n})\n\n\n\n",["204","205"],"/Users/shanesharareh/Desktop/App Academy/MERN/TBDeveloped/frontend/src/components/root.js",[],"/Users/shanesharareh/Desktop/App Academy/MERN/TBDeveloped/frontend/src/store/store.js",[],"/Users/shanesharareh/Desktop/App Academy/MERN/TBDeveloped/frontend/src/util/session_api_util.js",[],"/Users/shanesharareh/Desktop/App Academy/MERN/TBDeveloped/frontend/src/actions/session_actions.js",[],"/Users/shanesharareh/Desktop/App Academy/MERN/TBDeveloped/frontend/src/actions/questions_actions.js",["206"],"import * as QuestionsAPIUtil from \"../util/questions_api_util\"\n\nexport const RECEIVE_QUESTIONS = \"RECEIVE_QUESTIONS\";\nexport const RECEIVE_QUESTION = \"RECEIVE_QUESTION\"\nexport const REMOVE_QUESTION = \"REMOVE_QUESTION\"\nexport const RECEIVE_ERRORS = \"RECEIVE_ERRORS\"\n\n\n//test\nexport const RECEIVE_RESPONSE = 'RECEIVE_RESPONSE';\nexport const receiveResponse = (response) => {\n    return {\n        type: RECEIVE_RESPONSE,\n        response\n    }\n}\n//test\n\nconst receiveQuestions = (questions) => {\n    return {\n        type: RECEIVE_QUESTIONS, \n        questions // ES6 synthax = questions: questions \n    }\n}\n\nconst receiveQuestion = (question) => {\n    return {\n        type: RECEIVE_QUESTION, \n        question\n    }\n}\n\nconst removeQuestion = (question) => {\n    return {\n        type: REMOVE_QUESTION,\n        question \n    }\n} \n// model action should find the question by it's id and delete it, but return the question in case we need to remove it \n// from the state\n\nconst receiveQuestionErrors = (errors) => {\n    return {\n        type: RECEIVE_ERRORS, \n        errors \n    }\n}\n\nexport const fetchQuestions = () => (dispatch) => {\n    return QuestionsAPIUtil.fetchQuestions()\n        .then( res => { dispatch(receiveQuestions(res.data)) } )\n        \n        .catch(err => dispatch(receiveQuestionErrors(err)))\n}\n\nexport const fetchQuestion = (questionId) => (dispatch) => {\n    return QuestionsAPIUtil.fetchQuestion(questionId)\n        .then(res => ( dispatch(receiveQuestion(res.data)), dispatch(receiveResponse(res.data.responses))))\n        .catch(err => dispatch(receiveQuestionErrors(err)))\n}\n\nexport const postQuestion = (newQuestion) => (dispatch) => {\n    return QuestionsAPIUtil.postQuestion(newQuestion)\n        .then( res => { dispatch(receiveQuestion(res.data)) })\n        .catch( errors => { dispatch(receiveQuestionErrors(errors.response.data)) })\n}\n\n\nexport const updateQuestion = (questionId, questionUpdates) => (dispatch) =>{\n    return QuestionsAPIUtil.updateQuestion(questionId, questionUpdates)\n        .then( res => { dispatch(receiveQuestion(res.data))})\n        .catch(err => dispatch(receiveQuestionErrors(err)))\n}\n\nexport const deleteQuestion = (questionId) => (dispatch) => {\n    return QuestionsAPIUtil.deleteQuestion(questionId)\n        .then( res => { dispatch(removeQuestion(res.data)) })\n        .catch(err => dispatch(receiveQuestionErrors(err)))\n}\n\n","/Users/shanesharareh/Desktop/App Academy/MERN/TBDeveloped/frontend/src/components/app.js",[],"/Users/shanesharareh/Desktop/App Academy/MERN/TBDeveloped/frontend/src/util/questions_api_util.js",[],"/Users/shanesharareh/Desktop/App Academy/MERN/TBDeveloped/frontend/src/reducers/root_reducer.js",[],"/Users/shanesharareh/Desktop/App Academy/MERN/TBDeveloped/frontend/src/util/route_util.js",[],"/Users/shanesharareh/Desktop/App Academy/MERN/TBDeveloped/frontend/src/components/nav/navbar_container.js",[],"/Users/shanesharareh/Desktop/App Academy/MERN/TBDeveloped/frontend/src/components/resolved/resolved_show_container.js",[],"/Users/shanesharareh/Desktop/App Academy/MERN/TBDeveloped/frontend/src/components/question/question_show_container.js",[],"/Users/shanesharareh/Desktop/App Academy/MERN/TBDeveloped/frontend/src/components/main/main_page.js",[],"/Users/shanesharareh/Desktop/App Academy/MERN/TBDeveloped/frontend/src/components/bulletin_board/bulletin_board_container.js",[],"/Users/shanesharareh/Desktop/App Academy/MERN/TBDeveloped/frontend/src/components/session/login_form_container.js",[],"/Users/shanesharareh/Desktop/App Academy/MERN/TBDeveloped/frontend/src/components/session/signup_form_container.js",[],"/Users/shanesharareh/Desktop/App Academy/MERN/TBDeveloped/frontend/src/components/profile/profile_container.js",[],"/Users/shanesharareh/Desktop/App Academy/MERN/TBDeveloped/frontend/src/components/chatroom/room.js",["207","208","209","210","211","212","213","214"],"import React, { useState, useRef, useEffect } from \"react\";\nimport { Link, redirect } from \"react-router-dom\";\nimport io from \"socket.io-client\";\nimport '../../assets/stylesheets/reset.css';\nimport '../../assets/stylesheets/room.scss';\n\n\nconst Room = (props) => {\n\n    //!TEST\n        let [peers, setPeers] = useState([]);\n        const [mute, setMute] = useState('Mute');\n        const [video, setVideo] = useState('Video Off');\n    //!TEST\n        // const [test, setTest] = useState(0);\n\n\n    //!TEST\n        \n        \n    // const [mute, setMute] = useState('Mute'); \n    // const [video, setVideo] = useState('Video Off');\n    const userVideo = useRef(); //for video html\n    const partnerVideo = useRef(); //for video html\n    const peerRef = useRef(); //rtc peerConnection\n    const socketRef = useRef();\n    const otherUser = useRef(); //otherUser - generated ID\n    const userStream = useRef();\n    // const setPeers = useRef();\n    \n\n    // 1/1/21 test\n    const otherVideos = useRef(new Array());\n    const otherUsers = useRef(new Array()); \n    // const peers = useRef(new Object()); \n    // 1/1/21 test\n\n    useEffect(() => {\n\n        navigator.mediaDevices.getUserMedia({ audio: true, video: true }).then(MediaStream => {\n            userVideo.current.srcObject = MediaStream;\n            userStream.current = MediaStream;\n\n            socketRef.current = io.connect(\"/\");\n            console.log(socketRef.current)\n\n            socketRef.current.emit(\"join room\", props.match.params.roomID);\n            \n\n            // has the socket emit this event, this event is caught by the server. I believe there's some \n            // 'long polling' involved. Interesting because the connection happens while this is on localhost 3000\n            // and the server is on 5000  \n\n        \n            // i believe the below code only runs when the events happen, after the above event is emitted\n            // it triggers a slew of events on the server side \n            socketRef.current.on('other user', userID => {\n                callUser(userID);\n                otherUser.current = userID;\n                console.log('user A is in the room already', userID)\n\n\n                // 1/1/21 test\n                otherUsers.current.push(userID) \n                    // may have to concat in a situation where a user joins \n                    // and there are multiple existing users\n                    // they would have to make a call to each of the existing users\n\n                // otherUsers.current.forEach( (user) => {\n                //     callUser(user)\n                // })\n\n                // 1/1/21 test\n            });\n\n            // the above event is emitted from the server back to the client who created a chatroom, it basically \n            // it basically says to the user, hey there's someone in this room \n            // likely whats happening is someone clicked on a room link and this component mounts and they're alerted\n            // that there's another user, and also given the other users socket id \n            // so if the above happens then two users are sitting in the same room. \n            // but their sockets need to connect \n            // this i where the callUser function comes in. Essentially it calls the OTHER USER  \n\n            socketRef.current.on(\"user joined\", userID => {\n\n                otherUser.current = userID;\n\n                // 1/1/21 test\n                otherUsers.current.push(userID)\n                // this may not need concat because it should only\n                // be one user being added at a time \n                // this is from the perspective of existing users in the room \n                // 1/1/21 test\n\n                console.log('other user joined room')\n            });\n\n            socketRef.current.emit(\"user joined\", userID => {\n                otherUser.current = userID;\n                console.log('user B just joined the room', userID)\n\n            });\n            \n\n\n            //!TEST - WL - trying to remove video on meeting exit\n            socketRef.current.on( \"user left\", id => {\n                const peerObj = peerRef.current.find(p => p.peerID === id);\n                if (peerObj){\n                    peerObj.peer.destroy();\n                }\n                const peers = peerRef.current.filter(p => p.peerID !== id);\n                peerRef.current = peers;\n                setPeers(peers); //state\n\n            })\n            // finding the peer, destorying the peer, and removing it from the array\n            // socketRef.current.on(\"disconnect\", () => {\n            //     console.log('dIsCoNnEcTeD')\n                \n            // });\n\n            // socketRef.current.on( \"user-disconnected\", room => {\n            //     console.log('room', room)\n                // const peerObj = peerRef.current.find(p => p.peerID === id);\n                // if (peerObj){\n                //     peerObj.peer.destroy();\n                // }\n                // const peers = peerRef.current.filter(p => p.peerID !== id);\n                // peerRef.current = peers;\n                // setPeers(peers); //state\n\n            // })\n            //finding the peer, destorying the peer, and removing it from the array\n            //!TEST\n\n            socketRef.current.on(\"offer\", handleRecieveCall);\n\n            socketRef.current.on(\"answer\", handleAnswer);\n\n            socketRef.current.on(\"ice-candidate\", handleNewICECandidateMsg);\n\n            // 1/1/21 test\n            socketRef.current.on(\"killconnection\", killIt);\n            // 1/1/21 test\n        });\n\n    }, []);\n\n  \n\n    function callUser(userID) {\n        peerRef.current = createPeer(userID); \n        // userID is the socket.id of the OTHER PERSON in the room \n        // it is used in the createPeer function and set to the peerRef hook  \n        userStream.current.getTracks().forEach(track => peerRef.current.addTrack(track, userStream.current));\n        //giving our peer individual access to our stream so they can view on their end\n    }\n\n\n        // 1/1/21 test\n            // peerRef.current = {};\n            // peerRef.current[userID] = createPeer(userID)\n        // 1/1/21 test\n    // }   \n    // userStream.current was set to the MediaStream above\n    // i imagine i\n\n    function createPeer(userID) {\n        const peer = new RTCPeerConnection({\n            iceServers: [\n                {\n                    urls: \"stun:stun.stunprotocol.org\"\n                },\n                {\n                    urls: 'turn:numb.viagenie.ca',\n                    credential: 'muazkh',\n                    username: 'webrtc@live.com'\n                },\n            ]\n        }); \n        // this constructor takes in an array of objects, these objects are servers which allow peers to connect, should \n        // use your own, look into creating one \n\n        peer.onicecandidate = handleICECandidateEvent;\n        peer.ontrack = handleTrackEvent;\n        peer.onnegotiationneeded = () => handleNegotiationNeededEvent(userID);\n\n        return peer;\n\n        // still in the process of calling the other user/ connecting to the other users socket \n        //starts off by instantiating a RTCPeerConnection, this is used to connect two peers and maintain the connection\n\n    }\n\n    function handleNegotiationNeededEvent(userID) {\n        peerRef.current.createOffer().then(offer => { // createOffer is a RTCPeerConnection method\n            return peerRef.current.setLocalDescription(offer);\n        }).then(() => {\n            const payload = {\n                target: userID,\n                caller: socketRef.current.id,\n                sdp: peerRef.current.localDescription\n            };\n            socketRef.current.emit(\"offer\", payload);\n        }).catch(e => console.log(e));\n    }\n\n    function handleRecieveCall(incoming) {\n        peerRef.current = createPeer();\n        const desc = new RTCSessionDescription(incoming.sdp);\n        peerRef.current.setRemoteDescription(desc).then(() => {\n            userStream.current.getTracks().forEach(track => peerRef.current.addTrack(track, userStream.current));\n        }).then(() => {\n            return peerRef.current.createAnswer();\n        }).then(answer => {\n            return peerRef.current.setLocalDescription(answer);\n        }).then(() => {\n            const payload = {\n                target: incoming.caller,\n                caller: socketRef.current.id,\n                sdp: peerRef.current.localDescription\n            }\n            socketRef.current.emit(\"answer\", payload);\n        })\n    } // this function is handling events related to someone calling the user \n\n    function handleAnswer(message) {\n        const desc = new RTCSessionDescription(message.sdp);\n        peerRef.current.setRemoteDescription(desc).catch(e => console.log(e));\n    } \n\n    // this handles answers both for the caller and the callee because it essentially to establish the connection it needs to \n\n    function handleICECandidateEvent(e) {\n        if (e.candidate) { // is e.candidate the current user / client \n            const payload = {\n                target: otherUser.current,\n                candidate: e.candidate, // this e.candidate is like a ICE config used to establish an RTCPeerConnection\n            }\n            socketRef.current.emit(\"ice-candidate\", payload);\n        }\n    }\n\n    function handleNewICECandidateMsg(incoming) { // incoming maybe whoever is calling \n        const candidate = new RTCIceCandidate(incoming);\n\n        peerRef.current.addIceCandidate(candidate) \n            .catch(e => console.log(e));\n    } // one perspective is from the user you're calling, the other user. Adds this icecandidate to it's peerRef as a key value pair? \n\n    function handleTrackEvent(e) {\n        partnerVideo.current.srcObject = e.streams[0];\n\n    }; // creating a video for the person you're calling? \n\n\n    function hangUp(e) {\n        console.log(peerRef.current)\n        console.log(socketRef.current)\n        console.log(\"make this hangup button\")\n        socketRef.current.emit(\"hang up\")\n        console.log(userVideo.current)\n        let vid = document.getElementById(\"myVideo\")\n        vid.parentNode.removeChild(vid);\n        console.log('final step?')\n    };\n\n\n\n    //cuts connection when user leaves page\n    useEffect(() => {\n        return () => {\n            stopStreamedVideo()\n        }\n    },[])\n\n    \n\n    //! VIDEO function\n    const playStop = () => {\n        let enabled = userVideo.current.srcObject.getVideoTracks()[0].enabled;\n        if(enabled){\n            userVideo.current.srcObject.getVideoTracks()[0].enabled = false;\n            // console.log('false', enabled)\n            setVideo('Video On')\n        }else{\n            userVideo.current.srcObject.getVideoTracks()[0].enabled = true;\n            // console.log('true', enabled)\n            setVideo('Video Off')\n        }\n    }\n\n    //! Cut connection of the person leaving page - media stream only.\n    const stopStreamedVideo = () => {\n        const tracks = userStream.current.getTracks();\n        // console.log(tracks);\n        \n        //!TEST - WL  - Intent here is the black the screen whenever some oneleaves\n        // let enabled = userVideo.current.srcObject.getVideoTracks()[0].enabled;\n        // if(enabled){\n        //     userVideo.current.srcObject.getVideoTracks()[0].enabled = false;\n        // }\n        //!TEST\n        // userVideo.current.srcObject.getVideoTracks()[0].enabled = true;\n\n        //note - stream.stop() is deprecated. Do not use\n        tracks.forEach(function(track) {\n            track.stop();\n            \n        });\n        //! @TOM FYI ADDING IT TO THIS BUTTON\n        testFeatures()\n        \n    }\n\n\n    //! MUTE function\n    const muteStream = () => {\n        const enabled = userVideo.current.srcObject.getAudioTracks()[0].enabled;\n        if(enabled){\n            userVideo.current.srcObject.getAudioTracks()[0].enabled = false;\n            setMute('Unmute')\n            // console.log('false', enabled)\n            console.log(peerRef)\n            console.log(peerRef.current)\n            console.log(userStream)\n            console.log(userStream.current)\n\n        }else {\n            userVideo.current.srcObject.getAudioTracks()[0].enabled = true;\n            // console.log('true', enabled)\n            setMute('Mute')\n            // console.log(props)\n\n        }\n    }\n    \n    // function muteStream() {\n    //     const tracks = userStream.current.getAudioTracks();\n    //     //note - stream.stop() is deprecated. Do not use\n    //     console.log('audio', tracks)\n    //     tracks.forEach(function(track) {\n    //         track.stop();\n    //     });\n    //     console.log('audio', tracks)\n\n    // }\n    const hangUpButton = () => {\n        onLeave();\n    }\n\n    function onLeave() {\n        userVideo.current.srcObject = null;\n        console.log(peerRef.current)\n        partnerVideo.current.srcObject = null;\n        peerRef.current.close();\n        console.log(peerRef.current)\n        peerRef.current.onicecandidate = null;\n        peerRef.current.onaddstream = null;\n        createPeer()\n    };\n\n    // 1/1/21 test\n      const killIt = () => {\n        console.log(\"reading loud and clear\")\n        peerRef.current.close()\n    }\n    // 1/1/21 test\n\n    const testFeatures = () => {\n        // peerRef.current.close(); // works but only if there is a peerRef (only if a connection has been established)\n        //!@TOM added this conditional for your above comment\n        if (peerRef.current){\n            socketRef.current.emit(\"hangUp\", otherUser.current)\n            peerRef.current.close()\n        }\n\n    }\n\n    \n    return (\n        <div className='room_container'>\n            {/* button below now functions with leave meeting */}\n            {/* <button onClick={() => testFeatures()}>Test Button</button> */}\n\n            <div className=\"main\">\n                <div className=\"main_videos\">\n                    <div id=\"video-grid\">\n                        <div>\n                            <video id=\"myVideo\" autoPlay ref={userVideo} muted/>\n                        </div>\n                        <div>\n                            <video autoPlay ref={partnerVideo} />\n                        </div>\n                    </div>\n                </div>\n                <div className=\"main_controls_container\">\n                    <div className='main_controls'>\n                        <div>\n                            <button onClick={() => muteStream()}>{mute}</button> \n                            <button onClick={() => playStop()}>{video}</button>  \n                        </div>\n                        <div>\n                            <Link to='/'>\n                                <button onClick={() => stopStreamedVideo()}>Leave Meeting</button>  \n                            </Link>\n                        </div>\n                    </div>\n                </div>   \n            </div>\n\n        </div>\n    );\n};\n\nexport default Room;","/Users/shanesharareh/Desktop/App Academy/MERN/TBDeveloped/frontend/src/reducers/session_reducer.js",["215"],"import { RECEIVE_CURRENT_USER, RECEIVE_USER_LOGOUT, RECEIVE_USER_SIGN_IN} from '../actions/session_actions'\n\nconst initialState = { isAuthenticated: false, user: {} };\n\nexport default function(state = initialState, action) {\n\n    switch (action.type) {\n        case RECEIVE_CURRENT_USER:\n            return { \n                ...state,\n                isAuthenticated: !!action.currentUser,\n                user: action.currentUser\n            };\n            \n        case RECEIVE_USER_SIGN_IN:\n            return { \n                ...state,\n                isSignedIn: true\n            }\n\n        case RECEIVE_USER_LOGOUT:\n            return {\n            isAuthenticated: false,\n            user: undefined\n            };\n\n        default:\n            return state;\n\n        \n    }\n\n}\n","/Users/shanesharareh/Desktop/App Academy/MERN/TBDeveloped/frontend/src/reducers/errors_reducer.js",[],"/Users/shanesharareh/Desktop/App Academy/MERN/TBDeveloped/frontend/src/reducers/entities_reducer.js",[],"/Users/shanesharareh/Desktop/App Academy/MERN/TBDeveloped/frontend/src/components/resolved/resolved_show.js",[],"/Users/shanesharareh/Desktop/App Academy/MERN/TBDeveloped/frontend/src/components/bulletin_board/bulletin_board.js",[],"/Users/shanesharareh/Desktop/App Academy/MERN/TBDeveloped/frontend/src/components/question/question_show.js",["216"],"/Users/shanesharareh/Desktop/App Academy/MERN/TBDeveloped/frontend/src/components/nav/navbar.js",[],"/Users/shanesharareh/Desktop/App Academy/MERN/TBDeveloped/frontend/src/components/session/signup_form.js",[],"/Users/shanesharareh/Desktop/App Academy/MERN/TBDeveloped/frontend/src/components/session/login_form.js",[],"/Users/shanesharareh/Desktop/App Academy/MERN/TBDeveloped/frontend/src/components/profile/profile.js",[],"/Users/shanesharareh/Desktop/App Academy/MERN/TBDeveloped/frontend/src/reducers/session_errors_reducer.js",[],"/Users/shanesharareh/Desktop/App Academy/MERN/TBDeveloped/frontend/src/reducers/responses_errors_reducer.js",[],"/Users/shanesharareh/Desktop/App Academy/MERN/TBDeveloped/frontend/src/reducers/questions_reducer.js",[],"/Users/shanesharareh/Desktop/App Academy/MERN/TBDeveloped/frontend/src/reducers/questions_errors_reducer.js",[],"/Users/shanesharareh/Desktop/App Academy/MERN/TBDeveloped/frontend/src/reducers/responses_reducer.js",[],"/Users/shanesharareh/Desktop/App Academy/MERN/TBDeveloped/frontend/src/components/resolved/resolved_index.js",[],"/Users/shanesharareh/Desktop/App Academy/MERN/TBDeveloped/frontend/src/components/question/update_question_form_container.js",["217"],"import React from 'react'\nimport { connect } from 'react-redux'\nimport { updateQuestion } from '../../actions/questions_actions'\nimport QuestionForm from './question_form'\n\n\nexport class UpdateQuestionForm extends React.Component {\n\n    constructor(props){\n        super(props)\n    }\n\n    componentDidMount() {\n        this.props.receiveReview(this.props.reviewId)\n    }\n\n    render() {\n       const {questionId, subject, content, tag, solved, user} = this.props\n        return (\n            <QuestionForm  \n                questionId = {questionId}\n                subject={subject}\n                content={content}\n                tag={tag}\n                solved={solved}\n                user={user}\n            />\n        );\n    }\n}\n\n\n\nconst mapStateToProps = (state) => {\n    \n    return({ formType: 'Update Question!'}\n    )\n}\n\nconst mapDispatchToProps = (dispatch) => ({\n    processForm: (questionId, questionUpdates) => dispatch(updateQuestion(questionId, questionUpdates))\n})\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(QuestionForm)","/Users/shanesharareh/Desktop/App Academy/MERN/TBDeveloped/frontend/src/components/question/question_index.js",[],"/Users/shanesharareh/Desktop/App Academy/MERN/TBDeveloped/frontend/src/components/chatroom/create_room.js",[],"/Users/shanesharareh/Desktop/App Academy/MERN/TBDeveloped/frontend/src/components/question/create_question_form_container.js",[],"/Users/shanesharareh/Desktop/App Academy/MERN/TBDeveloped/frontend/src/components/answer/answer_index_item.js",[],"/Users/shanesharareh/Desktop/App Academy/MERN/TBDeveloped/frontend/src/components/answer/create_answers_form_container.js",["218"],"import {connect} from 'react-redux'\nimport ResponseForm from './answer_form'\nimport {postResponse} from '../../actions/responses_actions'\n\n\nconst mapStateToProps = (state, props)=> { \n    return (\n    {newResponse: {\n        consultation: '',\n        answer: '',\n        user: state.session.user.id\n    },\n    formType: 'Respond',})\n}\n\nconst mapDispatchToProps = dispatch => ({\n    processForm: (questionID, newResponse) => dispatch(postResponse(questionID, newResponse)) \n})\n\nexport default connect(mapStateToProps,mapDispatchToProps)(ResponseForm)","/Users/shanesharareh/Desktop/App Academy/MERN/TBDeveloped/frontend/src/components/answer/answer_index_container.js",[],"/Users/shanesharareh/Desktop/App Academy/MERN/TBDeveloped/frontend/src/actions/responses_actions.js",[],"/Users/shanesharareh/Desktop/App Academy/MERN/TBDeveloped/frontend/src/components/question/question_form.js",[],"/Users/shanesharareh/Desktop/App Academy/MERN/TBDeveloped/frontend/src/components/answer/answer_index.js",["219"],"import React from 'react'\nimport AnswerIndexItem from '../answer/answer_index_item'\nclass AnswerIndex extends React.Component {\n\n\n    // componentDidMount(){\n    //     this.props.fetchAnswers(this.props.responses)\n    // }\n    \n    render() {\n        return(\n\n        <div>\n            {this.props.responses.map((response, i) =>{\n                    return(\n                    <div key={i}>\n                        <AnswerIndexItem response={response} />\n                    </div>\n                    )\n            })}\n        </div>\n        )\n    }\n}\n\nexport default AnswerIndex","/Users/shanesharareh/Desktop/App Academy/MERN/TBDeveloped/frontend/src/components/answer/answer_form.js",["220","221"],"import React from 'react'\nimport mongoose from 'mongoose';\n\n\nclass ResponseForm extends React.Component{\n    constructor(props){\n        super(props)\n        this.state = {\n            consultation: this.props.consultation,\n            answer: this.props.answer,\n           \n        }\n        this.submit = this.submit.bind(this)\n        this.update = this.update.bind(this)\n    }\n\n    update(field){\n        return (e) => this.setState({[field]: e.currentTarget.value})\n    }\n\n\n    submit(e){\n\n        e.preventDefault();\n        let newResponse = {\n            user: this.props.user,\n            consultation: this.state.consultation,\n            answer: this.state.answer\n        };\n         this.props.processForm(this.props.questionID, newResponse)\n    }\n\n   \n\n\n    render(){\n        return(\n            <form onSubmit={this.submit}>\n                <div>\n                <label>\n                    consultation: <input type=\"date\" placeholder={this.props.newResponse.consultation} onChange={this.update('consultation')}/>\n                </label>\n                </div>\n                <div>\n                <label>\n                    answer: <textarea type='text' placeholder={this.props.newResponse.answer} onChange={this.update('answer')}/>\n                </label>\n                </div>\n\n                <div>\n                <label>\n                    <button type='submit'>{this.props.formType}</button>\n                </label>\n                </div>\n            </form>\n        )\n    }\n}\n\nexport default ResponseForm ","/Users/shanesharareh/Desktop/App Academy/MERN/TBDeveloped/frontend/src/util/responses_api_util.js",[],"/Users/shanesharareh/Desktop/App Academy/MERN/TBDeveloped/frontend/src/components/answer/answer_index_item_container.js",[],{"ruleId":"222","severity":1,"message":"223","line":12,"column":10,"nodeType":"224","messageId":"225","endLine":12,"endColumn":22},{"ruleId":"226","replacedBy":"227"},{"ruleId":"228","replacedBy":"229"},{"ruleId":"230","severity":1,"message":"231","line":58,"column":59,"nodeType":"232","messageId":"233","endLine":58,"endColumn":60},{"ruleId":"222","severity":1,"message":"234","line":13,"column":14,"nodeType":"224","messageId":"225","endLine":13,"endColumn":19},{"ruleId":"222","severity":1,"message":"235","line":36,"column":11,"nodeType":"224","messageId":"225","endLine":36,"endColumn":22},{"ruleId":"236","severity":1,"message":"237","line":36,"column":32,"nodeType":"238","messageId":"239","endLine":36,"endColumn":43},{"ruleId":"236","severity":1,"message":"237","line":37,"column":31,"nodeType":"238","messageId":"239","endLine":37,"endColumn":42},{"ruleId":"240","severity":1,"message":"241","line":151,"column":8,"nodeType":"242","endLine":151,"endColumn":10,"suggestions":"243"},{"ruleId":"222","severity":1,"message":"244","line":261,"column":14,"nodeType":"224","messageId":"225","endLine":261,"endColumn":20},{"ruleId":"240","severity":1,"message":"245","line":279,"column":7,"nodeType":"242","endLine":279,"endColumn":9,"suggestions":"246"},{"ruleId":"222","severity":1,"message":"247","line":355,"column":11,"nodeType":"224","messageId":"225","endLine":355,"endColumn":23},{"ruleId":"248","severity":1,"message":"249","line":5,"column":1,"nodeType":"250","endLine":33,"endColumn":2},{"ruleId":"251","severity":1,"message":"252","line":78,"column":58,"nodeType":"253","messageId":"254","endLine":78,"endColumn":60},{"ruleId":"255","severity":1,"message":"256","line":9,"column":5,"nodeType":"257","messageId":"258","endLine":11,"endColumn":6},{"ruleId":"222","severity":1,"message":"259","line":4,"column":9,"nodeType":"224","messageId":"225","endLine":4,"endColumn":22},{"ruleId":"222","severity":1,"message":"260","line":11,"column":13,"nodeType":"224","messageId":"225","endLine":11,"endColumn":23},{"ruleId":"222","severity":1,"message":"261","line":2,"column":8,"nodeType":"224","messageId":"225","endLine":2,"endColumn":16},{"ruleId":"222","severity":1,"message":"262","line":31,"column":14,"nodeType":"224","messageId":"225","endLine":31,"endColumn":17},"no-unused-vars","'postQuestion' is defined but never used.","Identifier","unusedVar","no-native-reassign",["263"],"no-negated-in-lhs",["264"],"no-sequences","Unexpected use of comma operator.","SequenceExpression","unexpectedCommaExpression","'peers' is assigned a value but never used.","'otherVideos' is assigned a value but never used.","no-array-constructor","The array literal notation [] is preferable.","NewExpression","preferLiteral","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'callUser', 'handleRecieveCall', and 'props.match.params.roomID'. Either include them or remove the dependency array.","ArrayExpression",["265"],"'hangUp' is defined but never used.","React Hook useEffect has a missing dependency: 'stopStreamedVideo'. Either include it or remove the dependency array.",["266"],"'hangUpButton' is assigned a value but never used.","import/no-anonymous-default-export","Unexpected default export of anonymous function","ExportDefaultDeclaration","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","'fetchQuestion' is defined but never used.","'questionID' is assigned a value but never used.","'mongoose' is defined but never used.","'res' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"267","fix":"268"},{"desc":"269","fix":"270"},"Update the dependencies array to be: [callUser, handleRecieveCall, props.match.params.roomID]",{"range":"271","text":"272"},"Update the dependencies array to be: [stopStreamedVideo]",{"range":"273","text":"274"},[5571,5573],"[callUser, handleRecieveCall, props.match.params.roomID]",[10350,10352],"[stopStreamedVideo]"]