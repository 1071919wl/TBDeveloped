[{"/home/tomc/TBDeveloped/TBDeveloped/frontend/src/index.js":"1","/home/tomc/TBDeveloped/TBDeveloped/frontend/src/store/store.js":"2","/home/tomc/TBDeveloped/TBDeveloped/frontend/src/util/session_api_util.js":"3","/home/tomc/TBDeveloped/TBDeveloped/frontend/src/components/root.js":"4","/home/tomc/TBDeveloped/TBDeveloped/frontend/src/actions/session_actions.js":"5","/home/tomc/TBDeveloped/TBDeveloped/frontend/src/actions/questions_actions.js":"6","/home/tomc/TBDeveloped/TBDeveloped/frontend/src/util/questions_api_util.js":"7","/home/tomc/TBDeveloped/TBDeveloped/frontend/src/reducers/root_reducer.js":"8","/home/tomc/TBDeveloped/TBDeveloped/frontend/src/components/app.js":"9","/home/tomc/TBDeveloped/TBDeveloped/frontend/src/reducers/session_reducer.js":"10","/home/tomc/TBDeveloped/TBDeveloped/frontend/src/reducers/errors_reducer.js":"11","/home/tomc/TBDeveloped/TBDeveloped/frontend/src/reducers/entities_reducer.js":"12","/home/tomc/TBDeveloped/TBDeveloped/frontend/src/util/route_util.js":"13","/home/tomc/TBDeveloped/TBDeveloped/frontend/src/components/nav/navbar_container.js":"14","/home/tomc/TBDeveloped/TBDeveloped/frontend/src/components/main/main_page.js":"15","/home/tomc/TBDeveloped/TBDeveloped/frontend/src/components/bulletin_board/bulletin_board_container.js":"16","/home/tomc/TBDeveloped/TBDeveloped/frontend/src/components/question/question_show_container.js":"17","/home/tomc/TBDeveloped/TBDeveloped/frontend/src/components/resolved/resolved_show_container.js":"18","/home/tomc/TBDeveloped/TBDeveloped/frontend/src/components/session/login_form_container.js":"19","/home/tomc/TBDeveloped/TBDeveloped/frontend/src/components/session/signup_form_container.js":"20","/home/tomc/TBDeveloped/TBDeveloped/frontend/src/components/profile/profile_container.js":"21","/home/tomc/TBDeveloped/TBDeveloped/frontend/src/components/chatroom/room.js":"22","/home/tomc/TBDeveloped/TBDeveloped/frontend/src/reducers/session_errors_reducer.js":"23","/home/tomc/TBDeveloped/TBDeveloped/frontend/src/reducers/questions_errors_reducer.js":"24","/home/tomc/TBDeveloped/TBDeveloped/frontend/src/reducers/responses_errors_reducer.js":"25","/home/tomc/TBDeveloped/TBDeveloped/frontend/src/reducers/questions_reducer.js":"26","/home/tomc/TBDeveloped/TBDeveloped/frontend/src/reducers/responses_reducer.js":"27","/home/tomc/TBDeveloped/TBDeveloped/frontend/src/components/bulletin_board/bulletin_board.js":"28","/home/tomc/TBDeveloped/TBDeveloped/frontend/src/components/resolved/resolved_show.js":"29","/home/tomc/TBDeveloped/TBDeveloped/frontend/src/components/session/login_form.js":"30","/home/tomc/TBDeveloped/TBDeveloped/frontend/src/components/session/signup_form.js":"31","/home/tomc/TBDeveloped/TBDeveloped/frontend/src/components/profile/profile.js":"32","/home/tomc/TBDeveloped/TBDeveloped/frontend/src/components/nav/navbar.js":"33","/home/tomc/TBDeveloped/TBDeveloped/frontend/src/components/question/question_show.js":"34","/home/tomc/TBDeveloped/TBDeveloped/frontend/src/actions/responses_actions.js":"35","/home/tomc/TBDeveloped/TBDeveloped/frontend/src/components/question/question_index.js":"36","/home/tomc/TBDeveloped/TBDeveloped/frontend/src/components/resolved/resolved_index.js":"37","/home/tomc/TBDeveloped/TBDeveloped/frontend/src/components/question/create_question_form_container.js":"38","/home/tomc/TBDeveloped/TBDeveloped/frontend/src/components/chatroom/create_room.js":"39","/home/tomc/TBDeveloped/TBDeveloped/frontend/src/components/question/update_question_form_container.js":"40","/home/tomc/TBDeveloped/TBDeveloped/frontend/src/util/responses_api_util.js":"41","/home/tomc/TBDeveloped/TBDeveloped/frontend/src/components/question/question_form.js":"42"},{"size":1350,"mtime":1609539120300,"results":"43","hashOfConfig":"44"},{"size":327,"mtime":1609216554960,"results":"45","hashOfConfig":"44"},{"size":421,"mtime":1609216554960,"results":"46","hashOfConfig":"44"},{"size":286,"mtime":1609216554960,"results":"47","hashOfConfig":"44"},{"size":1430,"mtime":1609354494270,"results":"48","hashOfConfig":"44"},{"size":2145,"mtime":1609550235360,"results":"49","hashOfConfig":"44"},{"size":570,"mtime":1609354494270,"results":"50","hashOfConfig":"44"},{"size":272,"mtime":1609354494270,"results":"51","hashOfConfig":"44"},{"size":1432,"mtime":1609550325360,"results":"52","hashOfConfig":"44"},{"size":788,"mtime":1609265786500,"results":"53","hashOfConfig":"44"},{"size":383,"mtime":1609539836520,"results":"54","hashOfConfig":"44"},{"size":249,"mtime":1609539836520,"results":"55","hashOfConfig":"44"},{"size":1237,"mtime":1609539836520,"results":"56","hashOfConfig":"44"},{"size":283,"mtime":1609265786490,"results":"57","hashOfConfig":"44"},{"size":289,"mtime":1609539120300,"results":"58","hashOfConfig":"44"},{"size":463,"mtime":1609539120300,"results":"59","hashOfConfig":"44"},{"size":1016,"mtime":1609550235360,"results":"60","hashOfConfig":"44"},{"size":877,"mtime":1609539120300,"results":"61","hashOfConfig":"44"},{"size":402,"mtime":1609216554960,"results":"62","hashOfConfig":"44"},{"size":448,"mtime":1609265786500,"results":"63","hashOfConfig":"44"},{"size":229,"mtime":1609265786500,"results":"64","hashOfConfig":"44"},{"size":11795,"mtime":1609614137980,"results":"65","hashOfConfig":"44"},{"size":415,"mtime":1609265786500,"results":"66","hashOfConfig":"44"},{"size":354,"mtime":1609354494270,"results":"67","hashOfConfig":"44"},{"size":354,"mtime":1609539836520,"results":"68","hashOfConfig":"44"},{"size":848,"mtime":1609539120300,"results":"69","hashOfConfig":"44"},{"size":586,"mtime":1609550235360,"results":"70","hashOfConfig":"44"},{"size":1787,"mtime":1609539120300,"results":"71","hashOfConfig":"44"},{"size":1003,"mtime":1609539120300,"results":"72","hashOfConfig":"44"},{"size":1548,"mtime":1609354494270,"results":"73","hashOfConfig":"44"},{"size":2317,"mtime":1609216554960,"results":"74","hashOfConfig":"44"},{"size":477,"mtime":1609539120300,"results":"75","hashOfConfig":"44"},{"size":2721,"mtime":1609550325360,"results":"76","hashOfConfig":"44"},{"size":2835,"mtime":1609550325360,"results":"77","hashOfConfig":"44"},{"size":1148,"mtime":1609550235360,"results":"78","hashOfConfig":"44"},{"size":903,"mtime":1609539120300,"results":"79","hashOfConfig":"44"},{"size":699,"mtime":1609539120300,"results":"80","hashOfConfig":"44"},{"size":547,"mtime":1609539120300,"results":"81","hashOfConfig":"44"},{"size":453,"mtime":1609550325360,"results":"82","hashOfConfig":"44"},{"size":1061,"mtime":1609539120300,"results":"83","hashOfConfig":"44"},{"size":812,"mtime":1609550235360,"results":"84","hashOfConfig":"44"},{"size":3147,"mtime":1609539120300,"results":"85","hashOfConfig":"44"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"89"},"1void2r",{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108","usedDeprecatedRules":"89"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"133","usedDeprecatedRules":"89"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"156","usedDeprecatedRules":"89"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"171","usedDeprecatedRules":"89"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"176"},"/home/tomc/TBDeveloped/TBDeveloped/frontend/src/index.js",["177"],"import React from 'react'\nimport ReactDOM from 'react-dom'\n\nimport Root from './components/root'\nimport configureStore from './store/store'\nimport jwt_decode from 'jwt-decode'\nimport { setAuthToken } from './util/session_api_util'\nimport { logout } from './actions/session_actions'\n\n// test\nimport axios from \"axios\";\nimport { postQuestion, fetchQuestions, updateQuestion, deleteQuestion } from \"./actions/questions_actions\"\n// import { postQuestion, updateQuestion } from './util/questions_api_util'\n//test\n\n\ndocument.addEventListener('DOMContentLoaded', () => {\n  let store;\n  if (localStorage.jwtToken) {\n    setAuthToken(localStorage.jwtToken);\n    const decodedUser = jwt_decode(localStorage.jwtToken)\n    const preloadedState = { session: { isAuthenticated: true, user: decodedUser } };\n\n    store = configureStore(preloadedState)\n    const currentTime = Date.now() / 1000;\n    if (decodedUser.exp < currentTime) {\n      store.dispatch(logout());\n      window.location.href = '/login'\n    }\n\n  }\n  else {\n    store = configureStore({})\n  }\n\n  // test \n  window.store = store; \n  window.axios = axios; \n  window.deleteQuestion = deleteQuestion; \n  window.fetchQuestions = fetchQuestions; \n  window.updateQuestion = updateQuestion; \n  //test \n\n  const root = document.getElementById('root')\n  ReactDOM.render(<Root store={store} />, root)\n\n})\n\n\n\n",["178","179"],"/home/tomc/TBDeveloped/TBDeveloped/frontend/src/store/store.js",[],"/home/tomc/TBDeveloped/TBDeveloped/frontend/src/util/session_api_util.js",[],"/home/tomc/TBDeveloped/TBDeveloped/frontend/src/components/root.js",[],"/home/tomc/TBDeveloped/TBDeveloped/frontend/src/actions/session_actions.js",[],"/home/tomc/TBDeveloped/TBDeveloped/frontend/src/actions/questions_actions.js",[],"/home/tomc/TBDeveloped/TBDeveloped/frontend/src/util/questions_api_util.js",[],"/home/tomc/TBDeveloped/TBDeveloped/frontend/src/reducers/root_reducer.js",[],"/home/tomc/TBDeveloped/TBDeveloped/frontend/src/components/app.js",[],"/home/tomc/TBDeveloped/TBDeveloped/frontend/src/reducers/session_reducer.js",["180"],"import { RECEIVE_CURRENT_USER, RECEIVE_USER_LOGOUT, RECEIVE_USER_SIGN_IN} from '../actions/session_actions'\n\nconst initialState = { isAuthenticated: false, user: {} };\n\nexport default function(state = initialState, action) {\n\n    switch (action.type) {\n        case RECEIVE_CURRENT_USER:\n            return { \n                ...state,\n                isAuthenticated: !!action.currentUser,\n                user: action.currentUser\n            };\n            \n        case RECEIVE_USER_SIGN_IN:\n            return { \n                ...state,\n                isSignedIn: true\n            }\n\n        case RECEIVE_USER_LOGOUT:\n            return {\n            isAuthenticated: false,\n            user: undefined\n            };\n\n        default:\n            return state;\n\n        \n    }\n\n}\n","/home/tomc/TBDeveloped/TBDeveloped/frontend/src/reducers/errors_reducer.js",[],"/home/tomc/TBDeveloped/TBDeveloped/frontend/src/reducers/entities_reducer.js",[],"/home/tomc/TBDeveloped/TBDeveloped/frontend/src/util/route_util.js",[],"/home/tomc/TBDeveloped/TBDeveloped/frontend/src/components/nav/navbar_container.js",[],"/home/tomc/TBDeveloped/TBDeveloped/frontend/src/components/main/main_page.js",[],"/home/tomc/TBDeveloped/TBDeveloped/frontend/src/components/bulletin_board/bulletin_board_container.js",[],"/home/tomc/TBDeveloped/TBDeveloped/frontend/src/components/question/question_show_container.js",[],"/home/tomc/TBDeveloped/TBDeveloped/frontend/src/components/resolved/resolved_show_container.js",[],"/home/tomc/TBDeveloped/TBDeveloped/frontend/src/components/session/login_form_container.js",[],"/home/tomc/TBDeveloped/TBDeveloped/frontend/src/components/session/signup_form_container.js",[],"/home/tomc/TBDeveloped/TBDeveloped/frontend/src/components/profile/profile_container.js",[],"/home/tomc/TBDeveloped/TBDeveloped/frontend/src/components/chatroom/room.js",["181","182","183","184","185","186","187","188"],"import React, { useState, useRef, useEffect } from \"react\";\nimport { Link, redirect } from \"react-router-dom\";\nimport io from \"socket.io-client\";\n\nconst Room = (props) => {\n\n    //!TEST\n        // let [peers, setPeers] = useState([]);\n        const [mute, setMute] = useState('Mute');\n        const [video, setVideo] = useState('Video Off');\n    //!TEST\n\n\n    const userVideo = useRef();\n    const partnerVideo = useRef();\n    const peerRef = useRef();\n    const socketRef = useRef();\n    const otherUser = useRef();\n    const userStream = useRef();\n\n    // 1/1/21 test\n    const otherVideos = useRef(new Array());\n    const otherUsers = useRef(new Array()); \n    const peers = useRef(new Object()); \n    // 1/1/21 test\n\n    useEffect(() => {\n\n        navigator.mediaDevices.getUserMedia({ audio: true, video: true }).then(MediaStream => {\n            userVideo.current.srcObject = MediaStream;\n            userStream.current = MediaStream;\n\n            socketRef.current = io.connect(\"/\");\n            socketRef.current.emit(\"join room\", props.match.params.roomID);\n\n            // has the socket emit this event, this event is caught by the server. I believe there's some \n            // 'long polling' involved. Interesting because the connection happens while this is on localhost 3000\n            // and the server is on 5000  \n\n        \n            // i believe the below code only runs when the events happen, after the above event is emitted\n            // it triggers a slew of events on the server side \n            socketRef.current.on('other user', userID => {\n                callUser(userID);\n                otherUser.current = userID;\n\n                // 1/1/21 test\n                otherUsers.current.push(userID) \n                    // may have to concat in a situation where a user joins \n                    // and there are multiple existing users\n                    // they would have to make a call to each of the existing users\n\n                // otherUsers.current.forEach( (user) => {\n                //     callUser(user)\n                // })\n\n                // 1/1/21 test\n            });\n\n            // the above event is emitted from the server back to the client who created a chatroom, it basically \n            // it basically says to the user, hey there's someone in this room \n            // likely whats happening is someone clicked on a room link and this component mounts and they're alerted\n            // that there's another user, and also given the other users socket id \n            // so if the above happens then two users are sitting in the same room. \n            // but their sockets need to connect \n            // this i where the callUser function comes in. Essentially it calls the OTHER USER  \n\n            socketRef.current.on(\"user joined\", userID => {\n                otherUser.current = userID;\n\n                // 1/1/21 test\n                otherUsers.current.push(userID)\n                // this may not need concat because it should only\n                // be one user being added at a time \n                // this is from the perspective of existing users in the room \n                // 1/1/21 test\n            });\n\n\n            //!TEST - WL - trying to remove video on meeting exit\n            // socketRef.current.on( \"user left\", id => {\n            //     const peerObj = peerRef.current.find(p => p.peerID === id);\n            //     if (peerObj){\n            //         peerObj.peer.destroy();\n            //     }\n            //     const peers = peerRef.current.filter(p => p.peerID !== id);\n            //     peerRef.current = peers;\n            //     setPeers(peers); //state\n\n            // })\n            //finding the peer, destorying the peer, and removing it from the array\n            //!TEST\n\n            socketRef.current.on(\"offer\", handleRecieveCall);\n\n            socketRef.current.on(\"answer\", handleAnswer);\n\n            socketRef.current.on(\"ice-candidate\", handleNewICECandidateMsg);\n\n            // 1/1/21 test\n            socketRef.current.on(\"killconnection\", killIt);\n            // 1/1/21 test\n        });\n\n    }, []);\n\n  \n\n    function callUser(userID) {\n        peerRef.current = createPeer(userID); \n        // userID is the socket.id of the OTHER PERSON in the room \n        // it is used in the createPeer function and set to the peerRef hook  \n        userStream.current.getTracks().forEach(track => peerRef.current.addTrack(track, userStream.current));\n\n\n        // 1/1/21 test\n            // peerRef.current = {};\n            // peerRef.current[userID] = createPeer(userID)\n        // 1/1/21 test\n    }   \n    // userStream.current was set to the MediaStream above\n    // i imagine i\n\n    function createPeer(userID) {\n        const peer = new RTCPeerConnection({\n            iceServers: [\n                {\n                    urls: \"stun:stun.stunprotocol.org\"\n                },\n                {\n                    urls: 'turn:numb.viagenie.ca',\n                    credential: 'muazkh',\n                    username: 'webrtc@live.com'\n                },\n            ]\n        }); \n        // this constructor takes in an array of objects, these objects are servers which allow peers to connect, should \n        // use your own, look into creating one \n\n        peer.onicecandidate = handleICECandidateEvent;\n        peer.ontrack = handleTrackEvent;\n        peer.onnegotiationneeded = () => handleNegotiationNeededEvent(userID);\n\n        return peer;\n\n        // still in the process of calling the other user/ connecting to the other users socket \n        //starts off by instantiating a RTCPeerConnection, this is used to connect two peers and maintain the connection\n\n    }\n\n    function handleNegotiationNeededEvent(userID) {\n        peerRef.current.createOffer().then(offer => { // createOffer is a RTCPeerConnection method\n            return peerRef.current.setLocalDescription(offer);\n        }).then(() => {\n            const payload = {\n                target: userID,\n                caller: socketRef.current.id,\n                sdp: peerRef.current.localDescription\n            };\n            socketRef.current.emit(\"offer\", payload);\n        }).catch(e => console.log(e));\n    }\n\n    function handleRecieveCall(incoming) {\n        peerRef.current = createPeer();\n        const desc = new RTCSessionDescription(incoming.sdp);\n        peerRef.current.setRemoteDescription(desc).then(() => {\n            userStream.current.getTracks().forEach(track => peerRef.current.addTrack(track, userStream.current));\n        }).then(() => {\n            return peerRef.current.createAnswer();\n        }).then(answer => {\n            return peerRef.current.setLocalDescription(answer);\n        }).then(() => {\n            const payload = {\n                target: incoming.caller,\n                caller: socketRef.current.id,\n                sdp: peerRef.current.localDescription\n            }\n            socketRef.current.emit(\"answer\", payload);\n        })\n    } // this function is handling events related to someone calling the user \n\n    function handleAnswer(message) {\n        const desc = new RTCSessionDescription(message.sdp);\n        peerRef.current.setRemoteDescription(desc).catch(e => console.log(e));\n    } \n\n    // this handles answers both for the caller and the callee because it essentially to establish the connection it needs to \n\n    function handleICECandidateEvent(e) {\n        if (e.candidate) { // is e.candidate the current user / client \n            const payload = {\n                target: otherUser.current,\n                candidate: e.candidate, // this e.candidate is like a ICE config used to establish an RTCPeerConnection\n            }\n            socketRef.current.emit(\"ice-candidate\", payload);\n        }\n    }\n\n    function handleNewICECandidateMsg(incoming) { // incoming maybe whoever is calling \n        const candidate = new RTCIceCandidate(incoming);\n\n        peerRef.current.addIceCandidate(candidate) \n            .catch(e => console.log(e));\n    } // one perspective is from the user you're calling, the other user. Adds this icecandidate to it's peerRef as a key value pair? \n\n    function handleTrackEvent(e) {\n        partnerVideo.current.srcObject = e.streams[0];\n    }; // creating a video for the person you're calling? \n\n\n    function hangUp(e) {\n        console.log(peerRef.current)\n        console.log(socketRef.current)\n        console.log(\"make this hangup button\")\n        socketRef.current.emit(\"hang up\")\n        console.log(userVideo.current)\n        let vid = document.getElementById(\"myVideo\")\n        vid.parentNode.removeChild(vid);\n    }\n\n    useEffect(() => {\n        return () => {\n            stopStreamedVideo()\n        }\n    },[])\n    \n\n    //! VIDEO function\n    const playStop = () => {\n        let enabled = userVideo.current.srcObject.getVideoTracks()[0].enabled;\n        if(enabled){\n            userVideo.current.srcObject.getVideoTracks()[0].enabled = false;\n            // console.log('false', enabled)\n            setVideo('Video On')\n        }else{\n            userVideo.current.srcObject.getVideoTracks()[0].enabled = true;\n            // console.log('true', enabled)\n            setVideo('Video Off')\n        }\n    }\n\n    //! Cut connection of the person leaving page.\n    const stopStreamedVideo = () => {\n        const tracks = userStream.current.getTracks();\n        // console.log(tracks);\n        \n        //!TEST - WL  - Intent here is the black the screen whenever some one leaves\n        // let enabled = userVideo.current.srcObject.getVideoTracks()[0].enabled;\n        // if(enabled){\n        //     userVideo.current.srcObject.getVideoTracks()[0].enabled = false;\n        // }\n        //!TEST\n\n        //note - stream.stop() is deprecated. Do not use\n        tracks.forEach(function(track) {\n            track.stop();\n        });\n\n    }\n\n\n    //! MUTE function\n    const muteStream = () => {\n        const enabled = userVideo.current.srcObject.getAudioTracks()[0].enabled;\n        if(enabled){\n            userVideo.current.srcObject.getAudioTracks()[0].enabled = false;\n            setMute('Unmute')\n            // console.log('false', enabled)\n        }else {\n            userVideo.current.srcObject.getAudioTracks()[0].enabled = true;\n            // console.log('true', enabled)\n            setMute('Mute')\n        }\n    }\n    \n    // function muteStream() {\n    //     const tracks = userStream.current.getAudioTracks();\n    //     //note - stream.stop() is deprecated. Do not use\n    //     console.log('audio', tracks)\n    //     tracks.forEach(function(track) {\n    //         track.stop();\n    //     });\n    //     console.log('audio', tracks)\n\n    // }\n\n    // 1/1/21 test\n      const killIt = () => {\n        console.log(\"reading loud and clear\")\n        peerRef.current.close()\n    }\n    // 1/1/21 test\n\n    const testFeatures = () => {\n        // peerRef.current.close(); // works but only if there is a peerRef (only if a connection has been established)\n\n        socketRef.current.emit(\"hangUp\", otherUser.current)\n        peerRef.current.close()\n    }\n\n    return (\n        <div>\n            <p>Video Chat</p>\n\n            <video id=\"myVideo\" autoPlay ref={userVideo} muted/>\n            <video autoPlay ref={partnerVideo} />\n            \n\n            {/* Leave meeting works but the other user sees a frozen screen */}\n            <Link to='/'>\n                <button onClick={() => stopStreamedVideo()}>Leave Meeting</button>  \n            </Link>\n\n\n            {/* BELOW IS WORKING FOR BOTH PARTY, DONT DELETE */}\n            <button onClick={() => muteStream()}>{mute}</button> \n            <button onClick={() => playStop()}>{video}</button>  \n\n            <button onClick={() => testFeatures()}>Test Button</button>\n        </div>\n    );\n};\n\nexport default Room;","/home/tomc/TBDeveloped/TBDeveloped/frontend/src/reducers/session_errors_reducer.js",[],"/home/tomc/TBDeveloped/TBDeveloped/frontend/src/reducers/questions_errors_reducer.js",[],"/home/tomc/TBDeveloped/TBDeveloped/frontend/src/reducers/responses_errors_reducer.js",[],"/home/tomc/TBDeveloped/TBDeveloped/frontend/src/reducers/questions_reducer.js",[],"/home/tomc/TBDeveloped/TBDeveloped/frontend/src/reducers/responses_reducer.js",[],"/home/tomc/TBDeveloped/TBDeveloped/frontend/src/components/bulletin_board/bulletin_board.js",[],"/home/tomc/TBDeveloped/TBDeveloped/frontend/src/components/resolved/resolved_show.js",[],"/home/tomc/TBDeveloped/TBDeveloped/frontend/src/components/session/login_form.js",[],"/home/tomc/TBDeveloped/TBDeveloped/frontend/src/components/session/signup_form.js",[],"/home/tomc/TBDeveloped/TBDeveloped/frontend/src/components/profile/profile.js",[],"/home/tomc/TBDeveloped/TBDeveloped/frontend/src/components/nav/navbar.js",["189"],"import React from 'react';\nimport { Link } from 'react-router-dom'\nimport '../../assets/stylesheets/reset.css';\nimport '../../assets/stylesheets/navbar.scss';\n\n\nimport CreateRoom from \"../chatroom/create_room\";\n\nclass NavBar extends React.Component {\n    constructor(props) {\n        super(props);\n        this.logoutUser = this.logoutUser.bind(this);\n        this.getLinks = this.getLinks.bind(this);\n    }\n\n    logoutUser(e) {\n        e.preventDefault();\n        this.props.logout();\n    }\n\n    // Selectively render links dependent on whether the user is logged in\n    getLinks() {\n        if (this.props.loggedIn) {\n            return (\n                <div>\n                    <Link to={'/profile'}>Profile</Link>\n                    <button onClick={this.logoutUser}>Logout</button>\n                </div>\n            );\n        } else {\n            return (\n                <div className='right-navbar'>\n                    <Link to={'/login'} className='signinButton'>Sign in</Link>\n                    <Link to={'/signup'} className='signupButton'>TRY FOR FREE</Link>\n                </div>\n            );\n        }\n    }\n\n    render() {\n        return (\n            <div className='navbar-container'>\n                <div className='nav-header-bar'>\n                    <div className='left-navbar'>\n                        <div className='brand-navbar'>TBDeveloped</div>\n                        \n                        <div className='team-navbar'>About\n                            <div className='team-container'>\n                                <div className='teamInfo-navbar'>\n                                    <div>\n                                        <div className='individual-member'>\n                                            <div>Oliver Lopez</div>\n                                        </div>\n                                        <div className='individual-member'>\n                                            <div>Shane Sharareh</div>   \n                                        </div>\n                                        <div className='individual-member'>\n                                            <div>Thomas Cheung</div>\n                                        </div>\n                                        <div className='individual-member'>\n                                            <div>William Leung</div>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div> \n\n                    </div>\n\n                    <div>{ this.getLinks()}</div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default NavBar;\n","/home/tomc/TBDeveloped/TBDeveloped/frontend/src/components/question/question_show.js",[],"/home/tomc/TBDeveloped/TBDeveloped/frontend/src/actions/responses_actions.js",[],"/home/tomc/TBDeveloped/TBDeveloped/frontend/src/components/question/question_index.js",[],"/home/tomc/TBDeveloped/TBDeveloped/frontend/src/components/resolved/resolved_index.js",[],"/home/tomc/TBDeveloped/TBDeveloped/frontend/src/components/question/create_question_form_container.js",[],"/home/tomc/TBDeveloped/TBDeveloped/frontend/src/components/chatroom/create_room.js",[],"/home/tomc/TBDeveloped/TBDeveloped/frontend/src/components/question/update_question_form_container.js",["190"],"import React from 'react'\nimport { connect } from 'react-redux'\nimport { updateQuestion } from '../../actions/questions_actions'\nimport QuestionForm from './question_form'\n\n\nexport class UpdateQuestionForm extends React.Component {\n\n    constructor(props){\n        super(props)\n    }\n\n    componentDidMount() {\n        this.props.receiveReview(this.props.reviewId)\n    }\n\n    render() {\n       const {questionId, subject, content, tag, solved, user} = this.props\n        return (\n            <QuestionForm  \n                questionId = {questionId}\n                subject={subject}\n                content={content}\n                tag={tag}\n                solved={solved}\n                user={user}\n            />\n        );\n    }\n}\n\n\n\nconst mapStateToProps = (state) => {\n    \n    return({ formType: 'Update Question!'}\n    )\n}\n\nconst mapDispatchToProps = (dispatch) => ({\n    processForm: (questionId, questionUpdates) => dispatch(updateQuestion(questionId, questionUpdates))\n})\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(QuestionForm)","/home/tomc/TBDeveloped/TBDeveloped/frontend/src/util/responses_api_util.js",[],"/home/tomc/TBDeveloped/TBDeveloped/frontend/src/components/question/question_form.js",[],["191","192"],{"ruleId":"193","severity":1,"message":"194","line":12,"column":10,"nodeType":"195","messageId":"196","endLine":12,"endColumn":22},{"ruleId":"197","replacedBy":"198"},{"ruleId":"199","replacedBy":"200"},{"ruleId":"201","severity":1,"message":"202","line":5,"column":1,"nodeType":"203","endLine":33,"endColumn":2},{"ruleId":"193","severity":1,"message":"204","line":2,"column":16,"nodeType":"195","messageId":"196","endLine":2,"endColumn":24},{"ruleId":"193","severity":1,"message":"205","line":22,"column":11,"nodeType":"195","messageId":"196","endLine":22,"endColumn":22},{"ruleId":"206","severity":1,"message":"207","line":22,"column":32,"nodeType":"208","messageId":"209","endLine":22,"endColumn":43},{"ruleId":"206","severity":1,"message":"207","line":23,"column":31,"nodeType":"208","messageId":"209","endLine":23,"endColumn":42},{"ruleId":"193","severity":1,"message":"210","line":24,"column":11,"nodeType":"195","messageId":"196","endLine":24,"endColumn":16},{"ruleId":"211","severity":1,"message":"212","line":24,"column":26,"nodeType":"208","messageId":"209","endLine":24,"endColumn":38},{"ruleId":"213","severity":1,"message":"214","line":105,"column":8,"nodeType":"215","endLine":105,"endColumn":10,"suggestions":"216"},{"ruleId":"193","severity":1,"message":"217","line":212,"column":14,"nodeType":"195","messageId":"196","endLine":212,"endColumn":20},{"ruleId":"193","severity":1,"message":"218","line":7,"column":8,"nodeType":"195","messageId":"196","endLine":7,"endColumn":18},{"ruleId":"219","severity":1,"message":"220","line":9,"column":5,"nodeType":"221","messageId":"222","endLine":11,"endColumn":6},{"ruleId":"197","replacedBy":"223"},{"ruleId":"199","replacedBy":"224"},"no-unused-vars","'postQuestion' is defined but never used.","Identifier","unusedVar","no-native-reassign",["225"],"no-negated-in-lhs",["226"],"import/no-anonymous-default-export","Unexpected default export of anonymous function","ExportDefaultDeclaration","'redirect' is defined but never used.","'otherVideos' is assigned a value but never used.","no-array-constructor","The array literal notation [] is preferable.","NewExpression","preferLiteral","'peers' is assigned a value but never used.","no-new-object","The object literal notation {} is preferrable.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'callUser', 'handleRecieveCall', and 'props.match.params.roomID'. Either include them or remove the dependency array.","ArrayExpression",["227"],"'hangUp' is defined but never used.","'CreateRoom' is defined but never used.","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor",["225"],["226"],"no-global-assign","no-unsafe-negation",{"desc":"228","fix":"229"},"Update the dependencies array to be: [callUser, handleRecieveCall, props.match.params.roomID]",{"range":"230","text":"231"},[4116,4118],"[callUser, handleRecieveCall, props.match.params.roomID]"]