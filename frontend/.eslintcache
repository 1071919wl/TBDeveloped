[{"/Users/shanesharareh/Desktop/App Academy/TBD2/TBDeveloped/frontend/src/index.js":"1","/Users/shanesharareh/Desktop/App Academy/TBD2/TBDeveloped/frontend/src/store/store.js":"2","/Users/shanesharareh/Desktop/App Academy/TBD2/TBDeveloped/frontend/src/components/root.js":"3","/Users/shanesharareh/Desktop/App Academy/TBD2/TBDeveloped/frontend/src/util/session_api_util.js":"4","/Users/shanesharareh/Desktop/App Academy/TBD2/TBDeveloped/frontend/src/actions/session_actions.js":"5","/Users/shanesharareh/Desktop/App Academy/TBD2/TBDeveloped/frontend/src/components/app.js":"6","/Users/shanesharareh/Desktop/App Academy/TBD2/TBDeveloped/frontend/src/reducers/root_reducer.js":"7","/Users/shanesharareh/Desktop/App Academy/TBD2/TBDeveloped/frontend/src/reducers/errors_reducer.js":"8","/Users/shanesharareh/Desktop/App Academy/TBD2/TBDeveloped/frontend/src/reducers/session_reducer.js":"9","/Users/shanesharareh/Desktop/App Academy/TBD2/TBDeveloped/frontend/src/reducers/entities_reducer.js":"10","/Users/shanesharareh/Desktop/App Academy/TBD2/TBDeveloped/frontend/src/util/route_util.js":"11","/Users/shanesharareh/Desktop/App Academy/TBD2/TBDeveloped/frontend/src/components/nav/navbar_container.js":"12","/Users/shanesharareh/Desktop/App Academy/TBD2/TBDeveloped/frontend/src/components/session/login_form_container.js":"13","/Users/shanesharareh/Desktop/App Academy/TBD2/TBDeveloped/frontend/src/components/resolved/resolved_show_container.js":"14","/Users/shanesharareh/Desktop/App Academy/TBD2/TBDeveloped/frontend/src/components/session/signup_form_container.js":"15","/Users/shanesharareh/Desktop/App Academy/TBD2/TBDeveloped/frontend/src/components/bulletin_board/bulletin_board_container.js":"16","/Users/shanesharareh/Desktop/App Academy/TBD2/TBDeveloped/frontend/src/components/question/question_show_container.js":"17","/Users/shanesharareh/Desktop/App Academy/TBD2/TBDeveloped/frontend/src/components/profile/profile_container.js":"18","/Users/shanesharareh/Desktop/App Academy/TBD2/TBDeveloped/frontend/src/components/chatroom/room_container.js":"19","/Users/shanesharareh/Desktop/App Academy/TBD2/TBDeveloped/frontend/src/components/chatroom/room.js":"20","/Users/shanesharareh/Desktop/App Academy/TBD2/TBDeveloped/frontend/src/components/main/main_page.js":"21","/Users/shanesharareh/Desktop/App Academy/TBD2/TBDeveloped/frontend/src/reducers/session_errors_reducer.js":"22","/Users/shanesharareh/Desktop/App Academy/TBD2/TBDeveloped/frontend/src/reducers/questions_errors_reducer.js":"23","/Users/shanesharareh/Desktop/App Academy/TBD2/TBDeveloped/frontend/src/reducers/questions_reducer.js":"24","/Users/shanesharareh/Desktop/App Academy/TBD2/TBDeveloped/frontend/src/reducers/responses_reducer.js":"25","/Users/shanesharareh/Desktop/App Academy/TBD2/TBDeveloped/frontend/src/reducers/profile_reducer.js":"26","/Users/shanesharareh/Desktop/App Academy/TBD2/TBDeveloped/frontend/src/reducers/responses_errors_reducer.js":"27","/Users/shanesharareh/Desktop/App Academy/TBD2/TBDeveloped/frontend/src/reducers/user_reducer.js":"28","/Users/shanesharareh/Desktop/App Academy/TBD2/TBDeveloped/frontend/src/components/resolved/resolved_show.js":"29","/Users/shanesharareh/Desktop/App Academy/TBD2/TBDeveloped/frontend/src/reducers/messages_reducer.js":"30","/Users/shanesharareh/Desktop/App Academy/TBD2/TBDeveloped/frontend/src/components/session/login_form.js":"31","/Users/shanesharareh/Desktop/App Academy/TBD2/TBDeveloped/frontend/src/actions/questions_actions.js":"32","/Users/shanesharareh/Desktop/App Academy/TBD2/TBDeveloped/frontend/src/components/bulletin_board/bulletin_board.js":"33","/Users/shanesharareh/Desktop/App Academy/TBD2/TBDeveloped/frontend/src/components/nav/navbar.js":"34","/Users/shanesharareh/Desktop/App Academy/TBD2/TBDeveloped/frontend/src/components/question/question_show.js":"35","/Users/shanesharareh/Desktop/App Academy/TBD2/TBDeveloped/frontend/src/components/profile/profile.js":"36","/Users/shanesharareh/Desktop/App Academy/TBD2/TBDeveloped/frontend/src/components/session/signup_form.js":"37","/Users/shanesharareh/Desktop/App Academy/TBD2/TBDeveloped/frontend/src/actions/responses_actions.js":"38","/Users/shanesharareh/Desktop/App Academy/TBD2/TBDeveloped/frontend/src/components/resolved/resolved_index.js":"39","/Users/shanesharareh/Desktop/App Academy/TBD2/TBDeveloped/frontend/src/components/question/question_index.js":"40","/Users/shanesharareh/Desktop/App Academy/TBD2/TBDeveloped/frontend/src/util/questions_api_util.js":"41","/Users/shanesharareh/Desktop/App Academy/TBD2/TBDeveloped/frontend/src/actions/messages_actions.js":"42","/Users/shanesharareh/Desktop/App Academy/TBD2/TBDeveloped/frontend/src/components/question/create_question_form_container.js":"43","/Users/shanesharareh/Desktop/App Academy/TBD2/TBDeveloped/frontend/src/components/chatroom/create_room.js":"44","/Users/shanesharareh/Desktop/App Academy/TBD2/TBDeveloped/frontend/src/components/question/update_question_form_container.js":"45","/Users/shanesharareh/Desktop/App Academy/TBD2/TBDeveloped/frontend/src/components/messenger/messenger_container.js":"46","/Users/shanesharareh/Desktop/App Academy/TBD2/TBDeveloped/frontend/src/components/answer/answer_index_container.js":"47","/Users/shanesharareh/Desktop/App Academy/TBD2/TBDeveloped/frontend/src/components/answer/answer_index_item_container.js":"48","/Users/shanesharareh/Desktop/App Academy/TBD2/TBDeveloped/frontend/src/components/answer/create_answers_form_container.js":"49","/Users/shanesharareh/Desktop/App Academy/TBD2/TBDeveloped/frontend/src/components/messenger/messenger.js":"50","/Users/shanesharareh/Desktop/App Academy/TBD2/TBDeveloped/frontend/src/util/responses_api_util.js":"51","/Users/shanesharareh/Desktop/App Academy/TBD2/TBDeveloped/frontend/src/util/messages_api_util.js":"52","/Users/shanesharareh/Desktop/App Academy/TBD2/TBDeveloped/frontend/src/components/question/question_form.js":"53","/Users/shanesharareh/Desktop/App Academy/TBD2/TBDeveloped/frontend/src/components/answer/answer_form.js":"54","/Users/shanesharareh/Desktop/App Academy/TBD2/TBDeveloped/frontend/src/components/answer/answer_index.js":"55","/Users/shanesharareh/Desktop/App Academy/TBD2/TBDeveloped/frontend/src/components/answer/answer_index_item.js":"56"},{"size":1233,"mtime":1611185641766,"results":"57","hashOfConfig":"58"},{"size":930,"mtime":1611170831349,"results":"59","hashOfConfig":"58"},{"size":286,"mtime":1611170831148,"results":"60","hashOfConfig":"58"},{"size":574,"mtime":1611170831356,"results":"61","hashOfConfig":"58"},{"size":1775,"mtime":1611170830993,"results":"62","hashOfConfig":"58"},{"size":1458,"mtime":1611185641480,"results":"63","hashOfConfig":"58"},{"size":272,"mtime":1611170831343,"results":"64","hashOfConfig":"58"},{"size":383,"mtime":1611170831177,"results":"65","hashOfConfig":"58"},{"size":788,"mtime":1611170831347,"results":"66","hashOfConfig":"58"},{"size":481,"mtime":1611170831163,"results":"67","hashOfConfig":"58"},{"size":1237,"mtime":1611170831354,"results":"68","hashOfConfig":"58"},{"size":511,"mtime":1611170831120,"results":"69","hashOfConfig":"58"},{"size":513,"mtime":1611170831151,"results":"70","hashOfConfig":"58"},{"size":877,"mtime":1611170831147,"results":"71","hashOfConfig":"58"},{"size":623,"mtime":1611170831154,"results":"72","hashOfConfig":"58"},{"size":480,"mtime":1611185641655,"results":"73","hashOfConfig":"58"},{"size":1019,"mtime":1611170831141,"results":"74","hashOfConfig":"58"},{"size":611,"mtime":1611170831134,"results":"75","hashOfConfig":"58"},{"size":211,"mtime":1611170831113,"results":"76","hashOfConfig":"58"},{"size":15624,"mtime":1611170831110,"results":"77","hashOfConfig":"58"},{"size":5851,"mtime":1611170831114,"results":"78","hashOfConfig":"58"},{"size":487,"mtime":1611170831345,"results":"79","hashOfConfig":"58"},{"size":354,"mtime":1611170831338,"results":"80","hashOfConfig":"58"},{"size":888,"mtime":1611185641793,"results":"81","hashOfConfig":"58"},{"size":565,"mtime":1611170831342,"results":"82","hashOfConfig":"58"},{"size":297,"mtime":1611170831336,"results":"83","hashOfConfig":"58"},{"size":354,"mtime":1611170831340,"results":"84","hashOfConfig":"58"},{"size":562,"mtime":1611170831348,"results":"85","hashOfConfig":"58"},{"size":1003,"mtime":1611170831146,"results":"86","hashOfConfig":"58"},{"size":770,"mtime":1611170831282,"results":"87","hashOfConfig":"58"},{"size":2712,"mtime":1611170831150,"results":"88","hashOfConfig":"58"},{"size":3119,"mtime":1611170830984,"results":"89","hashOfConfig":"58"},{"size":2514,"mtime":1611185641617,"results":"90","hashOfConfig":"58"},{"size":8871,"mtime":1611185641683,"results":"91","hashOfConfig":"58"},{"size":6511,"mtime":1611185641737,"results":"92","hashOfConfig":"58"},{"size":8336,"mtime":1611185641711,"results":"93","hashOfConfig":"58"},{"size":7095,"mtime":1611170831152,"results":"94","hashOfConfig":"58"},{"size":1155,"mtime":1611170830990,"results":"95","hashOfConfig":"58"},{"size":931,"mtime":1611170831144,"results":"96","hashOfConfig":"58"},{"size":1095,"mtime":1611170831139,"results":"97","hashOfConfig":"58"},{"size":696,"mtime":1611170831352,"results":"98","hashOfConfig":"58"},{"size":1352,"mtime":1611170830939,"results":"99","hashOfConfig":"58"},{"size":654,"mtime":1611170831135,"results":"100","hashOfConfig":"58"},{"size":489,"mtime":1611170831107,"results":"101","hashOfConfig":"58"},{"size":1111,"mtime":1611170831143,"results":"102","hashOfConfig":"58"},{"size":555,"mtime":1611170831117,"results":"103","hashOfConfig":"58"},{"size":782,"mtime":1611170831096,"results":"104","hashOfConfig":"58"},{"size":551,"mtime":1611170831099,"results":"105","hashOfConfig":"58"},{"size":761,"mtime":1611185641438,"results":"106","hashOfConfig":"58"},{"size":3112,"mtime":1611170831115,"results":"107","hashOfConfig":"58"},{"size":813,"mtime":1611170831353,"results":"108","hashOfConfig":"58"},{"size":481,"mtime":1611170831351,"results":"109","hashOfConfig":"58"},{"size":5294,"mtime":1611179340568,"results":"110","hashOfConfig":"58"},{"size":2802,"mtime":1611185641909,"results":"111","hashOfConfig":"58"},{"size":1473,"mtime":1611185641396,"results":"112","hashOfConfig":"58"},{"size":1625,"mtime":1611170831098,"results":"113","hashOfConfig":"58"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"11hnl7n",{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"124","messages":"125","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"126","usedDeprecatedRules":"127"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"132","messages":"133","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"127"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"154","messages":"155","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"127"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"166","messages":"167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"168","messages":"169","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"172","messages":"173","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"174","messages":"175","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"176","messages":"177","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"178","messages":"179","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"180","messages":"181","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"182","usedDeprecatedRules":"127"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"127"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"187","usedDeprecatedRules":"127"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"190","usedDeprecatedRules":"127"},{"filePath":"191","messages":"192","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"193","messages":"194","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"195","messages":"196","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"197","messages":"198","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"199","messages":"200","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"201","messages":"202","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"203","messages":"204","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"205","messages":"206","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"207","messages":"208","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"209","messages":"210","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"211","messages":"212","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"213","messages":"214","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"215","messages":"216","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"217","usedDeprecatedRules":"127"},{"filePath":"218","messages":"219","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"220","messages":"221","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"222","messages":"223","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"224","messages":"225","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"226","messages":"227","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"228","usedDeprecatedRules":"127"},{"filePath":"229","messages":"230","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"231","usedDeprecatedRules":"127"},{"filePath":"232","messages":"233","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/shanesharareh/Desktop/App Academy/TBD2/TBDeveloped/frontend/src/index.js",[],"/Users/shanesharareh/Desktop/App Academy/TBD2/TBDeveloped/frontend/src/store/store.js",[],"/Users/shanesharareh/Desktop/App Academy/TBD2/TBDeveloped/frontend/src/components/root.js",[],"/Users/shanesharareh/Desktop/App Academy/TBD2/TBDeveloped/frontend/src/util/session_api_util.js",[],"/Users/shanesharareh/Desktop/App Academy/TBD2/TBDeveloped/frontend/src/actions/session_actions.js",[],"/Users/shanesharareh/Desktop/App Academy/TBD2/TBDeveloped/frontend/src/components/app.js",["234"],"import React from 'react';\nimport { AuthRoute, ProtectedRoute } from '../util/route_util';\nimport { Route, Switch } from 'react-router-dom';\nimport NavBarContainer from './nav/navbar_container';\nimport MainPage from './main/main_page';\nimport BulletinBoardContainer from './bulletin_board/bulletin_board_container'\nimport QuestionShowContainer from './question/question_show_container'\nimport ResolvedShowContainer from './resolved/resolved_show_container'\nimport LoginFormContainer from './session/login_form_container';\nimport SignupFormContainer from './session/signup_form_container';\nimport ProfileFormContainer from './profile/profile_container'\nimport RoomContainer from './chatroom/room_container'\n// Room component \n\n\nconst App = () => (\n  <div>\n    <NavBarContainer />\n    <Switch>\n      <Route path=\"/room/:roomID\" component={RoomContainer}/>\n      <AuthRoute exact path=\"/\" component={MainPage} />\n      <AuthRoute exact path=\"/login\" component={LoginFormContainer} />\n      <AuthRoute exact path=\"/signup\" component={SignupFormContainer} />\n      <ProtectedRoute exact path=\"/profile\" component={ProfileFormContainer} />\n      <ProtectedRoute exact path=\"/bulletin\" component={BulletinBoardContainer} />\n      <ProtectedRoute exact path=\"/question/:questionId\" component={QuestionShowContainer} />\n      <ProtectedRoute exact path=\"/resolved/:resolvedId\" component={ResolvedShowContainer} />\n      \n    </Switch>\n  </div>\n);\n\nexport default App;",["235","236"],"/Users/shanesharareh/Desktop/App Academy/TBD2/TBDeveloped/frontend/src/reducers/root_reducer.js",[],"/Users/shanesharareh/Desktop/App Academy/TBD2/TBDeveloped/frontend/src/reducers/errors_reducer.js",[],"/Users/shanesharareh/Desktop/App Academy/TBD2/TBDeveloped/frontend/src/reducers/session_reducer.js",["237"],"/Users/shanesharareh/Desktop/App Academy/TBD2/TBDeveloped/frontend/src/reducers/entities_reducer.js",[],"/Users/shanesharareh/Desktop/App Academy/TBD2/TBDeveloped/frontend/src/util/route_util.js",[],"/Users/shanesharareh/Desktop/App Academy/TBD2/TBDeveloped/frontend/src/components/nav/navbar_container.js",[],"/Users/shanesharareh/Desktop/App Academy/TBD2/TBDeveloped/frontend/src/components/session/login_form_container.js",[],"/Users/shanesharareh/Desktop/App Academy/TBD2/TBDeveloped/frontend/src/components/resolved/resolved_show_container.js",[],"/Users/shanesharareh/Desktop/App Academy/TBD2/TBDeveloped/frontend/src/components/session/signup_form_container.js",[],"/Users/shanesharareh/Desktop/App Academy/TBD2/TBDeveloped/frontend/src/components/bulletin_board/bulletin_board_container.js",[],"/Users/shanesharareh/Desktop/App Academy/TBD2/TBDeveloped/frontend/src/components/question/question_show_container.js",[],"/Users/shanesharareh/Desktop/App Academy/TBD2/TBDeveloped/frontend/src/components/profile/profile_container.js",[],"/Users/shanesharareh/Desktop/App Academy/TBD2/TBDeveloped/frontend/src/components/chatroom/room_container.js",[],"/Users/shanesharareh/Desktop/App Academy/TBD2/TBDeveloped/frontend/src/components/chatroom/room.js",["238","239","240","241","242","243","244","245"],"/Users/shanesharareh/Desktop/App Academy/TBD2/TBDeveloped/frontend/src/components/main/main_page.js",[],"/Users/shanesharareh/Desktop/App Academy/TBD2/TBDeveloped/frontend/src/reducers/session_errors_reducer.js",[],"/Users/shanesharareh/Desktop/App Academy/TBD2/TBDeveloped/frontend/src/reducers/questions_errors_reducer.js",[],"/Users/shanesharareh/Desktop/App Academy/TBD2/TBDeveloped/frontend/src/reducers/questions_reducer.js",[],"/Users/shanesharareh/Desktop/App Academy/TBD2/TBDeveloped/frontend/src/reducers/responses_reducer.js",[],"/Users/shanesharareh/Desktop/App Academy/TBD2/TBDeveloped/frontend/src/reducers/profile_reducer.js",[],"/Users/shanesharareh/Desktop/App Academy/TBD2/TBDeveloped/frontend/src/reducers/responses_errors_reducer.js",[],"/Users/shanesharareh/Desktop/App Academy/TBD2/TBDeveloped/frontend/src/reducers/user_reducer.js",[],"/Users/shanesharareh/Desktop/App Academy/TBD2/TBDeveloped/frontend/src/components/resolved/resolved_show.js",[],"/Users/shanesharareh/Desktop/App Academy/TBD2/TBDeveloped/frontend/src/reducers/messages_reducer.js",[],"/Users/shanesharareh/Desktop/App Academy/TBD2/TBDeveloped/frontend/src/components/session/login_form.js",[],"/Users/shanesharareh/Desktop/App Academy/TBD2/TBDeveloped/frontend/src/actions/questions_actions.js",["246"],"/Users/shanesharareh/Desktop/App Academy/TBD2/TBDeveloped/frontend/src/components/bulletin_board/bulletin_board.js",["247"],"import React from 'react'\nimport QuestionIndex from '../question/question_index'\nimport ResolvedIndex from '../resolved/resolved_index'\nimport '../../assets/stylesheets/bulletin_board.css'\nimport CreateQuestionFormContainer from '../question/create_question_form_container'\nimport MessengerContainer from '../messenger/messenger_container'\n\n\n\nclass BulletinBoard extends React.Component{\n    constructor(props){\n        super(props)\n        \n        this.state = {\n            idx: 0\n        }\n        this.handleClick = this.handleClick.bind(this)\n    }\n\n    componentDidMount() {\n        this.props.fetchQuestions()\n    }\n\n    componentDidUpdate(prevState) {\n        if(Object.values(prevState.questions).length != Object.values(this.props.questions).length) {\n            this.props.fetchQuestions()\n        }\n    }\n\n\n    handleClick(num){\n        this.setState({idx: num})\n    }\n\n\n    isEmpty(obj) {\n        return Object.keys(obj).length === 0;\n    }\n\n    render(){\n        \n\n        // console.log(this.props.questions)\n\n        if(this.isEmpty(this.props.questions)){\n            return(\n                null\n            )\n        }else{\n            // console.log(this.props.questions)\n            const questionArray = []\n            const resolvedArray = []\n            const usernames = []\n            Object.values(this.props.questions).forEach(question => {\n                if(question.solved === false){\n                    questionArray.push(question)\n                }else{\n                    resolvedArray.push(question)\n                }\n                usernames.push(question.user)\n\n            })\n            return(\n                <div>\n                    <h1></h1>\n\n                    <div>\n                        <div className='qr'>\n                            <div className='questionsTab' onClick={() => this.handleClick(0)}>Questions</div>\n                            <div className='resolvedQuestionsTab' onClick={() => this.handleClick(1)}>Resolved Questions</div>\n                        </div>\n\n                        {this.state.idx === 0 ? <QuestionIndex questions={questionArray} /> \n                        : \n                        <ResolvedIndex resolved={resolvedArray}/>}\n\n                    </div>\n                    <div className='questionForm'>\n                        <CreateQuestionFormContainer />\n                    </div>\n\n                    <MessengerContainer />\n                </div>\n            )\n        }\n    }\n\n\n}\n\nexport default BulletinBoard\n\n\n","/Users/shanesharareh/Desktop/App Academy/TBD2/TBDeveloped/frontend/src/components/nav/navbar.js",[],"/Users/shanesharareh/Desktop/App Academy/TBD2/TBDeveloped/frontend/src/components/question/question_show.js",["248"],"import React from 'react' \nimport UpdateQuestionForm from './update_question_form_container'\nimport CreateQuestionFormContainer from '../question/create_question_form_container'\nimport CreateRoom from '../chatroom/create_room'\n\nimport {Link} from 'react-router-dom'\nimport AnswerIndexContainer from '../answer/answer_index_container'\nimport AnswerIndexItemContainer from '../answer/answer_index_item_container'\nimport CreateAnswersFormContainer from '../answer/create_answers_form_container'\n\n\n\n\n\nclass QuestionShow extends React.Component {\n\n    constructor(props){\n        super(props)\n        this.state = {\n            users: []\n        }\n        this.updateQuestion = this.props.updateQuestion.bind(this)\n        this.deleteQuestion = this.props.deleteQuestion.bind(this)\n    }\n\n    componentDidMount(){\n\n        this.props.fetchQuestion(this.props.questionId)\n    }\n    \n    isEmpty(obj){\n        return Object.keys(obj).length === 0\n    }\n\n    \n\n    render(){\n        \n        const question = Object.values(this.props.question)\n        // console.log(question)\n        if(this.isEmpty(question) === true){\n            return(\n                <div></div>\n            )\n        }else{\n            const update = () => {\n                if(question[0].user._id === this.props.userId){\n                    return(\n                        <div>\n                            <UpdateQuestionForm \n                                questionId = {question[0]._id}\n                                subject = {question[0].subject}\n                                content = {question[0].content}\n                                tag = {question[0].tag}\n                                solved = {question[0].solved}\n                                user = {question[0].user._id}\n                            />\n                        </div>\n                    )\n                }else{\n                    // console.log('you are not the owner of this question')\n                }\n            }\n\n            const deleteQuestion = () => {\n                if (question[0].user._id === this.props.userId) {\n                    return(\n                    \n                       <div>\n                        <Link to=\"/bulletin\">\n                        <button onClick={() => this.props.deleteQuestion(question[0]._id)}>\n                            \n                                Delete Question\n                        </button>\n                        </Link>\n\n                        </div>\n                    )\n                }\n            }\n\n            const userResponse = () => {\n                return(\n                question[0].responses.map((response, id) => {\n                    if(response.user._id === this.props.userId){\n                        return(\n                            <div key={id}>\n                                <AnswerIndexItemContainer \n                                    response = {response}\n                                    questionID = {question[0]._id}\n                                    currentUserID = {this.props.userId}\n                                    fetchQuestion = {this.props.fetchQuestion}\n                                   \n                                />\n                            </div>\n                        )                       \n                    }\n                })\n                )\n            }\n            \n            const questionCreatorResponses = () => {\n               \n                if (question[0].responses.length >0) {\n                    \n                    if (question[0].user._id === this.props.userId){\n                    return(\n                        \n                        <div>\n                            <AnswerIndexContainer \n                                responses = {question[0].responses}\n                                questionID = {question[0]._id}\n                                currentUserID = {this.props.userId}\n                                fetchQuestion = {this.props.fetchQuestion}\n                                \n                               \n                            />\n                        </div>\n                    \n                    )\n                }}else{\n                    <div></div>\n                }\n            }\n            \n             const createAnswers = () => {\n                if (question[0].user._id !== this.props.userId) {\n                    return(\n                        \n                    \n                        <div>\n\n                            <CreateAnswersFormContainer \n                                questionID = {question[0]._id}\n                                fetchQuestion = {this.props.fetchQuestion}\n                                \n                            />\n\n                        </div>\n                    \n                    )\n                }\n            }\n            \n            return(\n                < div className=\"question_container\">\n                    <div className=\"question_description\">\n\n                        {/* {console.log(this.state.users)} */}\n                        <div className=\"question_header\">\n                            <h2>{question[0].subject}</h2>\n                            <p className=\"date_posted\">posted: {Date(question[0].createdAt)}</p>\n                        </div>\n                         <div className=\"question_body\">\n                             <p>{question[0].content}</p>\n\n                        </div>   \n\n                    <div className=\"question_footer\">\n                    { question[0].solved ? <p> &#10003; Solved</p> : <p>&#10007; Unsolved</p> }\n                    <p className=\"tag\">Tag: {question[0].tag}</p>\n                         <img className = \"question-show-author-image\" alt=\"robots\" src={`https://robohash.org/${question[0].user._id}?100x100`} />\n\n                        <h1 className=\"question-author\"> posted by {question[0].user.username}</h1>\n\n                        </div>\n\n                    </div>\n\n                    {update()}\n                    {deleteQuestion()}\n                    {userResponse()}\n                    {questionCreatorResponses()}\n\n\n                    {createAnswers()}\n\n\n                    <div className= \"show_createform_container\">\n                        <CreateQuestionFormContainer />\n                    </div>\n                    <div>\n                        <CreateRoom />\n                    </div>\n\n                </div>\n            )\n        }\n    }\n}\n\nexport default QuestionShow","/Users/shanesharareh/Desktop/App Academy/TBD2/TBDeveloped/frontend/src/components/profile/profile.js",["249","250"],"import React from 'react';\n// import CreateQuestionFormContainer from '../question/create_question_form_container'\nimport { Link } from 'react-router-dom'\nimport '../../assets/stylesheets/profile.scss';\n\n\nclass Profile extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.caseResolved = this.caseResolved.bind(this);\n    }\n\n\n    componentDidMount() {\n        // console.log(this.props.currentUser.questions)\n        this.props.fetchProfileQuestions(this.props.currentUser.questions)\n        this.props.fetchUser();\n    }\n\n\n    caseResolved(bool) {\n        if (bool === 'false') {\n            return (\n                <div className='bool_info'>\n                    False\n                </div>\n            )\n        } else {\n            return (\n                <div className='bool_info2'>\n                    True\n                </div>\n            )\n        }\n    }\n\n\n    render() {\n        let boolean = false;\n        let amtOfPost = 0;\n        let amtOfResponse = 0;\n\n        const profile_questions = () => {\n            \n            if(this.props.currentUser.questions.length > 0){\n                amtOfPost = this.props.currentUser.questions.length;\n                return(\n\n                    this.props.currentUser.questions.map((question, id) => {\n\n                        return (\n                            <div key={id} className='questions_topic'>\n                                <div className='individual_case'>\n                                    <label>\n                                        <div className='sub_label'>Case Id:</div>\n                                        <Link to={`/question/${question._id}`}>\n                                            <div className='actual_info'>{question._id}</div>\n                                        </Link>\n                                    </label>\n                                    <label>\n                                        <div className='sub_label'>Subject:</div>\n                                        <div className='actual_info'>{question.subject}</div>\n                                    </label>\n                                    <label>\n                                        <div className='sub_label'>Case Closed: </div>\n                                        {question.solved ? 'True' : 'False'}\n                                    </label>\n                                </div>\n                            </div>\n                        )\n\n                        // if(this.props.currentUser.questions.includes(question._id)){\n                        //     // console.log('jjello', this.props.currentUser);\n                        //     if(question.user._id === this.props.currentUser.id){\n                        //         // console.log('bellow', (question.user._id));\n                        //         amtOfPost += 1;\n                        //         {`${question.solved}` === 'false' ? boolean = 'false' : boolean = true}\n                        //         return(\n                        //             <div key={id} className='questions_topic'>\n                        //                 <div className='individual_case'>\n                        //                     <label>\n                        //                         <div className='sub_label'>Case Id:</div>\n                        //                         <Link to={`/question/${question._id}`}>\n                        //                         <div className='actual_info'>{question._id}</div>\n                        //                         </Link>\n                        //                     </label>\n                        //                     <label>\n                        //                         <div className='sub_label'>Subject:</div>\n                        //                         <div className='actual_info'>{question.subject}</div>\n                        //                     </label>\n                        //                     <label>\n                        //                         <div className='sub_label'>Case Closed: </div>\n                        //                         {/* <div className='actual_info'>{`${question.solved}`}</div> */}\n                        //                         {this.caseResolved(boolean)}\n                        //                     </label>\n                        //                 </div>\n\n                        //             </div>\n                        //         )\n                        // }\n\n                        //! USERS ANSWERED/RESPONDED POSTS. REVISIT AFTER COHORT. SHOULD BE A SEPARATE IF STATEMENT\n                        // else{\n                        //     return (\n                        //         <div key={id}>\n                        //             <div className=\"post_answered_title\">Posts Answered:</div>\n                        //             <div>SUBJECT:\n                        //                 <Link to={`/question/${question._id}`}>\n                        //                     {question.subject}\n                        //                 </Link>\n                        //             </div>\n                        //             <div>CONTENT: \n                        //                 {question.content}\n                        //             </div>\n                        //         </div>\n                        //     )\n                        // }\n                        // }\n\n                    })\n                )\n                // console.log(this.props.profile_questions)\n            }\n        }\n\n\n\n        const profile_responses = () => {\n\n            if (this.props.profile_questions.length > 0) {\n                return (\n                    this.props.profile_questions.map((question, id) => {\n                        return (\n                            question.responses.map((response, id) => {\n                                if (response.user._id === this.props.currentUser.id) {\n                                    amtOfResponse += 1;\n                                    return (\n                                        <div key={id} className='questions_topic'>\n                                            <div className='individual_case'>\n                                                <label>\n                                                    <div className='sub_label'>Relating to Case Id:</div>\n                                                    <Link to={`/question/${question._id}`}>\n                                                        <div className='actual_info'>{question._id}</div>\n                                                    </Link>\n                                                </label>\n                                                <label>\n                                                    <div className='sub_label'>Response:</div>\n                                                    <div className='actual_info'>{response.answer}</div>\n                                                </label>\n                                            </div>\n                                        </div>\n                                    )\n\n                                }\n                            })\n                        )\n                    }\n                    )\n\n                )\n            }\n        }\n        // console.log('user stuff', this.props.currentUser.id)\n        return (\n            <div className='profile_container'>\n\n                <div className=\"created_post_info\">\n                    <div className=\"created_post_title\">Created Posts:</div>\n\n                    {profile_questions()}\n\n                    <div className=\"responed_post_title\">Response to Posts:</div>\n\n                    {profile_responses()}\n\n                </div>\n\n                <div className=\"user_profile_info\">\n                    <div className='profile_name'>{this.props.currentUser.username}'s Profile</div>\n                    <img alt=\"robots\" src={`https://robohash.org/${this.props.currentUser.id}?100x100`} className='roboImgApi' />\n\n                    <div className='profile_post_amt'>Number of Posts: {amtOfPost}</div>\n                    <div className='profile_reponse_amt'>Response to Posts: {amtOfResponse}</div>\n                </div>\n\n\n            </div>\n\n        )\n    }\n}\n\nexport default Profile;","/Users/shanesharareh/Desktop/App Academy/TBD2/TBDeveloped/frontend/src/components/session/signup_form.js",[],"/Users/shanesharareh/Desktop/App Academy/TBD2/TBDeveloped/frontend/src/actions/responses_actions.js",[],"/Users/shanesharareh/Desktop/App Academy/TBD2/TBDeveloped/frontend/src/components/resolved/resolved_index.js",[],"/Users/shanesharareh/Desktop/App Academy/TBD2/TBDeveloped/frontend/src/components/question/question_index.js",[],"/Users/shanesharareh/Desktop/App Academy/TBD2/TBDeveloped/frontend/src/util/questions_api_util.js",[],"/Users/shanesharareh/Desktop/App Academy/TBD2/TBDeveloped/frontend/src/actions/messages_actions.js",[],"/Users/shanesharareh/Desktop/App Academy/TBD2/TBDeveloped/frontend/src/components/question/create_question_form_container.js",[],"/Users/shanesharareh/Desktop/App Academy/TBD2/TBDeveloped/frontend/src/components/chatroom/create_room.js",[],"/Users/shanesharareh/Desktop/App Academy/TBD2/TBDeveloped/frontend/src/components/question/update_question_form_container.js",["251"],"/Users/shanesharareh/Desktop/App Academy/TBD2/TBDeveloped/frontend/src/components/messenger/messenger_container.js",[],"/Users/shanesharareh/Desktop/App Academy/TBD2/TBDeveloped/frontend/src/components/answer/answer_index_container.js",[],"/Users/shanesharareh/Desktop/App Academy/TBD2/TBDeveloped/frontend/src/components/answer/answer_index_item_container.js",[],"/Users/shanesharareh/Desktop/App Academy/TBD2/TBDeveloped/frontend/src/components/answer/create_answers_form_container.js",["252"],"import {connect} from 'react-redux'\nimport ResponseForm from './answer_form'\nimport {postResponse} from '../../actions/responses_actions'\nimport {fetchQuestion} from '../../actions/questions_actions'\nimport {fetchUser} from '../../actions/session_actions';\n\nconst mapStateToProps = (state, props,)=> { \n    return (\n    {newResponse: {\n        consultation: '',\n        answer: '',\n        user: state.session.user.id\n    },\n    formType: 'Reply',\n    currentUser: state.entities.currentUser, \n    })\n}\n\nconst mapDispatchToProps = dispatch => ({\n    processForm: (questionID, newResponse) => dispatch(postResponse(questionID, newResponse)),\n    fetchUser: () => dispatch(fetchUser())\n\n})\n\nexport default connect(mapStateToProps,mapDispatchToProps)(ResponseForm)","/Users/shanesharareh/Desktop/App Academy/TBD2/TBDeveloped/frontend/src/components/messenger/messenger.js",["253"],"/Users/shanesharareh/Desktop/App Academy/TBD2/TBDeveloped/frontend/src/util/responses_api_util.js",[],"/Users/shanesharareh/Desktop/App Academy/TBD2/TBDeveloped/frontend/src/util/messages_api_util.js",[],"/Users/shanesharareh/Desktop/App Academy/TBD2/TBDeveloped/frontend/src/components/question/question_form.js",["254"],"/Users/shanesharareh/Desktop/App Academy/TBD2/TBDeveloped/frontend/src/components/answer/answer_form.js",["255"],"import React from 'react'\nimport mongoose from 'mongoose';\nimport '../../assets/stylesheets/answer_form.css'\n\n\nclass ResponseForm extends React.Component{\n    constructor(props){\n        super(props)\n        this.state = {\n            consultation:'',\n            answer: this.props.answer,\n            errors: \"\"\n        }\n        this.submit = this.submit.bind(this)\n        this.update = this.update.bind(this)\n    }\n\n    update(field){\n        return (e) => this.setState({[field]: e.currentTarget.value})\n    }\n\n\n\n    async submit(e){\n\n        e.preventDefault();\n        let newResponse = {\n            user: this.props.user,\n            consultation: this.state.consultation,\n            answer: this.state.answer\n        };\n       \n\n        if(!newResponse.consultation){\n            this.setState({errors: \"please pick a consultation date\"})\n        }\n        else if(!newResponse.answer){\n            this.setState({errors: \"please write out your response\"})\n\n        }\n        else {\n            await this.props.processForm(this.props.questionID, newResponse)\n            this.props.fetchQuestion(this.props.questionID)\n            //clear errors and form fields\n            this.setState({errors: \"\"})\n            this.setState({consultation: \"\"})\n            this.setState({answer: \"\"})\n\n         \n        }\n    }\n    // componentWillReceiveProps(nextProps) {\n    //     this.setState({ errors: nextProps.errors })\n    // }\n\n   \n   \n\n\n    render(){\n          console.log(this.props.currentUser) \n        return(\n            <form className = \"response-form\" onSubmit={this.submit}>\n                <div>\n                    <div className=\"errors\">\n                    <p>{this.state.errors}</p>\n                    </div>\n                <div className=\"respondant-header\">\n                <img className = \"respondants-image\" alt=\"robots\" src={`https://robohash.org/${this.props.currentUser.id}?100x100`} />\n                <label className = \"consoldation-label\">\n                    Consultation Date: <input className =\"response-date\" type=\"date\" value={this.state.consultation} onChange={this.update('consultation')}/>\n                </label>\n                </div>\n                </div>\n                <div>\n                <label>\n                   <textarea className = \"response-text-area\" placeholder=\"Write a Response...\" type='text' value={this.state.answer} onChange={this.update('answer')}/>\n                </label>\n                </div>\n\n                <div>\n                <label>\n                    <button className = \"response-submission-button\" type='submit'>{this.props.formType}</button>\n                </label>\n                </div>\n            </form>\n        )\n    }\n}\n\nexport default ResponseForm ","/Users/shanesharareh/Desktop/App Academy/TBD2/TBDeveloped/frontend/src/components/answer/answer_index.js",["256"],"import React from 'react'\nimport AnswerIndexItemContainer from '../answer/answer_index_item_container'\n\nclass AnswerIndex extends React.Component {\n   constructor(props) {\n       super(props)\n\n\n\n       this.createChat = this.createChat.bind(this);\n   }\n\n   async createChat(questionID, responseID, responseUserID, posterID){\n        let newChat = {\n            questionID: questionID, \n            responseID: responseID, \n            posterID: posterID,\n            responseUserID: responseUserID\n        };\n       await this.props.createChat(newChat);\n        this.props.fetchUser()\n\n   }\n    \n\n\n    render() {\n        let questionID = this.props.questionID;\n        return(\n\n        <div>\n            {this.props.responses.map((response, i) =>{\n                    return(\n                    <div key={i}>\n                        <AnswerIndexItemContainer fetchQuestion={this.props.fetchQuestion}  response={response} questionID = {this.props.questionID} currentUserID={this.props.currentUserID} />\n                        <button className=\"chatButton\" onClick={ () => {this.createChat(questionID, response._id, response.user._id, this.props.posterID)}}> Start a chat with {response.user.username}!</button>\n                    </div>\n                    )\n            })}\n        </div>\n        )\n    }\n}\n\nexport default AnswerIndex\n\n// 'responseID': response._id, 'responseUserID':response.user._id, 'posterID': this.props.posterID\n\n                                \n","/Users/shanesharareh/Desktop/App Academy/TBD2/TBDeveloped/frontend/src/components/answer/answer_index_item.js",[],{"ruleId":"257","severity":1,"message":"258","line":14,"column":8,"nodeType":"259","messageId":"260","endLine":14,"endColumn":12},{"ruleId":"261","replacedBy":"262"},{"ruleId":"263","replacedBy":"264"},{"ruleId":"265","severity":1,"message":"266","line":5,"column":1,"nodeType":"267","endLine":33,"endColumn":2},{"ruleId":"257","severity":1,"message":"268","line":13,"column":14,"nodeType":"259","messageId":"260","endLine":13,"endColumn":19},{"ruleId":"257","severity":1,"message":"269","line":16,"column":15,"nodeType":"259","messageId":"260","endLine":16,"endColumn":22},{"ruleId":"257","severity":1,"message":"270","line":37,"column":11,"nodeType":"259","messageId":"260","endLine":37,"endColumn":22},{"ruleId":"271","severity":1,"message":"272","line":37,"column":32,"nodeType":"273","messageId":"274","endLine":37,"endColumn":43},{"ruleId":"271","severity":1,"message":"272","line":38,"column":31,"nodeType":"273","messageId":"274","endLine":38,"endColumn":42},{"ruleId":"275","severity":1,"message":"276","line":161,"column":8,"nodeType":"277","endLine":161,"endColumn":10,"suggestions":"278"},{"ruleId":"275","severity":1,"message":"279","line":289,"column":7,"nodeType":"277","endLine":289,"endColumn":9,"suggestions":"280"},{"ruleId":"257","severity":1,"message":"281","line":365,"column":11,"nodeType":"259","messageId":"260","endLine":365,"endColumn":23},{"ruleId":"282","severity":1,"message":"283","line":78,"column":59,"nodeType":"284","messageId":"285","endLine":78,"endColumn":60},{"ruleId":"286","severity":1,"message":"287","line":59,"column":21,"nodeType":"288","endLine":59,"endColumn":25},{"ruleId":"289","severity":1,"message":"290","line":83,"column":58,"nodeType":"291","messageId":"292","endLine":83,"endColumn":60},{"ruleId":"257","severity":1,"message":"293","line":40,"column":13,"nodeType":"259","messageId":"260","endLine":40,"endColumn":20},{"ruleId":"289","severity":1,"message":"290","line":133,"column":67,"nodeType":"291","messageId":"292","endLine":133,"endColumn":69},{"ruleId":"294","severity":1,"message":"295","line":9,"column":5,"nodeType":"296","messageId":"297","endLine":11,"endColumn":6},{"ruleId":"257","severity":1,"message":"298","line":4,"column":9,"nodeType":"259","messageId":"260","endLine":4,"endColumn":22},{"ruleId":"275","severity":1,"message":"299","line":73,"column":8,"nodeType":"277","endLine":73,"endColumn":10,"suggestions":"300"},{"ruleId":"257","severity":1,"message":"301","line":2,"column":9,"nodeType":"259","messageId":"260","endLine":2,"endColumn":13},{"ruleId":"257","severity":1,"message":"302","line":2,"column":8,"nodeType":"259","messageId":"260","endLine":2,"endColumn":16},{"ruleId":"257","severity":1,"message":"303","line":3,"column":10,"nodeType":"259","messageId":"260","endLine":3,"endColumn":18},"no-unused-vars","'Room' is defined but never used.","Identifier","unusedVar","no-native-reassign",["304"],"no-negated-in-lhs",["305"],"import/no-anonymous-default-export","Unexpected default export of anonymous function","ExportDefaultDeclaration","'peers' is assigned a value but never used.","'trigger' is assigned a value but never used.","'otherVideos' is assigned a value but never used.","no-array-constructor","The array literal notation [] is preferable.","NewExpression","preferLiteral","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'callUser', 'handleRecieveCall', 'props.match.params.roomID', and 'props.user'. Either include them or remove the dependency array.","ArrayExpression",["306"],"React Hook useEffect has a missing dependency: 'stopStreamedVideo'. Either include it or remove the dependency array.",["307"],"'hangUpButton' is assigned a value but never used.","no-sequences","Unexpected use of comma operator.","SequenceExpression","unexpectedCommaExpression","jsx-a11y/heading-has-content","Headings must have content and the content must be accessible by a screen reader.","JSXOpeningElement","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","'boolean' is assigned a value but never used.","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","'fetchQuestion' is defined but never used.","React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.",["308"],"'Link' is defined but never used.","'mongoose' is defined but never used.","'allUsers' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"309","fix":"310"},{"desc":"311","fix":"312"},{"desc":"313","fix":"314"},"Update the dependencies array to be: [callUser, handleRecieveCall, props.match.params.roomID, props.user]",{"range":"315","text":"316"},"Update the dependencies array to be: [stopStreamedVideo]",{"range":"317","text":"318"},"Update the dependencies array to be: [props]",{"range":"319","text":"320"},[5970,5972],"[callUser, handleRecieveCall, props.match.params.roomID, props.user]",[10779,10781],"[stopStreamedVideo]",[1881,1883],"[props]"]