[{"/Users/codingCoding/Desktop/TBDeveloped/frontend/src/index.js":"1","/Users/codingCoding/Desktop/TBDeveloped/frontend/src/components/root.js":"2","/Users/codingCoding/Desktop/TBDeveloped/frontend/src/util/session_api_util.js":"3","/Users/codingCoding/Desktop/TBDeveloped/frontend/src/store/store.js":"4","/Users/codingCoding/Desktop/TBDeveloped/frontend/src/actions/questions_actions.js":"5","/Users/codingCoding/Desktop/TBDeveloped/frontend/src/actions/session_actions.js":"6","/Users/codingCoding/Desktop/TBDeveloped/frontend/src/components/app.js":"7","/Users/codingCoding/Desktop/TBDeveloped/frontend/src/util/questions_api_util.js":"8","/Users/codingCoding/Desktop/TBDeveloped/frontend/src/reducers/root_reducer.js":"9","/Users/codingCoding/Desktop/TBDeveloped/frontend/src/util/route_util.js":"10","/Users/codingCoding/Desktop/TBDeveloped/frontend/src/reducers/session_reducer.js":"11","/Users/codingCoding/Desktop/TBDeveloped/frontend/src/reducers/errors_reducer.js":"12","/Users/codingCoding/Desktop/TBDeveloped/frontend/src/reducers/entities_reducer.js":"13","/Users/codingCoding/Desktop/TBDeveloped/frontend/src/components/nav/navbar_container.js":"14","/Users/codingCoding/Desktop/TBDeveloped/frontend/src/components/bulletin_board/bulletin_board_container.js":"15","/Users/codingCoding/Desktop/TBDeveloped/frontend/src/components/question/question_show_container.js":"16","/Users/codingCoding/Desktop/TBDeveloped/frontend/src/components/resolved/resolved_show_container.js":"17","/Users/codingCoding/Desktop/TBDeveloped/frontend/src/components/session/login_form_container.js":"18","/Users/codingCoding/Desktop/TBDeveloped/frontend/src/components/session/signup_form_container.js":"19","/Users/codingCoding/Desktop/TBDeveloped/frontend/src/components/main/main_page.js":"20","/Users/codingCoding/Desktop/TBDeveloped/frontend/src/components/profile/profile_container.js":"21","/Users/codingCoding/Desktop/TBDeveloped/frontend/src/components/chatroom/room.js":"22","/Users/codingCoding/Desktop/TBDeveloped/frontend/src/reducers/session_errors_reducer.js":"23","/Users/codingCoding/Desktop/TBDeveloped/frontend/src/reducers/responses_errors_reducer.js":"24","/Users/codingCoding/Desktop/TBDeveloped/frontend/src/reducers/questions_errors_reducer.js":"25","/Users/codingCoding/Desktop/TBDeveloped/frontend/src/reducers/questions_reducer.js":"26","/Users/codingCoding/Desktop/TBDeveloped/frontend/src/reducers/responses_reducer.js":"27","/Users/codingCoding/Desktop/TBDeveloped/frontend/src/components/bulletin_board/bulletin_board.js":"28","/Users/codingCoding/Desktop/TBDeveloped/frontend/src/components/resolved/resolved_show.js":"29","/Users/codingCoding/Desktop/TBDeveloped/frontend/src/components/session/login_form.js":"30","/Users/codingCoding/Desktop/TBDeveloped/frontend/src/components/profile/profile.js":"31","/Users/codingCoding/Desktop/TBDeveloped/frontend/src/components/nav/navbar.js":"32","/Users/codingCoding/Desktop/TBDeveloped/frontend/src/components/question/question_show.js":"33","/Users/codingCoding/Desktop/TBDeveloped/frontend/src/components/session/signup_form.js":"34","/Users/codingCoding/Desktop/TBDeveloped/frontend/src/actions/responses_actions.js":"35","/Users/codingCoding/Desktop/TBDeveloped/frontend/src/components/question/question_index.js":"36","/Users/codingCoding/Desktop/TBDeveloped/frontend/src/components/resolved/resolved_index.js":"37","/Users/codingCoding/Desktop/TBDeveloped/frontend/src/components/question/create_question_form_container.js":"38","/Users/codingCoding/Desktop/TBDeveloped/frontend/src/components/chatroom/create_room.js":"39","/Users/codingCoding/Desktop/TBDeveloped/frontend/src/components/question/update_question_form_container.js":"40","/Users/codingCoding/Desktop/TBDeveloped/frontend/src/util/responses_api_util.js":"41","/Users/codingCoding/Desktop/TBDeveloped/frontend/src/components/question/question_form.js":"42","/Users/codingCoding/Desktop/TBDeveloped/frontend/src/reducers/profile_reducer.js":"43","/Users/codingCoding/Desktop/TBDeveloped/frontend/src/components/answer/answer_index_container.js":"44","/Users/codingCoding/Desktop/TBDeveloped/frontend/src/components/answer/answer_index_item_container.js":"45","/Users/codingCoding/Desktop/TBDeveloped/frontend/src/components/answer/create_answers_form_container.js":"46","/Users/codingCoding/Desktop/TBDeveloped/frontend/src/components/answer/answer_index.js":"47","/Users/codingCoding/Desktop/TBDeveloped/frontend/src/components/answer/answer_index_item.js":"48","/Users/codingCoding/Desktop/TBDeveloped/frontend/src/components/answer/answer_form.js":"49"},{"size":1470,"mtime":1609720976520,"results":"50","hashOfConfig":"51"},{"size":286,"mtime":1609277864711,"results":"52","hashOfConfig":"51"},{"size":421,"mtime":1609279000111,"results":"53","hashOfConfig":"51"},{"size":327,"mtime":1609279000104,"results":"54","hashOfConfig":"51"},{"size":2877,"mtime":1609720976448,"results":"55","hashOfConfig":"51"},{"size":1587,"mtime":1609720976451,"results":"56","hashOfConfig":"51"},{"size":1432,"mtime":1609621669355,"results":"57","hashOfConfig":"51"},{"size":696,"mtime":1609720976601,"results":"58","hashOfConfig":"51"},{"size":272,"mtime":1609533765332,"results":"59","hashOfConfig":"51"},{"size":1237,"mtime":1609533765349,"results":"60","hashOfConfig":"51"},{"size":788,"mtime":1609279000083,"results":"61","hashOfConfig":"51"},{"size":383,"mtime":1609533765294,"results":"62","hashOfConfig":"51"},{"size":325,"mtime":1609720976527,"results":"63","hashOfConfig":"51"},{"size":283,"mtime":1609278999742,"results":"64","hashOfConfig":"51"},{"size":466,"mtime":1609720976468,"results":"65","hashOfConfig":"51"},{"size":1017,"mtime":1609660884771,"results":"66","hashOfConfig":"51"},{"size":877,"mtime":1609533765278,"results":"67","hashOfConfig":"51"},{"size":513,"mtime":1609720976501,"results":"68","hashOfConfig":"51"},{"size":623,"mtime":1609720976515,"results":"69","hashOfConfig":"51"},{"size":5797,"mtime":1609720976473,"results":"70","hashOfConfig":"51"},{"size":499,"mtime":1609720976482,"results":"71","hashOfConfig":"51"},{"size":15041,"mtime":1609720976471,"results":"72","hashOfConfig":"51"},{"size":487,"mtime":1609720976598,"results":"73","hashOfConfig":"51"},{"size":354,"mtime":1609533765300,"results":"74","hashOfConfig":"51"},{"size":354,"mtime":1609533765296,"results":"75","hashOfConfig":"51"},{"size":847,"mtime":1609720976533,"results":"76","hashOfConfig":"51"},{"size":565,"mtime":1609720976591,"results":"77","hashOfConfig":"51"},{"size":1867,"mtime":1609720976466,"results":"78","hashOfConfig":"51"},{"size":1003,"mtime":1609533765277,"results":"79","hashOfConfig":"51"},{"size":1611,"mtime":1609720976499,"results":"80","hashOfConfig":"51"},{"size":2445,"mtime":1609720976479,"results":"81","hashOfConfig":"51"},{"size":3228,"mtime":1609720976476,"results":"82","hashOfConfig":"51"},{"size":5946,"mtime":1609720976493,"results":"83","hashOfConfig":"51"},{"size":7095,"mtime":1609720976510,"results":"84","hashOfConfig":"51"},{"size":1155,"mtime":1609720976450,"results":"85","hashOfConfig":"51"},{"size":903,"mtime":1609533765246,"results":"86","hashOfConfig":"51"},{"size":699,"mtime":1609533765267,"results":"87","hashOfConfig":"51"},{"size":583,"mtime":1609720976485,"results":"88","hashOfConfig":"51"},{"size":454,"mtime":1609660884758,"results":"89","hashOfConfig":"51"},{"size":1094,"mtime":1609720976495,"results":"90","hashOfConfig":"51"},{"size":813,"mtime":1609720976605,"results":"91","hashOfConfig":"51"},{"size":4102,"mtime":1609720976487,"results":"92","hashOfConfig":"51"},{"size":297,"mtime":1609720976528,"results":"93","hashOfConfig":"51"},{"size":484,"mtime":1609720976459,"results":"94","hashOfConfig":"51"},{"size":551,"mtime":1609720976461,"results":"95","hashOfConfig":"51"},{"size":613,"mtime":1609720976463,"results":"96","hashOfConfig":"51"},{"size":727,"mtime":1609720976456,"results":"97","hashOfConfig":"51"},{"size":1037,"mtime":1609720976460,"results":"98","hashOfConfig":"51"},{"size":2272,"mtime":1609720976454,"results":"99","hashOfConfig":"51"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"1s3780i",{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"123","usedDeprecatedRules":"104"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"142","usedDeprecatedRules":"104"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"147","usedDeprecatedRules":"104"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"168","usedDeprecatedRules":"104"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"185","usedDeprecatedRules":"104"},{"filePath":"186","messages":"187","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"190","messages":"191","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"192","messages":"193","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"194","messages":"195","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"196","messages":"197","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"198","usedDeprecatedRules":"104"},{"filePath":"199","messages":"200","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"201","usedDeprecatedRules":"104"},{"filePath":"202","messages":"203","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"204","messages":"205","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"206","usedDeprecatedRules":"104"},"/Users/codingCoding/Desktop/TBDeveloped/frontend/src/index.js",["207"],"/Users/codingCoding/Desktop/TBDeveloped/frontend/src/components/root.js",[],["208","209"],"/Users/codingCoding/Desktop/TBDeveloped/frontend/src/util/session_api_util.js",[],"/Users/codingCoding/Desktop/TBDeveloped/frontend/src/store/store.js",[],"/Users/codingCoding/Desktop/TBDeveloped/frontend/src/actions/questions_actions.js",[],"/Users/codingCoding/Desktop/TBDeveloped/frontend/src/actions/session_actions.js",[],"/Users/codingCoding/Desktop/TBDeveloped/frontend/src/components/app.js",[],"/Users/codingCoding/Desktop/TBDeveloped/frontend/src/util/questions_api_util.js",[],"/Users/codingCoding/Desktop/TBDeveloped/frontend/src/reducers/root_reducer.js",[],"/Users/codingCoding/Desktop/TBDeveloped/frontend/src/util/route_util.js",[],"/Users/codingCoding/Desktop/TBDeveloped/frontend/src/reducers/session_reducer.js",["210"],"import { RECEIVE_CURRENT_USER, RECEIVE_USER_LOGOUT, RECEIVE_USER_SIGN_IN} from '../actions/session_actions'\n\nconst initialState = { isAuthenticated: false, user: {} };\n\nexport default function(state = initialState, action) {\n\n    switch (action.type) {\n        case RECEIVE_CURRENT_USER:\n            return { \n                ...state,\n                isAuthenticated: !!action.currentUser,\n                user: action.currentUser\n            };\n            \n        case RECEIVE_USER_SIGN_IN:\n            return { \n                ...state,\n                isSignedIn: true\n            }\n\n        case RECEIVE_USER_LOGOUT:\n            return {\n            isAuthenticated: false,\n            user: undefined\n            };\n\n        default:\n            return state;\n\n        \n    }\n\n}\n","/Users/codingCoding/Desktop/TBDeveloped/frontend/src/reducers/errors_reducer.js",[],"/Users/codingCoding/Desktop/TBDeveloped/frontend/src/reducers/entities_reducer.js",[],"/Users/codingCoding/Desktop/TBDeveloped/frontend/src/components/nav/navbar_container.js",[],"/Users/codingCoding/Desktop/TBDeveloped/frontend/src/components/bulletin_board/bulletin_board_container.js",[],"/Users/codingCoding/Desktop/TBDeveloped/frontend/src/components/question/question_show_container.js",[],"/Users/codingCoding/Desktop/TBDeveloped/frontend/src/components/resolved/resolved_show_container.js",[],"/Users/codingCoding/Desktop/TBDeveloped/frontend/src/components/session/login_form_container.js",[],"/Users/codingCoding/Desktop/TBDeveloped/frontend/src/components/session/signup_form_container.js",[],"/Users/codingCoding/Desktop/TBDeveloped/frontend/src/components/main/main_page.js",["211","212","213","214","215","216","217","218","219"],"import React from 'react';\nimport { Link } from 'react-router-dom'\nimport '../../assets/stylesheets/main.scss';\nimport splash from '../../assets/images/splash.jpg';\nimport gitty from '../../assets/images/gitty.png';\nimport linkedn from '../../assets/images/linkedn.png';\n\n\nclass MainPage extends React.Component {\n\n    render() {\n        return (\n            <div className='main_container'>\n\n                <div className='main_content'>\n                    <div className=\"main_content_left\">\n                        <div>\n                            <h1 className='welcome-tag'>Meet your Developer</h1>\n                        </div>\n                        <div className='welcome-sent'>\n                            <p>Finding the right team for your web idea can be hard, messy, complicated… That’s why we made TBDeveloped — a place where people can meet and get work done, together!</p>\n                        </div>\n                        <div>\n                            <Link to={'/signup'} className='signupButton'>TRY FOR FREE</Link>\n                        </div>\n                    </div>\n\n                    <div className=\"image_top_container\">\n                        <div className='splash_img'>\n                            <img alt=\"\" src={splash} />\n                        </div>\n                    </div>\n\n                </div>\n                \n\n\n\n                <div className=\"footer_top_container\">\n\n                    <div className='footer_sent_container'>\n                        <div className=\"footer_sent\">\n                            Choose a better way to work\n                        </div>\n                        <div className='freeTrial_container'>\n                            <Link to={'/signup'} className='footer_freeTrial'>TRY FOR FREE</Link>\n                        </div>\n\n                        <div className='social'>Social</div>\n                        <div className='social_links'>\n                            <div>\n                                <div className='name-space'>Oliver\n                                <div className='individual_info'>\n                                    <div className='info_align'>\n                                        <img alt=\"\" src={gitty} />\n                                        <a href='https://github.com/oli223lopez'>Github</a>\n                                    </div>\n                                    <div className='info_align'>\n                                        <img alt=\"\" src={linkedn} />\n                                        <a href='https://www.linkedin.com/in/oliverlopez23/'>Linkedin</a>\n                                    </div>\n                                </div>\n                                </div>\n                            </div>\n                            <div>\n                                <div className='name-space'>Shane\n                                    <div className='individual_info'>\n                                        <div className='info_align'>\n                                            <img alt=\"\" src={gitty} />\n                                            <a href='https://github.com/ShaneSharareh'>Github</a>\n                                        </div>\n                                        <div className='info_align'>\n                                            <img alt=\"\" src={linkedn} />\n                                            <a href='https://www.linkedin.com/in/shanesharareh/'>Linkedin</a>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                            <div>\n                                <div className='name-space'>Thomas\n                                    <div className='individual_info'>\n                                        <div className='info_align'>\n                                            <img alt=\"\" src={gitty} />\n                                            <a href='https://github.com/tom-cheung'>Github</a>\n                                        </div>\n                                        <div className='info_align'>\n                                            <img alt=\"\" src={linkedn} />\n                                            <a href='https://www.linkedin.com/in/thomas-cheung-38953034/'>Linkedin</a>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                            <div>\n                                <div className='name-space'>William\n                                    <div className='individual_info'>\n                                        <div className='info_align'>\n                                            <img alt=\"\" src={gitty} />\n                                            <a href='https://github.com/1071919wl'>Github</a>\n                                        </div>\n                                        <div className='info_align'>\n                                            <img alt=\"\" src={linkedn} />\n                                            <a href='https://www.linkedin.com/in/william-leung-60589a73/'>Linkedin</a>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n\n                    </div>\n\n                </div>\n\n                <footer className='footer_container'>\n                    <div className='copyRight'>\n                        <div>Copyright &copy; 2020 TBDeveloped</div>\n                    </div>\n                    \n                </footer>\n            </div>\n        );\n    }\n}\n\nexport default MainPage;","/Users/codingCoding/Desktop/TBDeveloped/frontend/src/components/profile/profile_container.js",[],"/Users/codingCoding/Desktop/TBDeveloped/frontend/src/components/chatroom/room.js",["220","221","222","223","224","225","226","227"],"import React, { useState, useRef, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport io from \"socket.io-client\";\nimport '../../assets/stylesheets/reset.css';\nimport '../../assets/stylesheets/room.scss';\n\n\n\nconst Room = (props) => {\n\n\n    //!TEST\n        let [peers, setPeers] = useState([]);\n        const [mute, setMute] = useState('Mute');\n        const [video, setVideo] = useState('Video Off');\n    //!TEST\n        // const [test, setTest] = useState(0);\n\n\n    //!TEST\n        \n        \n    // const [mute, setMute] = useState('Mute'); \n    // const [video, setVideo] = useState('Video Off');\n\n    const userVideo = useRef(); //for video html\n    const partnerVideo = useRef(); //for video html\n    const peerRef = useRef(); //rtc peerConnection\n    const socketRef = useRef();\n    const otherUser = useRef(); //otherUser - generated ID\n    const userStream = useRef();\n    // const setPeers = useRef();\n    \n\n    // 1/1/21 test\n    const otherVideos = useRef(new Array());\n    const otherUsers = useRef(new Array()); \n    // const peers = useRef(new Object()); \n    // 1/1/21 test\n\n    useEffect(() => {\n\n        navigator.mediaDevices.getUserMedia({ audio: true, video: true }).then(MediaStream => {\n            userVideo.current.srcObject = MediaStream;\n            userStream.current = MediaStream;\n\n            socketRef.current = io.connect(\"/\");\n            console.log(socketRef.current)\n\n            socketRef.current.emit(\"join room\", props.match.params.roomID);\n            \n\n            // has the socket emit this event, this event is caught by the server. I believe there's some \n            // 'long polling' involved. Interesting because the connection happens while this is on localhost 3000\n            // and the server is on 5000  \n\n        \n            // i believe the below code only runs when the events happen, after the above event is emitted\n            // it triggers a slew of events on the server side \n            socketRef.current.on('other user', userID => {\n                callUser(userID);\n                otherUser.current = userID;\n                console.log('user A is in the room already', userID)\n\n\n                // 1/1/21 test\n                otherUsers.current.push(userID) \n                    // may have to concat in a situation where a user joins \n                    // and there are multiple existing users\n                    // they would have to make a call to each of the existing users\n\n                // otherUsers.current.forEach( (user) => {\n                //     callUser(user)\n                // })\n\n                // 1/1/21 test\n            });\n\n            // the above event is emitted from the server back to the client who created a chatroom, it basically \n            // it basically says to the user, hey there's someone in this room \n            // likely whats happening is someone clicked on a room link and this component mounts and they're alerted\n            // that there's another user, and also given the other users socket id \n            // so if the above happens then two users are sitting in the same room. \n            // but their sockets need to connect \n            // this i where the callUser function comes in. Essentially it calls the OTHER USER  \n\n            socketRef.current.on(\"user joined\", userID => {\n\n                otherUser.current = userID;\n\n                // 1/1/21 test\n                otherUsers.current.push(userID)\n                // this may not need concat because it should only\n                // be one user being added at a time \n                // this is from the perspective of existing users in the room \n                // 1/1/21 test\n\n                console.log('other user joined room')\n            });\n\n            socketRef.current.emit(\"user joined\", userID => {\n                otherUser.current = userID;\n                console.log('user B just joined the room', userID)\n\n            });\n            \n\n\n            //!TEST - WL - trying to remove video on meeting exit\n            socketRef.current.on( \"user left\", id => {\n                const peerObj = peerRef.current.find(p => p.peerID === id);\n                if (peerObj){\n                    peerObj.peer.destroy();\n                }\n                const peers = peerRef.current.filter(p => p.peerID !== id);\n                peerRef.current = peers;\n                setPeers(peers); //state\n\n            })\n            // finding the peer, destorying the peer, and removing it from the array\n            // socketRef.current.on(\"disconnect\", () => {\n            //     console.log('dIsCoNnEcTeD')\n                \n            // });\n\n            // socketRef.current.on( \"user-disconnected\", room => {\n            //     console.log('room', room)\n                // const peerObj = peerRef.current.find(p => p.peerID === id);\n                // if (peerObj){\n                //     peerObj.peer.destroy();\n                // }\n                // const peers = peerRef.current.filter(p => p.peerID !== id);\n                // peerRef.current = peers;\n                // setPeers(peers); //state\n\n            // })\n            //finding the peer, destorying the peer, and removing it from the array\n            //!TEST\n\n            socketRef.current.on(\"offer\", handleRecieveCall);\n\n            socketRef.current.on(\"answer\", handleAnswer);\n\n            socketRef.current.on(\"ice-candidate\", handleNewICECandidateMsg);\n\n            // 1/1/21 test\n            socketRef.current.on(\"killconnection\", killIt);\n            // 1/1/21 test\n        });\n\n    }, []);\n\n  \n\n    function callUser(userID) {\n        peerRef.current = createPeer(userID); \n        // userID is the socket.id of the OTHER PERSON in the room \n        // it is used in the createPeer function and set to the peerRef hook  \n        userStream.current.getTracks().forEach(track => peerRef.current.addTrack(track, userStream.current));\n        //giving our peer individual access to our stream so they can view on their end\n    }\n\n\n        // 1/1/21 test\n            // peerRef.current = {};\n            // peerRef.current[userID] = createPeer(userID)\n        // 1/1/21 test\n    // }   \n    // userStream.current was set to the MediaStream above\n    // i imagine i\n\n    function createPeer(userID) {\n        const peer = new RTCPeerConnection({\n            iceServers: [\n                {\n                    urls: \"stun:stun.stunprotocol.org\"\n                },\n                {\n                    urls: 'turn:numb.viagenie.ca',\n                    credential: 'muazkh',\n                    username: 'webrtc@live.com'\n                },\n            ]\n        }); \n        // this constructor takes in an array of objects, these objects are servers which allow peers to connect, should \n        // use your own, look into creating one \n\n        peer.onicecandidate = handleICECandidateEvent;\n        peer.ontrack = handleTrackEvent;\n        peer.onnegotiationneeded = () => handleNegotiationNeededEvent(userID);\n\n        return peer;\n\n        // still in the process of calling the other user/ connecting to the other users socket \n        //starts off by instantiating a RTCPeerConnection, this is used to connect two peers and maintain the connection\n\n    }\n\n    function handleNegotiationNeededEvent(userID) {\n        peerRef.current.createOffer().then(offer => { // createOffer is a RTCPeerConnection method\n            return peerRef.current.setLocalDescription(offer);\n        }).then(() => {\n            const payload = {\n                target: userID,\n                caller: socketRef.current.id,\n                sdp: peerRef.current.localDescription\n            };\n            socketRef.current.emit(\"offer\", payload);\n        }).catch(e => console.log(e));\n    }\n\n    function handleRecieveCall(incoming) {\n        peerRef.current = createPeer();\n        const desc = new RTCSessionDescription(incoming.sdp);\n        peerRef.current.setRemoteDescription(desc).then(() => {\n            userStream.current.getTracks().forEach(track => peerRef.current.addTrack(track, userStream.current));\n        }).then(() => {\n            return peerRef.current.createAnswer();\n        }).then(answer => {\n            return peerRef.current.setLocalDescription(answer);\n        }).then(() => {\n            const payload = {\n                target: incoming.caller,\n                caller: socketRef.current.id,\n                sdp: peerRef.current.localDescription\n            }\n            socketRef.current.emit(\"answer\", payload);\n        })\n    } // this function is handling events related to someone calling the user \n\n    function handleAnswer(message) {\n        const desc = new RTCSessionDescription(message.sdp);\n        peerRef.current.setRemoteDescription(desc).catch(e => console.log(e));\n    } \n\n    // this handles answers both for the caller and the callee because it essentially to establish the connection it needs to \n\n    function handleICECandidateEvent(e) {\n        if (e.candidate) { // is e.candidate the current user / client \n            const payload = {\n                target: otherUser.current,\n                candidate: e.candidate, // this e.candidate is like a ICE config used to establish an RTCPeerConnection\n            }\n            socketRef.current.emit(\"ice-candidate\", payload);\n        }\n    }\n\n    function handleNewICECandidateMsg(incoming) { // incoming maybe whoever is calling \n        const candidate = new RTCIceCandidate(incoming);\n\n        peerRef.current.addIceCandidate(candidate) \n            .catch(e => console.log(e));\n    } // one perspective is from the user you're calling, the other user. Adds this icecandidate to it's peerRef as a key value pair? \n\n    function handleTrackEvent(e) {\n        partnerVideo.current.srcObject = e.streams[0];\n\n    }; // creating a video for the person you're calling? \n\n\n    function hangUp(e) {\n        console.log(peerRef.current)\n        console.log(socketRef.current)\n        console.log(\"make this hangup button\")\n        socketRef.current.emit(\"hang up\")\n        console.log(userVideo.current)\n        let vid = document.getElementById(\"myVideo\")\n        vid.parentNode.removeChild(vid);\n        console.log('final step?')\n    };\n\n\n\n    //cuts connection when user leaves page\n    useEffect(() => {\n        return () => {\n            stopStreamedVideo()\n        }\n    },[])\n\n    \n\n    //! VIDEO function\n    const playStop = () => {\n        let enabled = userVideo.current.srcObject.getVideoTracks()[0].enabled;\n        if(enabled){\n            userVideo.current.srcObject.getVideoTracks()[0].enabled = false;\n            // console.log('false', enabled)\n            setVideo('Video On')\n        }else{\n            userVideo.current.srcObject.getVideoTracks()[0].enabled = true;\n            // console.log('true', enabled)\n            setVideo('Video Off')\n        }\n    }\n\n    //! Cut connection of the person leaving page - media stream only.\n    const stopStreamedVideo = () => {\n        const tracks = userStream.current.getTracks();\n        // console.log(tracks);\n        \n        //!TEST - WL  - Intent here is the black the screen whenever some oneleaves\n        // let enabled = userVideo.current.srcObject.getVideoTracks()[0].enabled;\n        // if(enabled){\n        //     userVideo.current.srcObject.getVideoTracks()[0].enabled = false;\n        // }\n        //!TEST\n        // userVideo.current.srcObject.getVideoTracks()[0].enabled = true;\n\n        //note - stream.stop() is deprecated. Do not use\n        tracks.forEach(function(track) {\n            track.stop();\n            \n        });\n        //! @TOM FYI ADDING IT TO THIS BUTTON\n        testFeatures()\n        // props.history.goBack()\n        // console.log(props.history)\n    }\n\n\n    //! MUTE function\n    const muteStream = () => {\n        const enabled = userVideo.current.srcObject.getAudioTracks()[0].enabled;\n        if(enabled){\n            userVideo.current.srcObject.getAudioTracks()[0].enabled = false;\n            setMute('Unmute')\n            // console.log('false', enabled)\n            // console.log(peerRef)\n            // console.log(peerRef.current)\n            // console.log(userStream)\n            // console.log(userStream.current)\n            \n\n\n        }else {\n            userVideo.current.srcObject.getAudioTracks()[0].enabled = true;\n            // console.log('true', enabled)\n            setMute('Mute')\n            // console.log(props)\n\n        }\n    }\n    \n    // function muteStream() {\n    //     const tracks = userStream.current.getAudioTracks();\n    //     //note - stream.stop() is deprecated. Do not use\n    //     console.log('audio', tracks)\n    //     tracks.forEach(function(track) {\n    //         track.stop();\n    //     });\n    //     console.log('audio', tracks)\n\n    // }\n    const hangUpButton = () => {\n        onLeave();\n    }\n\n    function onLeave() {\n        userVideo.current.srcObject = null;\n        console.log(peerRef.current)\n        partnerVideo.current.srcObject = null;\n        peerRef.current.close();\n        console.log(peerRef.current)\n        peerRef.current.onicecandidate = null;\n        peerRef.current.onaddstream = null;\n        createPeer()\n    };\n\n    // 1/1/21 test\n      const killIt = () => {\n        console.log(\"reading loud and clear\")\n        peerRef.current.close()\n    }\n    // 1/1/21 test\n\n    const testFeatures = () => {\n        // peerRef.current.close(); // works but only if there is a peerRef (only if a connection has been established)\n        //!@TOM added this conditional for your above comment\n        if (peerRef.current){\n            socketRef.current.emit(\"hangUp\", otherUser.current)\n            peerRef.current.close()\n\n        }\n\n    }\n    \n   \n    \n    return (\n        <div className='room_container'>\n            {/* button below now functions with leave meeting */}\n            {/* <button onClick={() => testFeatures()}>Test Button</button> */}\n\n            <div className=\"main\">\n                <div className=\"main_videos\">\n                    <div id=\"video-grid\">\n                        <div>\n                            <video id=\"myVideo\" autoPlay ref={userVideo} muted/>\n                        </div>\n                        <div>\n                            <video autoPlay ref={partnerVideo} />\n                        </div>\n                    </div>\n                </div>\n                <div className=\"main_controls_container\">\n                    <div className='main_controls'>\n                        <div>\n                            <button onClick={() => muteStream()}>{mute}</button> \n                            <button onClick={() => playStop()}>{video}</button>  \n                        </div>\n                        <div>\n                            <Link to='/'>\n                                <button onClick={() => stopStreamedVideo()}>Leave Meeting</button>  \n                            </Link>\n\n                        </div>\n                    </div>\n                </div>   \n            </div>\n\n        </div>\n    );\n};\n\nexport default Room;","/Users/codingCoding/Desktop/TBDeveloped/frontend/src/reducers/session_errors_reducer.js",[],"/Users/codingCoding/Desktop/TBDeveloped/frontend/src/reducers/responses_errors_reducer.js",[],"/Users/codingCoding/Desktop/TBDeveloped/frontend/src/reducers/questions_errors_reducer.js",[],"/Users/codingCoding/Desktop/TBDeveloped/frontend/src/reducers/questions_reducer.js",[],"/Users/codingCoding/Desktop/TBDeveloped/frontend/src/reducers/responses_reducer.js",[],"/Users/codingCoding/Desktop/TBDeveloped/frontend/src/components/bulletin_board/bulletin_board.js",[],"/Users/codingCoding/Desktop/TBDeveloped/frontend/src/components/resolved/resolved_show.js",[],"/Users/codingCoding/Desktop/TBDeveloped/frontend/src/components/session/login_form.js",[],"/Users/codingCoding/Desktop/TBDeveloped/frontend/src/components/profile/profile.js",[],"/Users/codingCoding/Desktop/TBDeveloped/frontend/src/components/nav/navbar.js",["228","229"],"import React from 'react';\nimport { Link } from 'react-router-dom'\nimport '../../assets/stylesheets/reset.css';\nimport '../../assets/stylesheets/navbar.scss';\nimport dino2 from '../../assets/images/dino2.png'\n\n\n\nclass NavBar extends React.Component {\n    constructor(props) {\n        super(props);\n        this.logoutUser = this.logoutUser.bind(this);\n        this.getLinks = this.getLinks.bind(this);\n    }\n\n    logoutUser(e) {\n        e.preventDefault();\n        this.props.logout();\n    }\n\n    // Selectively render links dependent on whether the user is logged in\n    getLinks() {\n        if (this.props.loggedIn) {\n            return (\n                <div>\n                    <Link to={'/profile'}>Profile</Link>\n                    <button onClick={this.logoutUser}>Logout</button>\n                </div>\n            );\n        } else {\n            return (\n                <div className='right-navbar'>\n                    <Link to={'/login'} className='signinButton'>Sign in</Link>\n                    <Link to={'/signup'} className='signupButton'>TRY FOR FREE</Link>\n                </div>\n            );\n        }\n    }\n\n    render() {\n        const tbdevelopedHeader = () => {\n            if(this.props.loggedIn === false){\n                return(\n                    <Link to='/'><h1>TBDeveloped</h1></Link>\n                )\n            }else{\n                return (\n                    <Link to='/bulletin'><h1>TBDeveloped</h1></Link>\n                )\n            }\n        }\n        return (\n\n\n            <div className='navbar-container'>\n                <div className='nav-header-bar'>\n                    <div className='left-navbar'>\n\n                        \n                        <Link to='/'><img alt=\"\" src={dino2} className='brand-icon'/></Link>\n                        <div className='brand-navbar'>{tbdevelopedHeader()}</div>\n\n\n                        \n                        <div className='team-navbar'>About\n                            <div className='team-container'>\n                                <div className='teamInfo-navbar'>\n                                    <div className='teamInfo-group'>\n                                        <div className='individual-member'>\n                                            <div>Oliver Lopez</div>\n                                        </div>\n                                        <div className='individual-member'>\n                                            <div>Shane Sharareh</div>   \n                                        </div>\n                                        <div className='individual-member'>\n                                            <div>Thomas Cheung</div>\n                                        </div>\n                                        <div className='individual-member'>\n                                            <div>William Leung</div>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div> \n\n                    </div>\n\n                    <div>{ this.getLinks()}</div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default NavBar;\n","/Users/codingCoding/Desktop/TBDeveloped/frontend/src/components/question/question_show.js",[],"/Users/codingCoding/Desktop/TBDeveloped/frontend/src/components/session/signup_form.js",[],"/Users/codingCoding/Desktop/TBDeveloped/frontend/src/actions/responses_actions.js",[],"/Users/codingCoding/Desktop/TBDeveloped/frontend/src/components/question/question_index.js",[],"/Users/codingCoding/Desktop/TBDeveloped/frontend/src/components/resolved/resolved_index.js",[],"/Users/codingCoding/Desktop/TBDeveloped/frontend/src/components/question/create_question_form_container.js",[],"/Users/codingCoding/Desktop/TBDeveloped/frontend/src/components/chatroom/create_room.js",[],"/Users/codingCoding/Desktop/TBDeveloped/frontend/src/components/question/update_question_form_container.js",["230"],"import React from 'react'\nimport { connect } from 'react-redux'\nimport { updateQuestion } from '../../actions/questions_actions'\nimport QuestionForm from './question_form'\n\n\nexport class UpdateQuestionForm extends React.Component {\n\n    constructor(props){\n        super(props)\n    }\n\n    componentDidMount() {\n        this.props.receiveReview(this.props.reviewId)\n    }\n\n    render() {\n       const {questionId, subject, content, tag, solved, user} = this.props\n        return (\n            <QuestionForm  \n                questionId = {questionId}\n                subject={subject}\n                content={content}\n                tag={tag}\n                solved={solved}\n                user={user}\n            />\n        );\n    }\n}\n\n\n\nconst mapStateToProps = (state) => {\n    \n    return ({ formType: 'Update Question!', errors: state.errors.questions}\n    )\n}\n\nconst mapDispatchToProps = (dispatch) => ({\n    processForm: (questionId, questionUpdates) => dispatch(updateQuestion(questionId, questionUpdates))\n})\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(QuestionForm)","/Users/codingCoding/Desktop/TBDeveloped/frontend/src/util/responses_api_util.js",[],"/Users/codingCoding/Desktop/TBDeveloped/frontend/src/components/question/question_form.js",[],"/Users/codingCoding/Desktop/TBDeveloped/frontend/src/reducers/profile_reducer.js",[],"/Users/codingCoding/Desktop/TBDeveloped/frontend/src/components/answer/answer_index_container.js",[],"/Users/codingCoding/Desktop/TBDeveloped/frontend/src/components/answer/answer_index_item_container.js",[],"/Users/codingCoding/Desktop/TBDeveloped/frontend/src/components/answer/create_answers_form_container.js",["231"],"import {connect} from 'react-redux'\nimport ResponseForm from './answer_form'\nimport {postResponse} from '../../actions/responses_actions'\nimport {fetchQuestion} from '../../actions/questions_actions'\n\n\nconst mapStateToProps = (state, props,)=> { \n    return (\n    {newResponse: {\n        consultation: '',\n        answer: '',\n        user: state.session.user.id\n    },\n    formType: 'Respond',})\n}\n\nconst mapDispatchToProps = dispatch => ({\n    processForm: (questionID, newResponse) => dispatch(postResponse(questionID, newResponse)),\n\n})\n\nexport default connect(mapStateToProps,mapDispatchToProps)(ResponseForm)","/Users/codingCoding/Desktop/TBDeveloped/frontend/src/components/answer/answer_index.js",["232"],"import React from 'react'\nimport AnswerIndexItemContainer from '../answer/answer_index_item_container'\nclass AnswerIndex extends React.Component {\n\n\n   \n\n\n    \n    render() {\n        let questionID = this.props.questionID;\n        return(\n\n        <div>\n            {this.props.responses.map((response, i) =>{\n                    return(\n                    <div key={i}>\n                        <AnswerIndexItemContainer fetchQuestion = {this.props.fetchQuestion}  response={response} questionID = {this.props.questionID} currentUserID={this.props.currentUserID} />\n                    </div>\n                    )\n            })}\n        </div>\n        )\n    }\n}\n\nexport default AnswerIndex\n\n                                \n","/Users/codingCoding/Desktop/TBDeveloped/frontend/src/components/answer/answer_index_item.js",[],"/Users/codingCoding/Desktop/TBDeveloped/frontend/src/components/answer/answer_form.js",["233"],"import React from 'react'\nimport mongoose from 'mongoose';\n\n\nclass ResponseForm extends React.Component{\n    constructor(props){\n        super(props)\n        this.state = {\n            consultation: this.props.consultation,\n            answer: this.props.answer,\n            errors: \"\"\n        }\n        this.submit = this.submit.bind(this)\n        this.update = this.update.bind(this)\n    }\n\n    update(field){\n        return (e) => this.setState({[field]: e.currentTarget.value})\n    }\n\n\n\n    async submit(e){\n\n        e.preventDefault();\n        let newResponse = {\n            user: this.props.user,\n            consultation: this.state.consultation,\n            answer: this.state.answer\n        };\n       \n\n        if(!newResponse.consultation){\n            this.setState({errors: \"please pick a consultation date\"})\n        }\n        else if(!newResponse.answer){\n            this.setState({errors: \"please write out your response\"})\n\n        }\n        else {\n            await this.props.processForm(this.props.questionID, newResponse)\n            this.props.fetchQuestion(this.props.questionID)\n            //clear errors and form fields\n            this.setState({errors: \"\"})\n            this.setState({consultation: \"\"})\n            this.setState({answer: \"\"})\n\n         \n        }\n    }\n    componentWillReceiveProps(nextProps) {\n        this.setState({ errors: nextProps.errors })\n    }\n\n   \n   \n\n\n    render(){\n        \n        return(\n            <form onSubmit={this.submit}>\n                <div>\n                    <div className=\"errors\">\n                    <p>{this.state.errors}</p>\n                    </div>\n                <label>\n                    consultation: <input type=\"date\" value={this.state.consultation} onChange={this.update('consultation')}/>\n                </label>\n                </div>\n                <div>\n                <label>\n                    answer: <textarea type='text' value={this.state.answer} onChange={this.update('answer')}/>\n                </label>\n                </div>\n\n                <div>\n                <label>\n                    <button type='submit'>{this.props.formType}</button>\n                </label>\n                </div>\n            </form>\n        )\n    }\n}\n\nexport default ResponseForm ",{"ruleId":"234","severity":1,"message":"235","line":13,"column":10,"nodeType":"236","messageId":"237","endLine":13,"endColumn":22},{"ruleId":"238","replacedBy":"239"},{"ruleId":"240","replacedBy":"241"},{"ruleId":"242","severity":1,"message":"243","line":5,"column":1,"nodeType":"244","endLine":33,"endColumn":2},{"ruleId":"245","severity":1,"message":"246","line":30,"column":29,"nodeType":"247","endLine":30,"endColumn":49},{"ruleId":"245","severity":1,"message":"246","line":55,"column":41,"nodeType":"247","endLine":55,"endColumn":60},{"ruleId":"245","severity":1,"message":"246","line":59,"column":41,"nodeType":"247","endLine":59,"endColumn":62},{"ruleId":"245","severity":1,"message":"246","line":69,"column":45,"nodeType":"247","endLine":69,"endColumn":64},{"ruleId":"245","severity":1,"message":"246","line":73,"column":45,"nodeType":"247","endLine":73,"endColumn":66},{"ruleId":"245","severity":1,"message":"246","line":83,"column":45,"nodeType":"247","endLine":83,"endColumn":64},{"ruleId":"245","severity":1,"message":"246","line":87,"column":45,"nodeType":"247","endLine":87,"endColumn":66},{"ruleId":"245","severity":1,"message":"246","line":97,"column":45,"nodeType":"247","endLine":97,"endColumn":64},{"ruleId":"245","severity":1,"message":"246","line":101,"column":45,"nodeType":"247","endLine":101,"endColumn":66},{"ruleId":"234","severity":1,"message":"248","line":23,"column":11,"nodeType":"236","messageId":"237","endLine":23,"endColumn":22},{"ruleId":"249","severity":1,"message":"250","line":23,"column":32,"nodeType":"251","messageId":"252","endLine":23,"endColumn":43},{"ruleId":"249","severity":1,"message":"250","line":24,"column":31,"nodeType":"251","messageId":"252","endLine":24,"endColumn":42},{"ruleId":"234","severity":1,"message":"253","line":25,"column":11,"nodeType":"236","messageId":"237","endLine":25,"endColumn":16},{"ruleId":"254","severity":1,"message":"255","line":25,"column":26,"nodeType":"251","messageId":"252","endLine":25,"endColumn":38},{"ruleId":"256","severity":1,"message":"257","line":102,"column":8,"nodeType":"258","endLine":102,"endColumn":10,"suggestions":"259"},{"ruleId":"234","severity":1,"message":"260","line":212,"column":14,"nodeType":"236","messageId":"237","endLine":212,"endColumn":20},{"ruleId":"256","severity":1,"message":"261","line":230,"column":7,"nodeType":"258","endLine":230,"endColumn":9,"suggestions":"262"},{"ruleId":"234","severity":1,"message":"263","line":7,"column":8,"nodeType":"236","messageId":"237","endLine":7,"endColumn":18},{"ruleId":"245","severity":1,"message":"246","line":46,"column":38,"nodeType":"247","endLine":46,"endColumn":79},{"ruleId":"264","severity":1,"message":"265","line":9,"column":5,"nodeType":"266","messageId":"267","endLine":11,"endColumn":6},{"ruleId":"234","severity":1,"message":"268","line":4,"column":9,"nodeType":"236","messageId":"237","endLine":4,"endColumn":22},{"ruleId":"234","severity":1,"message":"269","line":11,"column":13,"nodeType":"236","messageId":"237","endLine":11,"endColumn":23},{"ruleId":"234","severity":1,"message":"270","line":2,"column":8,"nodeType":"236","messageId":"237","endLine":2,"endColumn":16},"no-unused-vars","'postQuestion' is defined but never used.","Identifier","unusedVar","no-native-reassign",["271"],"no-negated-in-lhs",["272"],"import/no-anonymous-default-export","Unexpected default export of anonymous function","ExportDefaultDeclaration","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'otherVideos' is assigned a value but never used.","no-array-constructor","The array literal notation [] is preferable.","NewExpression","preferLiteral","'peers' is assigned a value but never used.","no-new-object","The object literal notation {} is preferrable.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'callUser', 'handleRecieveCall', and 'props.match.params.roomID'. Either include them or remove the dependency array.","ArrayExpression",["273"],"'hangUp' is defined but never used.","React Hook useEffect has a missing dependency: 'stopStreamedVideo'. Either include it or remove the dependency array.",["274"],"'CreateRoom' is defined but never used.","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","'fetchQuestion' is defined but never used.","'questionID' is assigned a value but never used.","'mongoose' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"275","fix":"276"},{"desc":"277","fix":"278"},"Update the dependencies array to be: [callUser, handleRecieveCall, props.match.params.roomID]",{"range":"279","text":"280"},"Update the dependencies array to be: [stopStreamedVideo]",{"range":"281","text":"282"},[3937,3939],"[callUser, handleRecieveCall, props.match.params.roomID]",[8716,8718],"[stopStreamedVideo]"]